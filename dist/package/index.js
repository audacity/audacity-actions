(()=>{var __webpack_modules__={1990:(e,a,r)=>{const i=r(1184);const n=r(467);const p=r(5008);const o=r(1066);const d=`${workspaceDir}/mac/Audacity.entitlements`;async function signFile(e,a,r){r=r||[];return p.execWithLog("xcrun",["codesign","--verbose=3","--timestamp","--sign",a,"--options","runtime","--entitlements",d,"--force",...r,e])}async function fixupRPath(e){const a=(await p.getExecOutput("otool",["-L",e])).stdout;const r=a.split("\n").filter((e=>e.indexOf("@rpath")!=-1)).map((e=>e.match(/@rpath\/.+\.dylib/)[0]));if(r.length==0){return}const i=(await p.getExecOutput("otool",["-l",e])).stdout.split("\n").map((e=>e.trim())).filter((e=>e.search(/path\s+@(?:executable|loader)_path/)!=-1)).map((e=>e.match(/path\s+(@(?:executable|loader)_path.*)\s+\(/)[1])).map((e=>["-delete_rpath",e])).flat(Infinity);const n=r.map((e=>["-change",e,e.replace("@rpath","@executable_path/../Frameworks")])).flat(Infinity);p.log(`Fixing rpath for ${e}`);return p.execWithLog("install_name_tool",[...n,...i,e])}async function singApp(e,a){if(!a){p.log("Skipping code signings, as there is no codesign identity provided");return}const r=await o.getAudacityMacOSBundleFiles(e);exeFiles=r.MacOS;modules=r.modules;frameworks=r.Frameworks.dylib;binaries=[...exeFiles,...modules,...frameworks];for(const e of binaries){await fixupRPath(e)}for(const e of[...modules]){await signFile(e,a)}await signFile(e,a,["--deep"]);await p.execWithLog("codesign",["--verify","--deep","--verbose=4","--strict",e])}async function signDMG(e,a,r){if(!r){p.log("Skipping code signings, as there is no codesign identity provided");return}await p.execWithLog("xcrun",["codesign","--verbose","--timestamp","--identifier",a,"--sign",r,e])}async function notarizeDMG(e,a,r,i){if(!a||!a||!i){p.log("Skipping notarization, as there are no credentials provided");return}p.log(`Notarizing DMG: ${e}`);const n=await p.getExecOutput("xcrun",["notarytool","submit","--apple-id",a,"--team-id",i,"--password",r,"--output-format","json","--wait",e]);const o=JSON.parse(n.stdout);const d=await p.getExecOutput("xcrun",["notarytool","log","--apple-id",a,"--team-id",i,"--password",r,o["id"]]);p.log(d.stdout);if(o["status"]!="Accepted"){throw Error(`Notarization failed: ${o["status"]}`)}await p.execWithLog("xcrun",["stapler","staple",e]);p.log(`Notarizing was successful: ${e}`)}e.exports={singApp:singApp,signDMG:signDMG,notarizeDMG:notarizeDMG}},4523:(e,a,r)=>{const i=r(2186);e.exports={Alpha:0,Beta:1,Release:2,getBuildLevel:()=>{const e=i.getInput("build_level");const a=e.length>0?e:process.env["AUDACITY_BUILD_LEVEL"];if(a==="beta"){return 1}else if(a==="release"){return 2}else{const e=Number(a);if(Number.isInteger(e)&&e>=0&&e<=2){return e}return 0}},getBuildSuffix:e=>{if(e==1){return"beta"}else if(e==2){return""}else{return"alpha"}}}},3202:(e,a,r)=>{const i=r(5747);const n=r(1371);const p=r(5622);const o=r(1349);const d=r(5008);const s=r(1066);const l=p.join(workspaceDir,"mac","Resources","Audacity-DMG-background.png");async function estimateBundleSize(e){let a=0;for(const r of e){a+=(await i.promises.lstat(r)).size}return a*1.5}async function createTempImage(e,a,r,o){const s=n.template("%s.dmg").writeFileSync("");d.log(s);o.push((async()=>{if(i.existsSync(s)){d.log(`Removing image ${s}`);await i.promises.rm(s)}}));await d.execWithLog("hdiutil",["create",s,"-ov","-format","UDRW","-fs","HFS+","-size",r,"-srcdir",p.dirname(e),"-volname",a]);return s}async function detachImage(e){const a=10;for(let r=1;r<a;++r){try{return await d.execWithLog("hdiutil",["detach",e])}catch(e){d.error(e.message);await d.sleep(2e3*r)}}return await d.execWithLog("hdiutil",["detach",e,"-force"])}async function attachImage(e,a){const r=await d.getExecOutput("hdiutil",["attach",e,"-nobrowse","-noverify","-noautoopen"]);const n=/Apple_HFS\s+(.*)\s*$/.exec(r.stdout);const p=n[1];a.push((async()=>{if(i.existsSync(p)){d.log(`Detaching image ${e} mounted at ${p}`);await detachImage(p)}}));return p}async function copyFiles(e,a,r){a=p.dirname(a);const n=p.join(e,".background");const o=p.join(n,"bg.png");if(!i.existsSync(n)){i.mkdirSync(n)}await i.promises.copyFile(l,o)}async function createLinks(e){await i.promises.symlink("/Applications",p.join(e,"Applications"))}async function createDSStore(e,a){const r=new o;r.vSrn(1);r.setIconSize(72);r.setBackgroundPath(p.join(e,".background","bg.png"));r.setWindowPos(400,100);r.setWindowSize(600,450);r.setIconPos(a,170,350);r.setIconPos("Applications",430,350);await new Promise(((a,i)=>{r.write(p.join(e,".DS_Store"),(e=>{if(e){i(e)}else{a()}}))}))}async function convertDMG(e,a){if(i.existsSync(a)){i.rmSync(a)}await d.execWithLog("hdiutil",["convert",e,"-format","UDZO","-imagekey","zlib-level=9","-o",a])}async function packageDMG(e,a){finalizers=[];const r=p.basename(a,".app");try{const i=await s.listDirectory(a);const n=await estimateBundleSize([...i,l]);const o=await createTempImage(a,r,n,finalizers);const d=await attachImage(o,finalizers);await copyFiles(d,a,i);await createLinks(d);await createDSStore(d,p.basename(a));await detachImage(d);await convertDMG(o,e)}finally{Promise.all(finalizers.slice(0).reverse().map((async e=>e())))}}e.exports={packageDMG:packageDMG}},1066:(e,a,r)=>{const i=r(5747);const n=r(5622);const p=r(8090);helpers=r(5008);const getFilesFromDirectoryRecursive=async e=>{const a=await i.promises.readdir(e);const r=await Promise.all(a.map((async a=>{const r=n.join(e,a);const p=await i.promises.stat(r);if(p.isDirectory()){return getFilesFromDirectoryRecursive(r)}else{return r}})));return r.filter((e=>e.length))};async function globFiles(e){const a=await p.create(Array.isArray(e)?e.join("\n"):e);let r=[];for await(const e of a.globGenerator()){const a=await i.promises.lstat(e);if(a.isSymbolicLink()){continue}r.push(e)}return r}async function listMacosAppsRecursive(e,a){const r=await i.promises.readdir(e);await Promise.all(r.map((async r=>{const p=n.join(e,r);const o=await i.promises.stat(p);if(o.isDirectory()){if(n.extname(r)==".app"){a.push(p)}else{return listMacosAppsRecursive(p,a)}}})))}async function getAudacityMacOSBundleFiles(e){bundle={MacOS:[],Frameworks:{dylib:[]},modules:[],misc:[]};const a=(await getFilesFromDirectoryRecursive(e)).flat(Infinity);a.forEach((e=>{if(e.indexOf("Contents/MacOS")!=-1){bundle.MacOS.push(e)}else if(e.indexOf("Contents/Frameworks")!=-1){const a=i.statSync(e);if(a.isSymbolicLink()){bundle.misc.push(e)}else if(a.isFile()){bundle.Frameworks.dylib.push(e)}else{throw Error("Bundled frameworks are not supported")}}else if(e.indexOf("Contents/modules")!=-1){bundle.modules.push(e)}else{bundle.misc.push(e)}}));return bundle}async function copyFile(e,a){const r=n.dirname(a);if(!i.existsSync(r)){i.mkdirSync(r,{recursive:true})}return i.promises.copyFile(e,a)}async function copyFiles(e,a,r){return helpers.awaitAll(a,(async a=>{const i=n.relative(e,a);return copyFile(a,n.join(r,i))}))}async function listMacosApps(e){apps=[];await listMacosAppsRecursive(e,apps);return apps}e.exports={listDirectory:async e=>(await getFilesFromDirectoryRecursive(e)).flat(Infinity),globFiles:globFiles,listMacosApps:listMacosApps,getAudacityMacOSBundleFiles:getAudacityMacOSBundleFiles,copyFile:copyFile,copyFiles:copyFiles}},5008:(e,a,r)=>{const i=r(2186);const n=r(1514);const p=r(5622);const o=r(1711);const d=r(5747);const s=process.env["CI"];global.workspaceDir=process.env["GITHUB_WORKSPACE"];global.conanCachePath=p.join(workspaceDir,".conan");function log(e){if(s){i.info(e)}else{console.log(e)}}function error(e){if(s){i.error(e)}else{console.error(e)}}async function execWithLog(e,arguments){if(s){return n.exec(e,arguments)}else{return n.exec(e,arguments,{listeners:{stdout:e=>{log(e.toString())},stderr:e=>{error(e.toString())}}})}}async function getExecOutput(e,arguments){if(s){return n.getExecOutput(e,arguments)}else{return n.getExecOutput(e,arguments,{listeners:{stdout:e=>{log(e.toString())},stderr:e=>{error(e.toString())}}})}}async function awaitAll(e,a){return await Promise.all(e.map((async e=>a(e))))}async function getMD5(e){const a=await d.promises.readFile(e);return o(a)}function getDateString(){const e=new Date;return[e.getFullYear(),("0"+(e.getMonth()+1)).slice(-2),("0"+e.getDate()).slice(-2)].join("")}const sleep=e=>new Promise((a=>setTimeout(a,e)));process.on("unhandledRejection",((e,a)=>{error(e);i.setFailed(e);process.exit(1)})).on("uncaughtException",(e=>{error(e);i.setFailed(e);process.exit(1)}));e.exports={log:log,error:error,execWithLog:execWithLog,getExecOutput:getExecOutput,sleep:sleep,awaitAll:awaitAll,getMD5:getMD5,getDateString:getDateString}},9070:(e,a,r)=>{const i=r(5622);const n=r(5008);const p=r(1066);const o=r(5747);async function create(e,a){firstBundle=await p.getAudacityMacOSBundleFiles(a[0]);await p.copyFiles(a[0],firstBundle.misc,e);enlprojPath=i.join(e,"Contents","Resources","en.lproj");if(!o.existsSync(enlprojPath)){o.mkdirSync(enlprojPath,{recursive:true})}const r=[...firstBundle.MacOS,...firstBundle.Frameworks.dylib,...firstBundle.modules];return n.awaitAll(r,(r=>{const p=i.relative(a[0],r);const d=a.map((e=>i.join(e,p)));const s=i.join(e,p);const l=i.dirname(s);if(!o.existsSync(l)){o.mkdirSync(l,{recursive:true})}return n.execWithLog("lipo",["-create","-output",s,...d])}))}async function archs(e){const a=i.join(e,"Contents","MacOS");const r=i.join(a,o.readdirSync(a)[0]);return(await n.getExecOutput("lipo",["-archs",r])).stdout.split(/\s+/).map((e=>e.trim())).filter((e=>e.length>0))}async function archSuffix(e){const a=await archs(e);if(a.length==1){return a[0]}else{return"universal"}}e.exports={create:create,archs:archs,archs:archs,archSuffix:archSuffix}},2605:(e,a,r)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});const i=r(8802);function create(){return i.DefaultArtifactClient.create()}a.create=create},8802:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const p=n(r(2186));const o=r(183);const d=r(4354);const s=r(6327);const l=r(8538);const u=r(5686);const m=r(2222);const c=r(5622);class DefaultArtifactClient{static create(){return new DefaultArtifactClient}uploadArtifact(e,a,r,n){return i(this,void 0,void 0,(function*(){s.checkArtifactName(e);const i=o.getUploadSpecification(e,r,a);const l={artifactName:e,artifactItems:[],size:0,failedItems:[]};const u=new d.UploadHttpClient;if(i.length===0){p.warning(`No files found that can be uploaded`)}else{const a=yield u.createArtifactInFileContainer(e,n);if(!a.fileContainerResourceUrl){p.debug(a.toString());throw new Error("No URL provided by the Artifact Service to upload an artifact to")}p.debug(`Upload Resource URL: ${a.fileContainerResourceUrl}`);const r=yield u.uploadArtifactToFileContainer(a.fileContainerResourceUrl,i,n);yield u.patchArtifactSize(r.totalSize,e);p.info(`Finished uploading artifact ${e}. Reported size is ${r.uploadSize} bytes. There were ${r.failedItems.length} items that failed to upload`);l.artifactItems=i.map((e=>e.absoluteFilePath));l.size=r.uploadSize;l.failedItems=r.failedItems}return l}))}downloadArtifact(e,a,r){return i(this,void 0,void 0,(function*(){const i=new l.DownloadHttpClient;const n=yield i.listArtifacts();if(n.count===0){throw new Error(`Unable to find any artifacts for the associated workflow`)}const o=n.value.find((a=>a.name===e));if(!o){throw new Error(`Unable to find an artifact with the name: ${e}`)}const d=yield i.getContainerItems(o.name,o.fileContainerResourceUrl);if(!a){a=m.getWorkSpaceDirectory()}a=c.normalize(a);a=c.resolve(a);const h=u.getDownloadSpecification(e,d.value,a,(r===null||r===void 0?void 0:r.createArtifactFolder)||false);if(h.filesToDownload.length===0){p.info(`No downloadable files were found for the artifact: ${o.name}`)}else{yield s.createDirectoriesForArtifact(h.directoryStructure);p.info("Directory structure has been setup for the artifact");yield s.createEmptyFilesForArtifact(h.emptyFilesToCreate);yield i.downloadSingleArtifact(h.filesToDownload)}return{artifactName:e,downloadPath:h.rootDownloadLocation}}))}downloadAllArtifacts(e){return i(this,void 0,void 0,(function*(){const a=new l.DownloadHttpClient;const r=[];const i=yield a.listArtifacts();if(i.count===0){p.info("Unable to find any artifacts for the associated workflow");return r}if(!e){e=m.getWorkSpaceDirectory()}e=c.normalize(e);e=c.resolve(e);let n=0;while(n<i.count){const o=i.value[n];n+=1;const d=yield a.getContainerItems(o.name,o.fileContainerResourceUrl);const l=u.getDownloadSpecification(o.name,d.value,e,true);if(l.filesToDownload.length===0){p.info(`No downloadable files were found for any artifact ${o.name}`)}else{yield s.createDirectoriesForArtifact(l.directoryStructure);yield s.createEmptyFilesForArtifact(l.emptyFilesToCreate);yield a.downloadSingleArtifact(l.filesToDownload)}r.push({artifactName:o.name,downloadPath:l.rootDownloadLocation})}return r}))}}a.DefaultArtifactClient=DefaultArtifactClient},2222:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function getUploadFileConcurrency(){return 2}a.getUploadFileConcurrency=getUploadFileConcurrency;function getUploadChunkSize(){return 8*1024*1024}a.getUploadChunkSize=getUploadChunkSize;function getRetryLimit(){return 5}a.getRetryLimit=getRetryLimit;function getRetryMultiplier(){return 1.5}a.getRetryMultiplier=getRetryMultiplier;function getInitialRetryIntervalInMilliseconds(){return 3e3}a.getInitialRetryIntervalInMilliseconds=getInitialRetryIntervalInMilliseconds;function getDownloadFileConcurrency(){return 2}a.getDownloadFileConcurrency=getDownloadFileConcurrency;function getRuntimeToken(){const e=process.env["ACTIONS_RUNTIME_TOKEN"];if(!e){throw new Error("Unable to get ACTIONS_RUNTIME_TOKEN env variable")}return e}a.getRuntimeToken=getRuntimeToken;function getRuntimeUrl(){const e=process.env["ACTIONS_RUNTIME_URL"];if(!e){throw new Error("Unable to get ACTIONS_RUNTIME_URL env variable")}return e}a.getRuntimeUrl=getRuntimeUrl;function getWorkFlowRunId(){const e=process.env["GITHUB_RUN_ID"];if(!e){throw new Error("Unable to get GITHUB_RUN_ID env variable")}return e}a.getWorkFlowRunId=getWorkFlowRunId;function getWorkSpaceDirectory(){const e=process.env["GITHUB_WORKSPACE"];if(!e){throw new Error("Unable to get GITHUB_WORKSPACE env variable")}return e}a.getWorkSpaceDirectory=getWorkSpaceDirectory;function getRetentionDays(){return process.env["GITHUB_RETENTION_DAYS"]}a.getRetentionDays=getRetentionDays},8538:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const p=n(r(5747));const o=n(r(2186));const d=n(r(8761));const s=r(6327);const l=r(8835);const u=r(9081);const m=r(630);const c=r(6527);const h=r(2222);const v=r(755);class DownloadHttpClient{constructor(){this.downloadHttpManager=new c.HttpManager(h.getDownloadFileConcurrency(),"@actions/artifact-download");this.statusReporter=new u.StatusReporter(1e3)}listArtifacts(){return i(this,void 0,void 0,(function*(){const e=s.getArtifactUrl();const a=this.downloadHttpManager.getClient(0);const r=s.getDownloadHeaders("application/json");const n=yield v.retryHttpClientRequest("List Artifacts",(()=>i(this,void 0,void 0,(function*(){return a.get(e,r)}))));const p=yield n.readBody();return JSON.parse(p)}))}getContainerItems(e,a){return i(this,void 0,void 0,(function*(){const r=new l.URL(a);r.searchParams.append("itemPath",e);const n=this.downloadHttpManager.getClient(0);const p=s.getDownloadHeaders("application/json");const o=yield v.retryHttpClientRequest("Get Container Items",(()=>i(this,void 0,void 0,(function*(){return n.get(r.toString(),p)}))));const d=yield o.readBody();return JSON.parse(d)}))}downloadSingleArtifact(e){return i(this,void 0,void 0,(function*(){const a=h.getDownloadFileConcurrency();o.debug(`Download file concurrency is set to ${a}`);const r=[...new Array(a).keys()];let n=0;let p=0;o.info(`Total number of files that will be downloaded: ${e.length}`);this.statusReporter.setTotalNumberOfFilesToProcess(e.length);this.statusReporter.start();yield Promise.all(r.map((a=>i(this,void 0,void 0,(function*(){while(n<e.length){const r=e[n];n+=1;const i=m.performance.now();yield this.downloadIndividualFile(a,r.sourceLocation,r.targetPath);if(o.isDebug()){o.debug(`File: ${++p}/${e.length}. ${r.targetPath} took ${(m.performance.now()-i).toFixed(3)} milliseconds to finish downloading`)}this.statusReporter.incrementProcessedCount()}}))))).catch((e=>{throw new Error(`Unable to download the artifact: ${e}`)})).finally((()=>{this.statusReporter.stop();this.downloadHttpManager.disposeAndReplaceAllClients()}))}))}downloadIndividualFile(e,a,r){return i(this,void 0,void 0,(function*(){let n=0;const d=h.getRetryLimit();let l=p.createWriteStream(r);const u=s.getDownloadHeaders("application/json",true,true);const makeDownloadRequest=()=>i(this,void 0,void 0,(function*(){const r=this.downloadHttpManager.getClient(e);return yield r.get(a,u)}));const isGzip=e=>"content-encoding"in e&&e["content-encoding"]==="gzip";const backOff=r=>i(this,void 0,void 0,(function*(){n++;if(n>d){return Promise.reject(new Error(`Retry limit has been reached. Unable to download ${a}`))}else{this.downloadHttpManager.disposeAndReplaceClient(e);if(r){o.info(`Backoff due to too many requests, retry #${n}. Waiting for ${r} milliseconds before continuing the download`);yield s.sleep(r)}else{const e=s.getExponentialRetryTimeInMilliseconds(n);o.info(`Exponential backoff for retry #${n}. Waiting for ${e} milliseconds before continuing the download`);yield s.sleep(e)}o.info(`Finished backoff for retry #${n}, continuing with download`)}}));const isAllBytesReceived=(e,a)=>{if(!e||!a||process.env["ACTIONS_ARTIFACT_SKIP_DOWNLOAD_VALIDATION"]){o.info("Skipping download validation.");return true}return parseInt(e)===a};const resetDestinationStream=e=>i(this,void 0,void 0,(function*(){l.close();yield s.rmFile(e);l=p.createWriteStream(e)}));while(n<=d){let e;try{e=yield makeDownloadRequest();if(o.isDebug()){s.displayHttpDiagnostics(e)}}catch(e){o.info("An error occurred while attempting to download a file");console.log(e);yield backOff();continue}let i=false;if(s.isSuccessStatusCode(e.message.statusCode)){try{const a=isGzip(e.message.headers);yield this.pipeResponseToFile(e,l,a);if(a||isAllBytesReceived(e.message.headers["content-length"],yield s.getFileSize(r))){return}else{i=true}}catch(e){i=true}}if(i||s.isRetryableStatusCode(e.message.statusCode)){o.info(`A ${e.message.statusCode} response code has been received while attempting to download an artifact`);resetDestinationStream(r);s.isThrottledStatusCode(e.message.statusCode)?yield backOff(s.tryGetRetryAfterValueTimeInMilliseconds(e.message.headers)):yield backOff()}else{s.displayHttpDiagnostics(e);return Promise.reject(new Error(`Unexpected http ${e.message.statusCode} during download for ${a}`))}}}))}pipeResponseToFile(e,a,r){return i(this,void 0,void 0,(function*(){yield new Promise(((i,n)=>{if(r){const r=d.createGunzip();e.message.on("error",(e=>{o.error(`An error occurred while attempting to read the response stream`);r.close();a.close();n(e)})).pipe(r).on("error",(e=>{o.error(`An error occurred while attempting to decompress the response stream`);a.close();n(e)})).pipe(a).on("close",(()=>{i()})).on("error",(e=>{o.error(`An error occurred while writing a downloaded file to ${a.path}`);n(e)}))}else{e.message.on("error",(e=>{o.error(`An error occurred while attempting to read the response stream`);a.close();n(e)})).pipe(a).on("close",(()=>{i()})).on("error",(e=>{o.error(`An error occurred while writing a downloaded file to ${a.path}`);n(e)}))}}));return}))}}a.DownloadHttpClient=DownloadHttpClient},5686:function(e,a,r){"use strict";var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const n=i(r(5622));function getDownloadSpecification(e,a,r,i){const p=new Set;const o={rootDownloadLocation:i?n.join(r,e):r,directoryStructure:[],emptyFilesToCreate:[],filesToDownload:[]};for(const d of a){if(d.path.startsWith(`${e}/`)||d.path.startsWith(`${e}\\`)){const a=n.normalize(d.path);const s=n.join(r,i?a:a.replace(e,""));if(d.itemType==="file"){p.add(n.dirname(s));if(d.fileLength===0){o.emptyFilesToCreate.push(s)}else{o.filesToDownload.push({sourceLocation:d.contentLocation,targetPath:s})}}}}o.directoryStructure=Array.from(p);return o}a.getDownloadSpecification=getDownloadSpecification},6527:(e,a,r)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});const i=r(6327);class HttpManager{constructor(e,a){if(e<1){throw new Error("There must be at least one client")}this.userAgent=a;this.clients=new Array(e).fill(i.createHttpClient(a))}getClient(e){return this.clients[e]}disposeAndReplaceClient(e){this.clients[e].dispose();this.clients[e]=i.createHttpClient(this.userAgent)}disposeAndReplaceAllClients(){for(const[e]of this.clients.entries()){this.disposeAndReplaceClient(e)}}}a.HttpManager=HttpManager},755:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const p=r(6327);const o=n(r(2186));const d=r(2222);function retry(e,a,r,n){return i(this,void 0,void 0,(function*(){let i=undefined;let d=undefined;let s=false;let l="";let u=undefined;let m=1;while(m<=n){try{i=yield a();d=i.message.statusCode;if(p.isSuccessStatusCode(d)){return i}if(d){u=r.get(d)}s=p.isRetryableStatusCode(d);l=`Artifact service responded with ${d}`}catch(e){s=true;l=e.message}if(!s){o.info(`${e} - Error is not retryable`);if(i){p.displayHttpDiagnostics(i)}break}o.info(`${e} - Attempt ${m} of ${n} failed with error: ${l}`);yield p.sleep(p.getExponentialRetryTimeInMilliseconds(m));m++}if(i){p.displayHttpDiagnostics(i)}if(u){throw Error(`${e} failed: ${u}`)}throw Error(`${e} failed: ${l}`)}))}a.retry=retry;function retryHttpClientRequest(e,a,r=new Map,n=d.getRetryLimit()){return i(this,void 0,void 0,(function*(){return yield retry(e,a,r,n)}))}a.retryHttpClientRequest=retryHttpClientRequest},9081:(e,a,r)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});const i=r(2186);class StatusReporter{constructor(e){this.totalNumberOfFilesToProcess=0;this.processedCount=0;this.largeFiles=new Map;this.totalFileStatus=undefined;this.largeFileStatus=undefined;this.displayFrequencyInMilliseconds=e}setTotalNumberOfFilesToProcess(e){this.totalNumberOfFilesToProcess=e}start(){this.totalFileStatus=setInterval((()=>{const e=this.formatPercentage(this.processedCount,this.totalNumberOfFilesToProcess);i.info(`Total file count: ${this.totalNumberOfFilesToProcess} ---- Processed file #${this.processedCount} (${e.slice(0,e.indexOf(".")+2)}%)`)}),this.displayFrequencyInMilliseconds);this.largeFileStatus=setInterval((()=>{for(const e of Array.from(this.largeFiles.values())){i.info(e)}this.largeFiles.clear()}),1e3)}updateLargeFileStatus(e,a,r){const i=this.formatPercentage(a,r);const n=`Uploading ${e} (${i.slice(0,i.indexOf(".")+2)}%)`;this.largeFiles.set(e,n)}stop(){if(this.totalFileStatus){clearInterval(this.totalFileStatus)}if(this.largeFileStatus){clearInterval(this.largeFileStatus)}}incrementProcessedCount(){this.processedCount++}formatPercentage(e,a){return(e/a*100).toFixed(4).toString()}}a.StatusReporter=StatusReporter},606:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var n=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a=e[Symbol.asyncIterator],r;return a?a.call(e):(e=typeof __values==="function"?__values(e):e[Symbol.iterator](),r={},verb("next"),verb("throw"),verb("return"),r[Symbol.asyncIterator]=function(){return this},r);function verb(a){r[a]=e[a]&&function(r){return new Promise((function(i,n){r=e[a](r),settle(i,n,r.done,r.value)}))}}function settle(e,a,r,i){Promise.resolve(i).then((function(a){e({value:a,done:r})}),a)}};var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const o=p(r(5747));const d=p(r(8761));const s=r(1669);const l=s.promisify(o.stat);function createGZipFileOnDisk(e,a){return i(this,void 0,void 0,(function*(){return new Promise(((r,n)=>{const p=o.createReadStream(e);const s=d.createGzip();const u=o.createWriteStream(a);p.pipe(s).pipe(u);u.on("finish",(()=>i(this,void 0,void 0,(function*(){const e=(yield l(a)).size;r(e)}))));u.on("error",(e=>{console.log(e);n}))}))}))}a.createGZipFileOnDisk=createGZipFileOnDisk;function createGZipFileInBuffer(e){return i(this,void 0,void 0,(function*(){return new Promise((a=>i(this,void 0,void 0,(function*(){var r,i;const p=o.createReadStream(e);const s=d.createGzip();p.pipe(s);const l=[];try{for(var u=n(s),m;m=yield u.next(),!m.done;){const e=m.value;l.push(e)}}catch(e){r={error:e}}finally{try{if(m&&!m.done&&(i=u.return))yield i.call(u)}finally{if(r)throw r.error}}a(Buffer.concat(l))}))))}))}a.createGZipFileInBuffer=createGZipFileInBuffer},4354:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const p=n(r(5747));const o=n(r(2186));const d=n(r(8065));const s=n(r(2413));const l=r(6327);const u=r(2222);const m=r(1669);const c=r(8835);const h=r(630);const v=r(9081);const g=r(9925);const y=r(6527);const w=r(606);const b=r(755);const S=m.promisify(p.stat);class UploadHttpClient{constructor(){this.uploadHttpManager=new y.HttpManager(u.getUploadFileConcurrency(),"@actions/artifact-upload");this.statusReporter=new v.StatusReporter(1e4)}createArtifactInFileContainer(e,a){return i(this,void 0,void 0,(function*(){const r={Type:"actions_storage",Name:e};if(a&&a.retentionDays){const e=u.getRetentionDays();r.RetentionDays=l.getProperRetention(a.retentionDays,e)}const n=JSON.stringify(r,null,2);const p=l.getArtifactUrl();const o=this.uploadHttpManager.getClient(0);const d=l.getUploadHeaders("application/json",false);const s=new Map([[g.HttpCodes.Forbidden,"Artifact storage quota has been hit. Unable to upload any new artifacts"],[g.HttpCodes.BadRequest,`The artifact name ${e} is not valid. Request URL ${p}`]]);const m=yield b.retryHttpClientRequest("Create Artifact Container",(()=>i(this,void 0,void 0,(function*(){return o.post(p,n,d)}))),s);const c=yield m.readBody();return JSON.parse(c)}))}uploadArtifactToFileContainer(e,a,r){return i(this,void 0,void 0,(function*(){const n=u.getUploadFileConcurrency();const p=u.getUploadChunkSize();o.debug(`File Concurrency: ${n}, and Chunk Size: ${p}`);const d=[];let s=true;if(r){if(r.continueOnError===false){s=false}}for(const r of a){const a=new c.URL(e);a.searchParams.append("itemPath",r.uploadFilePath);d.push({file:r.absoluteFilePath,resourceUrl:a.toString(),maxChunkSize:p,continueOnError:s})}const l=[...new Array(n).keys()];const m=[];let v=0;let g=0;let y=0;let w=0;let b=false;this.statusReporter.setTotalNumberOfFilesToProcess(a.length);this.statusReporter.start();yield Promise.all(l.map((e=>i(this,void 0,void 0,(function*(){while(v<a.length){const r=d[v];v+=1;if(b){m.push(r.file);continue}const i=h.performance.now();const n=yield this.uploadFileAsync(e,r);if(o.isDebug()){o.debug(`File: ${++g}/${a.length}. ${r.file} took ${(h.performance.now()-i).toFixed(3)} milliseconds to finish upload`)}y+=n.successfulUploadSize;w+=n.totalSize;if(n.isSuccess===false){m.push(r.file);if(!s){o.error(`aborting artifact upload`);b=true}}this.statusReporter.incrementProcessedCount()}})))));this.statusReporter.stop();this.uploadHttpManager.disposeAndReplaceAllClients();o.info(`Total size of all the files uploaded is ${y} bytes`);return{uploadSize:y,totalSize:w,failedItems:m}}))}uploadFileAsync(e,a){return i(this,void 0,void 0,(function*(){const r=(yield S(a.file)).size;let i=0;let n=true;let l=0;let u=0;let m=true;if(r<65536){const i=yield w.createGZipFileInBuffer(a.file);let d;if(r<i.byteLength){d=()=>p.createReadStream(a.file);m=false;u=r}else{d=()=>{const e=new s.PassThrough;e.end(i);return e};u=i.byteLength}const c=yield this.uploadChunk(e,a.resourceUrl,d,0,u-1,u,m,r);if(!c){n=false;l+=u;o.warning(`Aborting upload for ${a.file} due to failure`)}return{isSuccess:n,successfulUploadSize:u-l,totalSize:r}}else{const s=yield d.file();u=yield w.createGZipFileOnDisk(a.file,s.path);let c=s.path;if(r<u){u=r;c=a.file;m=false}let h=false;while(i<u){const d=Math.min(u-i,a.maxChunkSize);if(u>104857600){this.statusReporter.updateLargeFileStatus(a.file,i,u)}const s=i;const v=i+d-1;i+=a.maxChunkSize;if(h){l+=d;continue}const g=yield this.uploadChunk(e,a.resourceUrl,(()=>p.createReadStream(c,{start:s,end:v,autoClose:false})),s,v,u,m,r);if(!g){n=false;l+=d;o.warning(`Aborting upload for ${a.file} due to failure`);h=true}}yield s.cleanup();return{isSuccess:n,successfulUploadSize:u-l,totalSize:r}}}))}uploadChunk(e,a,r,n,p,d,s,m){return i(this,void 0,void 0,(function*(){const c=l.getUploadHeaders("application/octet-stream",true,s,m,p-n+1,l.getContentRange(n,p,d));const uploadChunkRequest=()=>i(this,void 0,void 0,(function*(){const i=this.uploadHttpManager.getClient(e);return yield i.sendStream("PUT",a,r(),c)}));let h=0;const v=u.getRetryLimit();const incrementAndCheckRetryLimit=e=>{h++;if(h>v){if(e){l.displayHttpDiagnostics(e)}o.info(`Retry limit has been reached for chunk at offset ${n} to ${a}`);return true}return false};const backOff=a=>i(this,void 0,void 0,(function*(){this.uploadHttpManager.disposeAndReplaceClient(e);if(a){o.info(`Backoff due to too many requests, retry #${h}. Waiting for ${a} milliseconds before continuing the upload`);yield l.sleep(a)}else{const e=l.getExponentialRetryTimeInMilliseconds(h);o.info(`Exponential backoff for retry #${h}. Waiting for ${e} milliseconds before continuing the upload at offset ${n}`);yield l.sleep(e)}o.info(`Finished backoff for retry #${h}, continuing with upload`);return}));while(h<=v){let r;try{r=yield uploadChunkRequest()}catch(a){o.info(`An error has been caught http-client index ${e}, retrying the upload`);console.log(a);if(incrementAndCheckRetryLimit()){return false}yield backOff();continue}yield r.readBody();if(l.isSuccessStatusCode(r.message.statusCode)){return true}else if(l.isRetryableStatusCode(r.message.statusCode)){o.info(`A ${r.message.statusCode} status code has been received, will attempt to retry the upload`);if(incrementAndCheckRetryLimit(r)){return false}l.isThrottledStatusCode(r.message.statusCode)?yield backOff(l.tryGetRetryAfterValueTimeInMilliseconds(r.message.headers)):yield backOff()}else{o.error(`Unexpected response. Unable to upload chunk to ${a}`);l.displayHttpDiagnostics(r);return false}}return false}))}patchArtifactSize(e,a){return i(this,void 0,void 0,(function*(){const r=new c.URL(l.getArtifactUrl());r.searchParams.append("artifactName",a);const n={Size:e};const p=JSON.stringify(n,null,2);o.debug(`URL is ${r.toString()}`);const d=this.uploadHttpManager.getClient(0);const s=l.getUploadHeaders("application/json",false);const u=new Map([[g.HttpCodes.NotFound,`An Artifact with the name ${a} was not found`]]);const m=yield b.retryHttpClientRequest("Finalize artifact upload",(()=>i(this,void 0,void 0,(function*(){return d.patch(r.toString(),p,s)}))),u);yield m.readBody();o.debug(`Artifact ${a} has been successfully uploaded, total size in bytes: ${e}`)}))}}a.UploadHttpClient=UploadHttpClient},183:function(e,a,r){"use strict";var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(Object.hasOwnProperty.call(e,r))a[r]=e[r];a["default"]=e;return a};Object.defineProperty(a,"__esModule",{value:true});const n=i(r(5747));const p=r(2186);const o=r(5622);const d=r(6327);function getUploadSpecification(e,a,r){d.checkArtifactName(e);const i=[];if(!n.existsSync(a)){throw new Error(`Provided rootDirectory ${a} does not exist`)}if(!n.lstatSync(a).isDirectory()){throw new Error(`Provided rootDirectory ${a} is not a valid directory`)}a=o.normalize(a);a=o.resolve(a);for(let s of r){if(!n.existsSync(s)){throw new Error(`File ${s} does not exist`)}if(!n.lstatSync(s).isDirectory()){s=o.normalize(s);s=o.resolve(s);if(!s.startsWith(a)){throw new Error(`The rootDirectory: ${a} is not a parent directory of the file: ${s}`)}const r=s.replace(a,"");d.checkArtifactFilePath(r);i.push({absoluteFilePath:s,uploadFilePath:o.join(e,r)})}else{p.debug(`Removing ${s} from rawSearchResults because it is a directory`)}}return i}a.getUploadSpecification=getUploadSpecification},6327:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});const n=r(2186);const p=r(5747);const o=r(9925);const d=r(3702);const s=r(2222);function getExponentialRetryTimeInMilliseconds(e){if(e<0){throw new Error("RetryCount should not be negative")}else if(e===0){return s.getInitialRetryIntervalInMilliseconds()}const a=s.getInitialRetryIntervalInMilliseconds()*s.getRetryMultiplier()*e;const r=a*s.getRetryMultiplier();return Math.random()*(r-a)+a}a.getExponentialRetryTimeInMilliseconds=getExponentialRetryTimeInMilliseconds;function parseEnvNumber(e){const a=Number(process.env[e]);if(Number.isNaN(a)||a<0){return undefined}return a}a.parseEnvNumber=parseEnvNumber;function getApiVersion(){return"6.0-preview"}a.getApiVersion=getApiVersion;function isSuccessStatusCode(e){if(!e){return false}return e>=200&&e<300}a.isSuccessStatusCode=isSuccessStatusCode;function isForbiddenStatusCode(e){if(!e){return false}return e===o.HttpCodes.Forbidden}a.isForbiddenStatusCode=isForbiddenStatusCode;function isRetryableStatusCode(e){if(!e){return false}const a=[o.HttpCodes.BadGateway,o.HttpCodes.GatewayTimeout,o.HttpCodes.InternalServerError,o.HttpCodes.ServiceUnavailable,o.HttpCodes.TooManyRequests,413];return a.includes(e)}a.isRetryableStatusCode=isRetryableStatusCode;function isThrottledStatusCode(e){if(!e){return false}return e===o.HttpCodes.TooManyRequests}a.isThrottledStatusCode=isThrottledStatusCode;function tryGetRetryAfterValueTimeInMilliseconds(e){if(e["retry-after"]){const a=Number(e["retry-after"]);if(!isNaN(a)){n.info(`Retry-After header is present with a value of ${a}`);return a*1e3}n.info(`Returned retry-after header value: ${a} is non-numeric and cannot be used`);return undefined}n.info(`No retry-after header was found. Dumping all headers for diagnostic purposes`);console.log(e);return undefined}a.tryGetRetryAfterValueTimeInMilliseconds=tryGetRetryAfterValueTimeInMilliseconds;function getContentRange(e,a,r){return`bytes ${e}-${a}/${r}`}a.getContentRange=getContentRange;function getDownloadHeaders(e,a,r){const i={};if(e){i["Content-Type"]=e}if(a){i["Connection"]="Keep-Alive";i["Keep-Alive"]="10"}if(r){i["Accept-Encoding"]="gzip";i["Accept"]=`application/octet-stream;api-version=${getApiVersion()}`}else{i["Accept"]=`application/json;api-version=${getApiVersion()}`}return i}a.getDownloadHeaders=getDownloadHeaders;function getUploadHeaders(e,a,r,i,n,p){const o={};o["Accept"]=`application/json;api-version=${getApiVersion()}`;if(e){o["Content-Type"]=e}if(a){o["Connection"]="Keep-Alive";o["Keep-Alive"]="10"}if(r){o["Content-Encoding"]="gzip";o["x-tfs-filelength"]=i}if(n){o["Content-Length"]=n}if(p){o["Content-Range"]=p}return o}a.getUploadHeaders=getUploadHeaders;function createHttpClient(e){return new o.HttpClient(e,[new d.BearerCredentialHandler(s.getRuntimeToken())])}a.createHttpClient=createHttpClient;function getArtifactUrl(){const e=`${s.getRuntimeUrl()}_apis/pipelines/workflows/${s.getWorkFlowRunId()}/artifacts?api-version=${getApiVersion()}`;n.debug(`Artifact Url: ${e}`);return e}a.getArtifactUrl=getArtifactUrl;function displayHttpDiagnostics(e){n.info(`##### Begin Diagnostic HTTP information #####\nStatus Code: ${e.message.statusCode}\nStatus Message: ${e.message.statusMessage}\nHeader Information: ${JSON.stringify(e.message.headers,undefined,2)}\n###### End Diagnostic HTTP information ######`)}a.displayHttpDiagnostics=displayHttpDiagnostics;const l=['"',":","<",">","|","*","?"];const u=[...l,"\\","/"];function checkArtifactName(e){if(!e){throw new Error(`Artifact name: ${e}, is incorrectly provided`)}for(const a of u){if(e.includes(a)){throw new Error(`Artifact name is not valid: ${e}. Contains character: "${a}". Invalid artifact name characters include: ${u.toString()}.`)}}}a.checkArtifactName=checkArtifactName;function checkArtifactFilePath(e){if(!e){throw new Error(`Artifact path: ${e}, is incorrectly provided`)}for(const a of l){if(e.includes(a)){throw new Error(`Artifact path is not valid: ${e}. Contains character: "${a}". Invalid characters include: ${l.toString()}.`)}}}a.checkArtifactFilePath=checkArtifactFilePath;function createDirectoriesForArtifact(e){return i(this,void 0,void 0,(function*(){for(const a of e){yield p.promises.mkdir(a,{recursive:true})}}))}a.createDirectoriesForArtifact=createDirectoriesForArtifact;function createEmptyFilesForArtifact(e){return i(this,void 0,void 0,(function*(){for(const a of e){yield(yield p.promises.open(a,"w")).close()}}))}a.createEmptyFilesForArtifact=createEmptyFilesForArtifact;function getFileSize(e){return i(this,void 0,void 0,(function*(){const a=yield p.promises.stat(e);n.debug(`${e} size:(${a.size}) blksize:(${a.blksize}) blocks:(${a.blocks})`);return a.size}))}a.getFileSize=getFileSize;function rmFile(e){return i(this,void 0,void 0,(function*(){yield p.promises.unlink(e)}))}a.rmFile=rmFile;function getProperRetention(e,a){if(e<0){throw new Error("Invalid retention, minimum value is 1.")}let r=e;if(a){const e=parseInt(a);if(!isNaN(e)&&e<r){n.warning(`Retention days is greater than the max value allowed by the repository setting, reduce retention to ${e} days`);r=e}}return r}a.getProperRetention=getProperRetention;function sleep(e){return i(this,void 0,void 0,(function*(){return new Promise((a=>setTimeout(a,e)))}))}a.sleep=sleep},7351:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};Object.defineProperty(a,"__esModule",{value:true});a.issue=a.issueCommand=void 0;const o=p(r(2087));const d=r(5278);function issueCommand(e,a,r){const i=new Command(e,a,r);process.stdout.write(i.toString()+o.EOL)}a.issueCommand=issueCommand;function issue(e,a=""){issueCommand(e,{},a)}a.issue=issue;const s="::";class Command{constructor(e,a,r){if(!e){e="missing.command"}this.command=e;this.properties=a;this.message=r}toString(){let e=s+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let a=true;for(const r in this.properties){if(this.properties.hasOwnProperty(r)){const i=this.properties[r];if(i){if(a){a=false}else{e+=","}e+=`${r}=${escapeProperty(i)}`}}}}e+=`${s}${escapeData(this.message)}`;return e}}function escapeData(e){return d.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return d.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},2186:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});a.getIDToken=a.getState=a.saveState=a.group=a.endGroup=a.startGroup=a.info=a.notice=a.warning=a.error=a.debug=a.isDebug=a.setFailed=a.setCommandEcho=a.setOutput=a.getBooleanInput=a.getMultilineInput=a.getInput=a.addPath=a.setSecret=a.exportVariable=a.ExitCode=void 0;const d=r(7351);const s=r(717);const l=r(5278);const u=p(r(2087));const m=p(r(5622));const c=r(8041);var h;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(h=a.ExitCode||(a.ExitCode={}));function exportVariable(e,a){const r=l.toCommandValue(a);process.env[e]=r;const i=process.env["GITHUB_ENV"]||"";if(i){const a="_GitHubActionsFileCommandDelimeter_";const i=`${e}<<${a}${u.EOL}${r}${u.EOL}${a}`;s.issueCommand("ENV",i)}else{d.issueCommand("set-env",{name:e},r)}}a.exportVariable=exportVariable;function setSecret(e){d.issueCommand("add-mask",{},e)}a.setSecret=setSecret;function addPath(e){const a=process.env["GITHUB_PATH"]||"";if(a){s.issueCommand("PATH",e)}else{d.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${m.delimiter}${process.env["PATH"]}`}a.addPath=addPath;function getInput(e,a){const r=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(a&&a.required&&!r){throw new Error(`Input required and not supplied: ${e}`)}if(a&&a.trimWhitespace===false){return r}return r.trim()}a.getInput=getInput;function getMultilineInput(e,a){const r=getInput(e,a).split("\n").filter((e=>e!==""));return r}a.getMultilineInput=getMultilineInput;function getBooleanInput(e,a){const r=["true","True","TRUE"];const i=["false","False","FALSE"];const n=getInput(e,a);if(r.includes(n))return true;if(i.includes(n))return false;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n`+`Support boolean input list: \`true | True | TRUE | false | False | FALSE\``)}a.getBooleanInput=getBooleanInput;function setOutput(e,a){process.stdout.write(u.EOL);d.issueCommand("set-output",{name:e},a)}a.setOutput=setOutput;function setCommandEcho(e){d.issue("echo",e?"on":"off")}a.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=h.Failure;error(e)}a.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}a.isDebug=isDebug;function debug(e){d.issueCommand("debug",{},e)}a.debug=debug;function error(e,a={}){d.issueCommand("error",l.toCommandProperties(a),e instanceof Error?e.toString():e)}a.error=error;function warning(e,a={}){d.issueCommand("warning",l.toCommandProperties(a),e instanceof Error?e.toString():e)}a.warning=warning;function notice(e,a={}){d.issueCommand("notice",l.toCommandProperties(a),e instanceof Error?e.toString():e)}a.notice=notice;function info(e){process.stdout.write(e+u.EOL)}a.info=info;function startGroup(e){d.issue("group",e)}a.startGroup=startGroup;function endGroup(){d.issue("endgroup")}a.endGroup=endGroup;function group(e,a){return o(this,void 0,void 0,(function*(){startGroup(e);let r;try{r=yield a()}finally{endGroup()}return r}))}a.group=group;function saveState(e,a){d.issueCommand("save-state",{name:e},a)}a.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}a.getState=getState;function getIDToken(e){return o(this,void 0,void 0,(function*(){return yield c.OidcClient.getIDToken(e)}))}a.getIDToken=getIDToken},717:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};Object.defineProperty(a,"__esModule",{value:true});a.issueCommand=void 0;const o=p(r(5747));const d=p(r(2087));const s=r(5278);function issueCommand(e,a){const r=process.env[`GITHUB_${e}`];if(!r){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!o.existsSync(r)){throw new Error(`Missing file at path: ${r}`)}o.appendFileSync(r,`${s.toCommandValue(a)}${d.EOL}`,{encoding:"utf8"})}a.issueCommand=issueCommand},8041:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});a.OidcClient=void 0;const n=r(9925);const p=r(3702);const o=r(2186);class OidcClient{static createHttpClient(e=true,a=10){const r={allowRetries:e,maxRetries:a};return new n.HttpClient("actions/oidc-client",[new p.BearerCredentialHandler(OidcClient.getRequestToken())],r)}static getRequestToken(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable")}return e}static getIDTokenUrl(){const e=process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];if(!e){throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable")}return e}static getCall(e){var a;return i(this,void 0,void 0,(function*(){const r=OidcClient.createHttpClient();const i=yield r.getJson(e).catch((e=>{throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.result.message}`)}));const n=(a=i.result)===null||a===void 0?void 0:a.value;if(!n){throw new Error("Response json body do not have ID Token field")}return n}))}static getIDToken(e){return i(this,void 0,void 0,(function*(){try{let a=OidcClient.getIDTokenUrl();if(e){const r=encodeURIComponent(e);a=`${a}&audience=${r}`}o.debug(`ID token url is ${a}`);const r=yield OidcClient.getCall(a);o.setSecret(r);return r}catch(e){throw new Error(`Error message: ${e.message}`)}}))}}a.OidcClient=OidcClient},5278:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.toCommandProperties=a.toCommandValue=void 0;function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}a.toCommandValue=toCommandValue;function toCommandProperties(e){if(!Object.keys(e).length){return{}}return{title:e.title,file:e.file,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}}a.toCommandProperties=toCommandProperties},1514:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});a.getExecOutput=a.exec=void 0;const d=r(4304);const s=p(r(8159));function exec(e,a,r){return o(this,void 0,void 0,(function*(){const i=s.argStringToArray(e);if(i.length===0){throw new Error(`Parameter 'commandLine' cannot be null or empty.`)}const n=i[0];a=i.slice(1).concat(a||[]);const p=new s.ToolRunner(n,a,r);return p.exec()}))}a.exec=exec;function getExecOutput(e,a,r){var i,n;return o(this,void 0,void 0,(function*(){let p="";let o="";const s=new d.StringDecoder("utf8");const l=new d.StringDecoder("utf8");const u=(i=r===null||r===void 0?void 0:r.listeners)===null||i===void 0?void 0:i.stdout;const m=(n=r===null||r===void 0?void 0:r.listeners)===null||n===void 0?void 0:n.stderr;const stdErrListener=e=>{o+=l.write(e);if(m){m(e)}};const stdOutListener=e=>{p+=s.write(e);if(u){u(e)}};const c=Object.assign(Object.assign({},r===null||r===void 0?void 0:r.listeners),{stdout:stdOutListener,stderr:stdErrListener});const h=yield exec(e,a,Object.assign(Object.assign({},r),{listeners:c}));p+=s.end();o+=l.end();return{exitCode:h,stdout:p,stderr:o}}))}a.getExecOutput=getExecOutput},8159:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});a.argStringToArray=a.ToolRunner=void 0;const d=p(r(2087));const s=p(r(8614));const l=p(r(3129));const u=p(r(5622));const m=p(r(7436));const c=p(r(1962));const h=r(8213);const v=process.platform==="win32";class ToolRunner extends s.EventEmitter{constructor(e,a,r){super();if(!e){throw new Error("Parameter 'toolPath' cannot be null or empty.")}this.toolPath=e;this.args=a||[];this.options=r||{}}_debug(e){if(this.options.listeners&&this.options.listeners.debug){this.options.listeners.debug(e)}}_getCommandString(e,a){const r=this._getSpawnFileName();const i=this._getSpawnArgs(e);let n=a?"":"[command]";if(v){if(this._isCmdFile()){n+=r;for(const e of i){n+=` ${e}`}}else if(e.windowsVerbatimArguments){n+=`"${r}"`;for(const e of i){n+=` ${e}`}}else{n+=this._windowsQuoteCmdArg(r);for(const e of i){n+=` ${this._windowsQuoteCmdArg(e)}`}}}else{n+=r;for(const e of i){n+=` ${e}`}}return n}_processLineBuffer(e,a,r){try{let i=a+e.toString();let n=i.indexOf(d.EOL);while(n>-1){const e=i.substring(0,n);r(e);i=i.substring(n+d.EOL.length);n=i.indexOf(d.EOL)}return i}catch(e){this._debug(`error processing line. Failed with error ${e}`);return""}}_getSpawnFileName(){if(v){if(this._isCmdFile()){return process.env["COMSPEC"]||"cmd.exe"}}return this.toolPath}_getSpawnArgs(e){if(v){if(this._isCmdFile()){let a=`/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;for(const r of this.args){a+=" ";a+=e.windowsVerbatimArguments?r:this._windowsQuoteCmdArg(r)}a+='"';return[a]}}return this.args}_endsWith(e,a){return e.endsWith(a)}_isCmdFile(){const e=this.toolPath.toUpperCase();return this._endsWith(e,".CMD")||this._endsWith(e,".BAT")}_windowsQuoteCmdArg(e){if(!this._isCmdFile()){return this._uvQuoteCmdArg(e)}if(!e){return'""'}const a=[" ","\t","&","(",")","[","]","{","}","^","=",";","!","'","+",",","`","~","|","<",">",'"'];let r=false;for(const i of e){if(a.some((e=>e===i))){r=true;break}}if(!r){return e}let i='"';let n=true;for(let a=e.length;a>0;a--){i+=e[a-1];if(n&&e[a-1]==="\\"){i+="\\"}else if(e[a-1]==='"'){n=true;i+='"'}else{n=false}}i+='"';return i.split("").reverse().join("")}_uvQuoteCmdArg(e){if(!e){return'""'}if(!e.includes(" ")&&!e.includes("\t")&&!e.includes('"')){return e}if(!e.includes('"')&&!e.includes("\\")){return`"${e}"`}let a='"';let r=true;for(let i=e.length;i>0;i--){a+=e[i-1];if(r&&e[i-1]==="\\"){a+="\\"}else if(e[i-1]==='"'){r=true;a+="\\"}else{r=false}}a+='"';return a.split("").reverse().join("")}_cloneExecOptions(e){e=e||{};const a={cwd:e.cwd||process.cwd(),env:e.env||process.env,silent:e.silent||false,windowsVerbatimArguments:e.windowsVerbatimArguments||false,failOnStdErr:e.failOnStdErr||false,ignoreReturnCode:e.ignoreReturnCode||false,delay:e.delay||1e4};a.outStream=e.outStream||process.stdout;a.errStream=e.errStream||process.stderr;return a}_getSpawnOptions(e,a){e=e||{};const r={};r.cwd=e.cwd;r.env=e.env;r["windowsVerbatimArguments"]=e.windowsVerbatimArguments||this._isCmdFile();if(e.windowsVerbatimArguments){r.argv0=`"${a}"`}return r}exec(){return o(this,void 0,void 0,(function*(){if(!c.isRooted(this.toolPath)&&(this.toolPath.includes("/")||v&&this.toolPath.includes("\\"))){this.toolPath=u.resolve(process.cwd(),this.options.cwd||process.cwd(),this.toolPath)}this.toolPath=yield m.which(this.toolPath,true);return new Promise(((e,a)=>o(this,void 0,void 0,(function*(){this._debug(`exec tool: ${this.toolPath}`);this._debug("arguments:");for(const e of this.args){this._debug(`   ${e}`)}const r=this._cloneExecOptions(this.options);if(!r.silent&&r.outStream){r.outStream.write(this._getCommandString(r)+d.EOL)}const i=new ExecState(r,this.toolPath);i.on("debug",(e=>{this._debug(e)}));if(this.options.cwd&&!(yield c.exists(this.options.cwd))){return a(new Error(`The cwd: ${this.options.cwd} does not exist!`))}const n=this._getSpawnFileName();const p=l.spawn(n,this._getSpawnArgs(r),this._getSpawnOptions(this.options,n));let o="";if(p.stdout){p.stdout.on("data",(e=>{if(this.options.listeners&&this.options.listeners.stdout){this.options.listeners.stdout(e)}if(!r.silent&&r.outStream){r.outStream.write(e)}o=this._processLineBuffer(e,o,(e=>{if(this.options.listeners&&this.options.listeners.stdline){this.options.listeners.stdline(e)}}))}))}let s="";if(p.stderr){p.stderr.on("data",(e=>{i.processStderr=true;if(this.options.listeners&&this.options.listeners.stderr){this.options.listeners.stderr(e)}if(!r.silent&&r.errStream&&r.outStream){const a=r.failOnStdErr?r.errStream:r.outStream;a.write(e)}s=this._processLineBuffer(e,s,(e=>{if(this.options.listeners&&this.options.listeners.errline){this.options.listeners.errline(e)}}))}))}p.on("error",(e=>{i.processError=e.message;i.processExited=true;i.processClosed=true;i.CheckComplete()}));p.on("exit",(e=>{i.processExitCode=e;i.processExited=true;this._debug(`Exit code ${e} received from tool '${this.toolPath}'`);i.CheckComplete()}));p.on("close",(e=>{i.processExitCode=e;i.processExited=true;i.processClosed=true;this._debug(`STDIO streams have closed for tool '${this.toolPath}'`);i.CheckComplete()}));i.on("done",((r,i)=>{if(o.length>0){this.emit("stdline",o)}if(s.length>0){this.emit("errline",s)}p.removeAllListeners();if(r){a(r)}else{e(i)}}));if(this.options.input){if(!p.stdin){throw new Error("child process missing stdin")}p.stdin.end(this.options.input)}}))))}))}}a.ToolRunner=ToolRunner;function argStringToArray(e){const a=[];let r=false;let i=false;let n="";function append(e){if(i&&e!=='"'){n+="\\"}n+=e;i=false}for(let p=0;p<e.length;p++){const o=e.charAt(p);if(o==='"'){if(!i){r=!r}else{append(o)}continue}if(o==="\\"&&i){append(o);continue}if(o==="\\"&&r){i=true;continue}if(o===" "&&!r){if(n.length>0){a.push(n);n=""}continue}append(o)}if(n.length>0){a.push(n.trim())}return a}a.argStringToArray=argStringToArray;class ExecState extends s.EventEmitter{constructor(e,a){super();this.processClosed=false;this.processError="";this.processExitCode=0;this.processExited=false;this.processStderr=false;this.delay=1e4;this.done=false;this.timeout=null;if(!a){throw new Error("toolPath must not be empty")}this.options=e;this.toolPath=a;if(e.delay){this.delay=e.delay}}CheckComplete(){if(this.done){return}if(this.processClosed){this._setResult()}else if(this.processExited){this.timeout=h.setTimeout(ExecState.HandleTimeout,this.delay,this)}}_debug(e){this.emit("debug",e)}_setResult(){let e;if(this.processExited){if(this.processError){e=new Error(`There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`)}else if(this.processExitCode!==0&&!this.options.ignoreReturnCode){e=new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`)}else if(this.processStderr&&this.options.failOnStdErr){e=new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`)}}if(this.timeout){clearTimeout(this.timeout);this.timeout=null}this.done=true;this.emit("done",e,this.processExitCode)}static HandleTimeout(e){if(e.done){return}if(!e.processClosed&&e.processExited){const a=`The STDIO streams did not close within ${e.delay/1e3} seconds of the exit event from process '${e.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;e._debug(a)}e._setResult()}}},8090:function(e,a,r){"use strict";var i=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});a.hashFiles=a.create=void 0;const n=r(8298);const p=r(2448);function create(e,a){return i(this,void 0,void 0,(function*(){return yield n.DefaultGlobber.create(e,a)}))}a.create=create;function hashFiles(e,a){return i(this,void 0,void 0,(function*(){let r=true;if(a&&typeof a.followSymbolicLinks==="boolean"){r=a.followSymbolicLinks}const i=yield create(e,{followSymbolicLinks:r});return p.hashFiles(i)}))}a.hashFiles=hashFiles},1026:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};Object.defineProperty(a,"__esModule",{value:true});a.getOptions=void 0;const o=p(r(2186));function getOptions(e){const a={followSymbolicLinks:true,implicitDescendants:true,matchDirectories:true,omitBrokenSymbolicLinks:true};if(e){if(typeof e.followSymbolicLinks==="boolean"){a.followSymbolicLinks=e.followSymbolicLinks;o.debug(`followSymbolicLinks '${a.followSymbolicLinks}'`)}if(typeof e.implicitDescendants==="boolean"){a.implicitDescendants=e.implicitDescendants;o.debug(`implicitDescendants '${a.implicitDescendants}'`)}if(typeof e.matchDirectories==="boolean"){a.matchDirectories=e.matchDirectories;o.debug(`matchDirectories '${a.matchDirectories}'`)}if(typeof e.omitBrokenSymbolicLinks==="boolean"){a.omitBrokenSymbolicLinks=e.omitBrokenSymbolicLinks;o.debug(`omitBrokenSymbolicLinks '${a.omitBrokenSymbolicLinks}'`)}}return a}a.getOptions=getOptions},8298:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var d=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a=e[Symbol.asyncIterator],r;return a?a.call(e):(e=typeof __values==="function"?__values(e):e[Symbol.iterator](),r={},verb("next"),verb("throw"),verb("return"),r[Symbol.asyncIterator]=function(){return this},r);function verb(a){r[a]=e[a]&&function(r){return new Promise((function(i,n){r=e[a](r),settle(i,n,r.done,r.value)}))}}function settle(e,a,r,i){Promise.resolve(i).then((function(a){e({value:a,done:r})}),a)}};var s=this&&this.__await||function(e){return this instanceof s?(this.v=e,this):new s(e)};var l=this&&this.__asyncGenerator||function(e,a,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i=r.apply(e,a||[]),n,p=[];return n={},verb("next"),verb("throw"),verb("return"),n[Symbol.asyncIterator]=function(){return this},n;function verb(e){if(i[e])n[e]=function(a){return new Promise((function(r,i){p.push([e,a,r,i])>1||resume(e,a)}))}}function resume(e,a){try{step(i[e](a))}catch(e){settle(p[0][3],e)}}function step(e){e.value instanceof s?Promise.resolve(e.value.v).then(fulfill,reject):settle(p[0][2],e)}function fulfill(e){resume("next",e)}function reject(e){resume("throw",e)}function settle(e,a){if(e(a),p.shift(),p.length)resume(p[0][0],p[0][1])}};Object.defineProperty(a,"__esModule",{value:true});a.DefaultGlobber=void 0;const u=p(r(2186));const m=p(r(5747));const c=p(r(1026));const h=p(r(5622));const v=p(r(9005));const g=r(1063);const y=r(4536);const w=r(9117);const b=process.platform==="win32";class DefaultGlobber{constructor(e){this.patterns=[];this.searchPaths=[];this.options=c.getOptions(e)}getSearchPaths(){return this.searchPaths.slice()}glob(){var e,a;return o(this,void 0,void 0,(function*(){const r=[];try{for(var i=d(this.globGenerator()),n;n=yield i.next(),!n.done;){const e=n.value;r.push(e)}}catch(a){e={error:a}}finally{try{if(n&&!n.done&&(a=i.return))yield a.call(i)}finally{if(e)throw e.error}}return r}))}globGenerator(){return l(this,arguments,(function*globGenerator_1(){const e=c.getOptions(this.options);const a=[];for(const r of this.patterns){a.push(r);if(e.implicitDescendants&&(r.trailingSeparator||r.segments[r.segments.length-1]!=="**")){a.push(new y.Pattern(r.negate,true,r.segments.concat("**")))}}const r=[];for(const e of v.getSearchPaths(a)){u.debug(`Search path '${e}'`);try{yield s(m.promises.lstat(e))}catch(e){if(e.code==="ENOENT"){continue}throw e}r.unshift(new w.SearchState(e,1))}const i=[];while(r.length){const n=r.pop();const p=v.match(a,n.path);const o=!!p||v.partialMatch(a,n.path);if(!p&&!o){continue}const d=yield s(DefaultGlobber.stat(n,e,i));if(!d){continue}if(d.isDirectory()){if(p&g.MatchKind.Directory&&e.matchDirectories){yield yield s(n.path)}else if(!o){continue}const a=n.level+1;const i=(yield s(m.promises.readdir(n.path))).map((e=>new w.SearchState(h.join(n.path,e),a)));r.push(...i.reverse())}else if(p&g.MatchKind.File){yield yield s(n.path)}}}))}static create(e,a){return o(this,void 0,void 0,(function*(){const r=new DefaultGlobber(a);if(b){e=e.replace(/\r\n/g,"\n");e=e.replace(/\r/g,"\n")}const i=e.split("\n").map((e=>e.trim()));for(const e of i){if(!e||e.startsWith("#")){continue}else{r.patterns.push(new y.Pattern(e))}}r.searchPaths.push(...v.getSearchPaths(r.patterns));return r}))}static stat(e,a,r){return o(this,void 0,void 0,(function*(){let i;if(a.followSymbolicLinks){try{i=yield m.promises.stat(e.path)}catch(r){if(r.code==="ENOENT"){if(a.omitBrokenSymbolicLinks){u.debug(`Broken symlink '${e.path}'`);return undefined}throw new Error(`No information found for the path '${e.path}'. This may indicate a broken symbolic link.`)}throw r}}else{i=yield m.promises.lstat(e.path)}if(i.isDirectory()&&a.followSymbolicLinks){const a=yield m.promises.realpath(e.path);while(r.length>=e.level){r.pop()}if(r.some((e=>e===a))){u.debug(`Symlink cycle detected for path '${e.path}' and realpath '${a}'`);return undefined}r.push(a)}return i}))}}a.DefaultGlobber=DefaultGlobber},2448:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var d=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a=e[Symbol.asyncIterator],r;return a?a.call(e):(e=typeof __values==="function"?__values(e):e[Symbol.iterator](),r={},verb("next"),verb("throw"),verb("return"),r[Symbol.asyncIterator]=function(){return this},r);function verb(a){r[a]=e[a]&&function(r){return new Promise((function(i,n){r=e[a](r),settle(i,n,r.done,r.value)}))}}function settle(e,a,r,i){Promise.resolve(i).then((function(a){e({value:a,done:r})}),a)}};Object.defineProperty(a,"__esModule",{value:true});a.hashFiles=void 0;const s=p(r(6417));const l=p(r(2186));const u=p(r(5747));const m=p(r(2413));const c=p(r(1669));const h=p(r(5622));function hashFiles(e){var a,r;var i;return o(this,void 0,void 0,(function*(){let n=false;const p=(i=process.env["GITHUB_WORKSPACE"])!==null&&i!==void 0?i:process.cwd();const o=s.createHash("sha256");let v=0;try{for(var g=d(e.globGenerator()),y;y=yield g.next(),!y.done;){const e=y.value;l.debug(e);if(!e.startsWith(`${p}${h.sep}`)){l.debug(`Ignore '${e}' since it is not under GITHUB_WORKSPACE.`);continue}if(u.statSync(e).isDirectory()){l.debug(`Skip directory '${e}'.`);continue}const a=s.createHash("sha256");const r=c.promisify(m.pipeline);yield r(u.createReadStream(e),a);o.write(a.digest());v++;if(!n){n=true}}}catch(e){a={error:e}}finally{try{if(y&&!y.done&&(r=g.return))yield r.call(g)}finally{if(a)throw a.error}}o.end();if(n){l.debug(`Found ${v} files to hash.`);return o.digest("hex")}else{l.debug(`No matches found for glob`);return""}}))}a.hashFiles=hashFiles},1063:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.MatchKind=void 0;var r;(function(e){e[e["None"]=0]="None";e[e["Directory"]=1]="Directory";e[e["File"]=2]="File";e[e["All"]=3]="All"})(r=a.MatchKind||(a.MatchKind={}))},1849:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.safeTrimTrailingSeparator=a.normalizeSeparators=a.hasRoot=a.hasAbsoluteRoot=a.ensureAbsoluteRoot=a.dirname=void 0;const d=p(r(5622));const s=o(r(2357));const l=process.platform==="win32";function dirname(e){e=safeTrimTrailingSeparator(e);if(l&&/^\\\\[^\\]+(\\[^\\]+)?$/.test(e)){return e}let a=d.dirname(e);if(l&&/^\\\\[^\\]+\\[^\\]+\\$/.test(a)){a=safeTrimTrailingSeparator(a)}return a}a.dirname=dirname;function ensureAbsoluteRoot(e,a){s.default(e,`ensureAbsoluteRoot parameter 'root' must not be empty`);s.default(a,`ensureAbsoluteRoot parameter 'itemPath' must not be empty`);if(hasAbsoluteRoot(a)){return a}if(l){if(a.match(/^[A-Z]:[^\\/]|^[A-Z]:$/i)){let e=process.cwd();s.default(e.match(/^[A-Z]:\\/i),`Expected current directory to start with an absolute drive root. Actual '${e}'`);if(a[0].toUpperCase()===e[0].toUpperCase()){if(a.length===2){return`${a[0]}:\\${e.substr(3)}`}else{if(!e.endsWith("\\")){e+="\\"}return`${a[0]}:\\${e.substr(3)}${a.substr(2)}`}}else{return`${a[0]}:\\${a.substr(2)}`}}else if(normalizeSeparators(a).match(/^\\$|^\\[^\\]/)){const e=process.cwd();s.default(e.match(/^[A-Z]:\\/i),`Expected current directory to start with an absolute drive root. Actual '${e}'`);return`${e[0]}:\\${a.substr(1)}`}}s.default(hasAbsoluteRoot(e),`ensureAbsoluteRoot parameter 'root' must have an absolute root`);if(e.endsWith("/")||l&&e.endsWith("\\")){}else{e+=d.sep}return e+a}a.ensureAbsoluteRoot=ensureAbsoluteRoot;function hasAbsoluteRoot(e){s.default(e,`hasAbsoluteRoot parameter 'itemPath' must not be empty`);e=normalizeSeparators(e);if(l){return e.startsWith("\\\\")||/^[A-Z]:\\/i.test(e)}return e.startsWith("/")}a.hasAbsoluteRoot=hasAbsoluteRoot;function hasRoot(e){s.default(e,`isRooted parameter 'itemPath' must not be empty`);e=normalizeSeparators(e);if(l){return e.startsWith("\\")||/^[A-Z]:/i.test(e)}return e.startsWith("/")}a.hasRoot=hasRoot;function normalizeSeparators(e){e=e||"";if(l){e=e.replace(/\//g,"\\");const a=/^\\\\+[^\\]/.test(e);return(a?"\\":"")+e.replace(/\\\\+/g,"\\")}return e.replace(/\/\/+/g,"/")}a.normalizeSeparators=normalizeSeparators;function safeTrimTrailingSeparator(e){if(!e){return""}e=normalizeSeparators(e);if(!e.endsWith(d.sep)){return e}if(e===d.sep){return e}if(l&&/^[A-Z]:\\$/i.test(e)){return e}return e.substr(0,e.length-1)}a.safeTrimTrailingSeparator=safeTrimTrailingSeparator},6836:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.Path=void 0;const d=p(r(5622));const s=p(r(1849));const l=o(r(2357));const u=process.platform==="win32";class Path{constructor(e){this.segments=[];if(typeof e==="string"){l.default(e,`Parameter 'itemPath' must not be empty`);e=s.safeTrimTrailingSeparator(e);if(!s.hasRoot(e)){this.segments=e.split(d.sep)}else{let a=e;let r=s.dirname(a);while(r!==a){const e=d.basename(a);this.segments.unshift(e);a=r;r=s.dirname(a)}this.segments.unshift(a)}}else{l.default(e.length>0,`Parameter 'itemPath' must not be an empty array`);for(let a=0;a<e.length;a++){let r=e[a];l.default(r,`Parameter 'itemPath' must not contain any empty segments`);r=s.normalizeSeparators(e[a]);if(a===0&&s.hasRoot(r)){r=s.safeTrimTrailingSeparator(r);l.default(r===s.dirname(r),`Parameter 'itemPath' root segment contains information for multiple segments`);this.segments.push(r)}else{l.default(!r.includes(d.sep),`Parameter 'itemPath' contains unexpected path separators`);this.segments.push(r)}}}}toString(){let e=this.segments[0];let a=e.endsWith(d.sep)||u&&/^[A-Z]:$/i.test(e);for(let r=1;r<this.segments.length;r++){if(a){a=false}else{e+=d.sep}e+=this.segments[r]}return e}}a.Path=Path},9005:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};Object.defineProperty(a,"__esModule",{value:true});a.partialMatch=a.match=a.getSearchPaths=void 0;const o=p(r(1849));const d=r(1063);const s=process.platform==="win32";function getSearchPaths(e){e=e.filter((e=>!e.negate));const a={};for(const r of e){const e=s?r.searchPath.toUpperCase():r.searchPath;a[e]="candidate"}const r=[];for(const i of e){const e=s?i.searchPath.toUpperCase():i.searchPath;if(a[e]==="included"){continue}let n=false;let p=e;let d=o.dirname(p);while(d!==p){if(a[d]){n=true;break}p=d;d=o.dirname(p)}if(!n){r.push(i.searchPath);a[e]="included"}}return r}a.getSearchPaths=getSearchPaths;function match(e,a){let r=d.MatchKind.None;for(const i of e){if(i.negate){r&=~i.match(a)}else{r|=i.match(a)}}return r}a.match=match;function partialMatch(e,a){return e.some((e=>!e.negate&&e.partialMatch(a)))}a.partialMatch=partialMatch},4536:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.Pattern=void 0;const d=p(r(2087));const s=p(r(5622));const l=p(r(1849));const u=o(r(2357));const m=r(3973);const c=r(1063);const h=r(6836);const v=process.platform==="win32";class Pattern{constructor(e,a=false,r,i){this.negate=false;let n;if(typeof e==="string"){n=e.trim()}else{r=r||[];u.default(r.length,`Parameter 'segments' must not empty`);const a=Pattern.getLiteral(r[0]);u.default(a&&l.hasAbsoluteRoot(a),`Parameter 'segments' first element must be a root path`);n=new h.Path(r).toString().trim();if(e){n=`!${n}`}}while(n.startsWith("!")){this.negate=!this.negate;n=n.substr(1).trim()}n=Pattern.fixupPattern(n,i);this.segments=new h.Path(n).segments;this.trailingSeparator=l.normalizeSeparators(n).endsWith(s.sep);n=l.safeTrimTrailingSeparator(n);let p=false;const o=this.segments.map((e=>Pattern.getLiteral(e))).filter((e=>!p&&!(p=e==="")));this.searchPath=new h.Path(o).toString();this.rootRegExp=new RegExp(Pattern.regExpEscape(o[0]),v?"i":"");this.isImplicitPattern=a;const d={dot:true,nobrace:true,nocase:v,nocomment:true,noext:true,nonegate:true};n=v?n.replace(/\\/g,"/"):n;this.minimatch=new m.Minimatch(n,d)}match(e){if(this.segments[this.segments.length-1]==="**"){e=l.normalizeSeparators(e);if(!e.endsWith(s.sep)&&this.isImplicitPattern===false){e=`${e}${s.sep}`}}else{e=l.safeTrimTrailingSeparator(e)}if(this.minimatch.match(e)){return this.trailingSeparator?c.MatchKind.Directory:c.MatchKind.All}return c.MatchKind.None}partialMatch(e){e=l.safeTrimTrailingSeparator(e);if(l.dirname(e)===e){return this.rootRegExp.test(e)}return this.minimatch.matchOne(e.split(v?/\\+/:/\/+/),this.minimatch.set[0],true)}static globEscape(e){return(v?e:e.replace(/\\/g,"\\\\")).replace(/(\[)(?=[^/]+\])/g,"[[]").replace(/\?/g,"[?]").replace(/\*/g,"[*]")}static fixupPattern(e,a){u.default(e,"pattern cannot be empty");const r=new h.Path(e).segments.map((e=>Pattern.getLiteral(e)));u.default(r.every(((e,a)=>(e!=="."||a===0)&&e!=="..")),`Invalid pattern '${e}'. Relative pathing '.' and '..' is not allowed.`);u.default(!l.hasRoot(e)||r[0],`Invalid pattern '${e}'. Root segment must not contain globs.`);e=l.normalizeSeparators(e);if(e==="."||e.startsWith(`.${s.sep}`)){e=Pattern.globEscape(process.cwd())+e.substr(1)}else if(e==="~"||e.startsWith(`~${s.sep}`)){a=a||d.homedir();u.default(a,"Unable to determine HOME directory");u.default(l.hasAbsoluteRoot(a),`Expected HOME directory to be a rooted path. Actual '${a}'`);e=Pattern.globEscape(a)+e.substr(1)}else if(v&&(e.match(/^[A-Z]:$/i)||e.match(/^[A-Z]:[^\\]/i))){let a=l.ensureAbsoluteRoot("C:\\dummy-root",e.substr(0,2));if(e.length>2&&!a.endsWith("\\")){a+="\\"}e=Pattern.globEscape(a)+e.substr(2)}else if(v&&(e==="\\"||e.match(/^\\[^\\]/))){let a=l.ensureAbsoluteRoot("C:\\dummy-root","\\");if(!a.endsWith("\\")){a+="\\"}e=Pattern.globEscape(a)+e.substr(1)}else{e=l.ensureAbsoluteRoot(Pattern.globEscape(process.cwd()),e)}return l.normalizeSeparators(e)}static getLiteral(e){let a="";for(let r=0;r<e.length;r++){const i=e[r];if(i==="\\"&&!v&&r+1<e.length){a+=e[++r];continue}else if(i==="*"||i==="?"){return""}else if(i==="["&&r+1<e.length){let i="";let n=-1;for(let a=r+1;a<e.length;a++){const r=e[a];if(r==="\\"&&!v&&a+1<e.length){i+=e[++a];continue}else if(r==="]"){n=a;break}else{i+=r}}if(n>=0){if(i.length>1){return""}if(i){a+=i;r=n;continue}}}a+=i}return a}static regExpEscape(e){return e.replace(/[[\\^$.|?*+()]/g,"\\$&")}}a.Pattern=Pattern},9117:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.SearchState=void 0;class SearchState{constructor(e,a){this.path=e;this.level=a}}a.SearchState=SearchState},3702:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});class BasicCredentialHandler{constructor(e,a){this.username=e;this.password=a}prepareRequest(e){e.headers["Authorization"]="Basic "+Buffer.from(this.username+":"+this.password).toString("base64")}canHandleAuthentication(e){return false}handleAuthentication(e,a,r){return null}}a.BasicCredentialHandler=BasicCredentialHandler;class BearerCredentialHandler{constructor(e){this.token=e}prepareRequest(e){e.headers["Authorization"]="Bearer "+this.token}canHandleAuthentication(e){return false}handleAuthentication(e,a,r){return null}}a.BearerCredentialHandler=BearerCredentialHandler;class PersonalAccessTokenCredentialHandler{constructor(e){this.token=e}prepareRequest(e){e.headers["Authorization"]="Basic "+Buffer.from("PAT:"+this.token).toString("base64")}canHandleAuthentication(e){return false}handleAuthentication(e,a,r){return null}}a.PersonalAccessTokenCredentialHandler=PersonalAccessTokenCredentialHandler},9925:(e,a,r)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});const i=r(8605);const n=r(7211);const p=r(6443);let o;var d;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(d=a.HttpCodes||(a.HttpCodes={}));var s;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(s=a.Headers||(a.Headers={}));var l;(function(e){e["ApplicationJson"]="application/json"})(l=a.MediaTypes||(a.MediaTypes={}));function getProxyUrl(e){let a=p.getProxyUrl(new URL(e));return a?a.href:""}a.getProxyUrl=getProxyUrl;const u=[d.MovedPermanently,d.ResourceMoved,d.SeeOther,d.TemporaryRedirect,d.PermanentRedirect];const m=[d.BadGateway,d.ServiceUnavailable,d.GatewayTimeout];const c=["OPTIONS","GET","DELETE","HEAD"];const h=10;const v=5;class HttpClientError extends Error{constructor(e,a){super(e);this.name="HttpClientError";this.statusCode=a;Object.setPrototypeOf(this,HttpClientError.prototype)}}a.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return new Promise((async(e,a)=>{let r=Buffer.alloc(0);this.message.on("data",(e=>{r=Buffer.concat([r,e])}));this.message.on("end",(()=>{e(r.toString())}))}))}}a.HttpClientResponse=HttpClientResponse;function isHttps(e){let a=new URL(e);return a.protocol==="https:"}a.isHttps=isHttps;class HttpClient{constructor(e,a,r){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=a||[];this.requestOptions=r;if(r){if(r.ignoreSslError!=null){this._ignoreSslError=r.ignoreSslError}this._socketTimeout=r.socketTimeout;if(r.allowRedirects!=null){this._allowRedirects=r.allowRedirects}if(r.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=r.allowRedirectDowngrade}if(r.maxRedirects!=null){this._maxRedirects=Math.max(r.maxRedirects,0)}if(r.keepAlive!=null){this._keepAlive=r.keepAlive}if(r.allowRetries!=null){this._allowRetries=r.allowRetries}if(r.maxRetries!=null){this._maxRetries=r.maxRetries}}}options(e,a){return this.request("OPTIONS",e,null,a||{})}get(e,a){return this.request("GET",e,null,a||{})}del(e,a){return this.request("DELETE",e,null,a||{})}post(e,a,r){return this.request("POST",e,a,r||{})}patch(e,a,r){return this.request("PATCH",e,a,r||{})}put(e,a,r){return this.request("PUT",e,a,r||{})}head(e,a){return this.request("HEAD",e,null,a||{})}sendStream(e,a,r,i){return this.request(e,a,r,i)}async getJson(e,a={}){a[s.Accept]=this._getExistingOrDefaultHeader(a,s.Accept,l.ApplicationJson);let r=await this.get(e,a);return this._processResponse(r,this.requestOptions)}async postJson(e,a,r={}){let i=JSON.stringify(a,null,2);r[s.Accept]=this._getExistingOrDefaultHeader(r,s.Accept,l.ApplicationJson);r[s.ContentType]=this._getExistingOrDefaultHeader(r,s.ContentType,l.ApplicationJson);let n=await this.post(e,i,r);return this._processResponse(n,this.requestOptions)}async putJson(e,a,r={}){let i=JSON.stringify(a,null,2);r[s.Accept]=this._getExistingOrDefaultHeader(r,s.Accept,l.ApplicationJson);r[s.ContentType]=this._getExistingOrDefaultHeader(r,s.ContentType,l.ApplicationJson);let n=await this.put(e,i,r);return this._processResponse(n,this.requestOptions)}async patchJson(e,a,r={}){let i=JSON.stringify(a,null,2);r[s.Accept]=this._getExistingOrDefaultHeader(r,s.Accept,l.ApplicationJson);r[s.ContentType]=this._getExistingOrDefaultHeader(r,s.ContentType,l.ApplicationJson);let n=await this.patch(e,i,r);return this._processResponse(n,this.requestOptions)}async request(e,a,r,i){if(this._disposed){throw new Error("Client has already been disposed.")}let n=new URL(a);let p=this._prepareRequest(e,n,i);let o=this._allowRetries&&c.indexOf(e)!=-1?this._maxRetries+1:1;let s=0;let l;while(s<o){l=await this.requestRaw(p,r);if(l&&l.message&&l.message.statusCode===d.Unauthorized){let e;for(let a=0;a<this.handlers.length;a++){if(this.handlers[a].canHandleAuthentication(l)){e=this.handlers[a];break}}if(e){return e.handleAuthentication(this,p,r)}else{return l}}let a=this._maxRedirects;while(u.indexOf(l.message.statusCode)!=-1&&this._allowRedirects&&a>0){const o=l.message.headers["location"];if(!o){break}let d=new URL(o);if(n.protocol=="https:"&&n.protocol!=d.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}await l.readBody();if(d.hostname!==n.hostname){for(let e in i){if(e.toLowerCase()==="authorization"){delete i[e]}}}p=this._prepareRequest(e,d,i);l=await this.requestRaw(p,r);a--}if(m.indexOf(l.message.statusCode)==-1){return l}s+=1;if(s<o){await l.readBody();await this._performExponentialBackoff(s)}}return l}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,a){return new Promise(((r,i)=>{let callbackForResult=function(e,a){if(e){i(e)}r(a)};this.requestRawWithCallback(e,a,callbackForResult)}))}requestRawWithCallback(e,a,r){let i;if(typeof a==="string"){e.options.headers["Content-Length"]=Buffer.byteLength(a,"utf8")}let n=false;let handleResult=(e,a)=>{if(!n){n=true;r(e,a)}};let p=e.httpModule.request(e.options,(e=>{let a=new HttpClientResponse(e);handleResult(null,a)}));p.on("socket",(e=>{i=e}));p.setTimeout(this._socketTimeout||3*6e4,(()=>{if(i){i.end()}handleResult(new Error("Request timeout: "+e.options.path),null)}));p.on("error",(function(e){handleResult(e,null)}));if(a&&typeof a==="string"){p.write(a,"utf8")}if(a&&typeof a!=="string"){a.on("close",(function(){p.end()}));a.pipe(p)}else{p.end()}}getAgent(e){let a=new URL(e);return this._getAgent(a)}_prepareRequest(e,a,r){const p={};p.parsedUrl=a;const o=p.parsedUrl.protocol==="https:";p.httpModule=o?n:i;const d=o?443:80;p.options={};p.options.host=p.parsedUrl.hostname;p.options.port=p.parsedUrl.port?parseInt(p.parsedUrl.port):d;p.options.path=(p.parsedUrl.pathname||"")+(p.parsedUrl.search||"");p.options.method=e;p.options.headers=this._mergeHeaders(r);if(this.userAgent!=null){p.options.headers["user-agent"]=this.userAgent}p.options.agent=this._getAgent(p.parsedUrl);if(this.handlers){this.handlers.forEach((e=>{e.prepareRequest(p.options)}))}return p}_mergeHeaders(e){const lowercaseKeys=e=>Object.keys(e).reduce(((a,r)=>(a[r.toLowerCase()]=e[r],a)),{});if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(e))}return lowercaseKeys(e||{})}_getExistingOrDefaultHeader(e,a,r){const lowercaseKeys=e=>Object.keys(e).reduce(((a,r)=>(a[r.toLowerCase()]=e[r],a)),{});let i;if(this.requestOptions&&this.requestOptions.headers){i=lowercaseKeys(this.requestOptions.headers)[a]}return e[a]||i||r}_getAgent(e){let a;let d=p.getProxyUrl(e);let s=d&&d.hostname;if(this._keepAlive&&s){a=this._proxyAgent}if(this._keepAlive&&!s){a=this._agent}if(!!a){return a}const l=e.protocol==="https:";let u=100;if(!!this.requestOptions){u=this.requestOptions.maxSockets||i.globalAgent.maxSockets}if(s){if(!o){o=r(4294)}const e={maxSockets:u,keepAlive:this._keepAlive,proxy:{...(d.username||d.password)&&{proxyAuth:`${d.username}:${d.password}`},host:d.hostname,port:d.port}};let i;const n=d.protocol==="https:";if(l){i=n?o.httpsOverHttps:o.httpsOverHttp}else{i=n?o.httpOverHttps:o.httpOverHttp}a=i(e);this._proxyAgent=a}if(this._keepAlive&&!a){const e={keepAlive:this._keepAlive,maxSockets:u};a=l?new n.Agent(e):new i.Agent(e);this._agent=a}if(!a){a=l?n.globalAgent:i.globalAgent}if(l&&this._ignoreSslError){a.options=Object.assign(a.options||{},{rejectUnauthorized:false})}return a}_performExponentialBackoff(e){e=Math.min(h,e);const a=v*Math.pow(2,e);return new Promise((e=>setTimeout((()=>e()),a)))}static dateTimeDeserializer(e,a){if(typeof a==="string"){let e=new Date(a);if(!isNaN(e.valueOf())){return e}}return a}async _processResponse(e,a){return new Promise((async(r,i)=>{const n=e.message.statusCode;const p={statusCode:n,result:null,headers:{}};if(n==d.NotFound){r(p)}let o;let s;try{s=await e.readBody();if(s&&s.length>0){if(a&&a.deserializeDates){o=JSON.parse(s,HttpClient.dateTimeDeserializer)}else{o=JSON.parse(s)}p.result=o}p.headers=e.message.headers}catch(e){}if(n>299){let e;if(o&&o.message){e=o.message}else if(s&&s.length>0){e=s}else{e="Failed request: ("+n+")"}let a=new HttpClientError(e,n);a.result=p.result;i(a)}else{r(p)}}))}}a.HttpClient=HttpClient},6443:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function getProxyUrl(e){let a=e.protocol==="https:";let r;if(checkBypass(e)){return r}let i;if(a){i=process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{i=process.env["http_proxy"]||process.env["HTTP_PROXY"]}if(i){r=new URL(i)}return r}a.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}let a=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!a){return false}let r;if(e.port){r=Number(e.port)}else if(e.protocol==="http:"){r=80}else if(e.protocol==="https:"){r=443}let i=[e.hostname.toUpperCase()];if(typeof r==="number"){i.push(`${i[0]}:${r}`)}for(let e of a.split(",").map((e=>e.trim().toUpperCase())).filter((e=>e))){if(i.some((a=>a===e))){return true}}return false}a.checkBypass=checkBypass},1962:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};var d;Object.defineProperty(a,"__esModule",{value:true});a.getCmdPath=a.tryGetExecutablePath=a.isRooted=a.isDirectory=a.exists=a.IS_WINDOWS=a.unlink=a.symlink=a.stat=a.rmdir=a.rename=a.readlink=a.readdir=a.mkdir=a.lstat=a.copyFile=a.chmod=void 0;const s=p(r(5747));const l=p(r(5622));d=s.promises,a.chmod=d.chmod,a.copyFile=d.copyFile,a.lstat=d.lstat,a.mkdir=d.mkdir,a.readdir=d.readdir,a.readlink=d.readlink,a.rename=d.rename,a.rmdir=d.rmdir,a.stat=d.stat,a.symlink=d.symlink,a.unlink=d.unlink;a.IS_WINDOWS=process.platform==="win32";function exists(e){return o(this,void 0,void 0,(function*(){try{yield a.stat(e)}catch(e){if(e.code==="ENOENT"){return false}throw e}return true}))}a.exists=exists;function isDirectory(e,r=false){return o(this,void 0,void 0,(function*(){const i=r?yield a.stat(e):yield a.lstat(e);return i.isDirectory()}))}a.isDirectory=isDirectory;function isRooted(e){e=normalizeSeparators(e);if(!e){throw new Error('isRooted() parameter "p" cannot be empty')}if(a.IS_WINDOWS){return e.startsWith("\\")||/^[A-Z]:/i.test(e)}return e.startsWith("/")}a.isRooted=isRooted;function tryGetExecutablePath(e,r){return o(this,void 0,void 0,(function*(){let i=undefined;try{i=yield a.stat(e)}catch(a){if(a.code!=="ENOENT"){console.log(`Unexpected error attempting to determine if executable file exists '${e}': ${a}`)}}if(i&&i.isFile()){if(a.IS_WINDOWS){const a=l.extname(e).toUpperCase();if(r.some((e=>e.toUpperCase()===a))){return e}}else{if(isUnixExecutable(i)){return e}}}const n=e;for(const p of r){e=n+p;i=undefined;try{i=yield a.stat(e)}catch(a){if(a.code!=="ENOENT"){console.log(`Unexpected error attempting to determine if executable file exists '${e}': ${a}`)}}if(i&&i.isFile()){if(a.IS_WINDOWS){try{const r=l.dirname(e);const i=l.basename(e).toUpperCase();for(const n of yield a.readdir(r)){if(i===n.toUpperCase()){e=l.join(r,n);break}}}catch(a){console.log(`Unexpected error attempting to determine the actual case of the file '${e}': ${a}`)}return e}else{if(isUnixExecutable(i)){return e}}}}return""}))}a.tryGetExecutablePath=tryGetExecutablePath;function normalizeSeparators(e){e=e||"";if(a.IS_WINDOWS){e=e.replace(/\//g,"\\");return e.replace(/\\\\+/g,"\\")}return e.replace(/\/\/+/g,"/")}function isUnixExecutable(e){return(e.mode&1)>0||(e.mode&8)>0&&e.gid===process.getgid()||(e.mode&64)>0&&e.uid===process.getuid()}function getCmdPath(){var e;return(e=process.env["COMSPEC"])!==null&&e!==void 0?e:`cmd.exe`}a.getCmdPath=getCmdPath},7436:function(e,a,r){"use strict";var i=this&&this.__createBinding||(Object.create?function(e,a,r,i){if(i===undefined)i=r;Object.defineProperty(e,i,{enumerable:true,get:function(){return a[r]}})}:function(e,a,r,i){if(i===undefined)i=r;e[i]=a[r]});var n=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var p=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var r in e)if(r!=="default"&&Object.hasOwnProperty.call(e,r))i(a,e,r);n(a,e);return a};var o=this&&this.__awaiter||function(e,a,r,i){function adopt(e){return e instanceof r?e:new r((function(a){a(e)}))}return new(r||(r=Promise))((function(r,n){function fulfilled(e){try{step(i.next(e))}catch(e){n(e)}}function rejected(e){try{step(i["throw"](e))}catch(e){n(e)}}function step(e){e.done?r(e.value):adopt(e.value).then(fulfilled,rejected)}step((i=i.apply(e,a||[])).next())}))};Object.defineProperty(a,"__esModule",{value:true});a.findInPath=a.which=a.mkdirP=a.rmRF=a.mv=a.cp=void 0;const d=r(2357);const s=p(r(3129));const l=p(r(5622));const u=r(1669);const m=p(r(1962));const c=u.promisify(s.exec);const h=u.promisify(s.execFile);function cp(e,a,r={}){return o(this,void 0,void 0,(function*(){const{force:i,recursive:n,copySourceDirectory:p}=readCopyOptions(r);const o=(yield m.exists(a))?yield m.stat(a):null;if(o&&o.isFile()&&!i){return}const d=o&&o.isDirectory()&&p?l.join(a,l.basename(e)):a;if(!(yield m.exists(e))){throw new Error(`no such file or directory: ${e}`)}const s=yield m.stat(e);if(s.isDirectory()){if(!n){throw new Error(`Failed to copy. ${e} is a directory, but tried to copy without recursive flag.`)}else{yield cpDirRecursive(e,d,0,i)}}else{if(l.relative(e,d)===""){throw new Error(`'${d}' and '${e}' are the same file`)}yield copyFile(e,d,i)}}))}a.cp=cp;function mv(e,a,r={}){return o(this,void 0,void 0,(function*(){if(yield m.exists(a)){let i=true;if(yield m.isDirectory(a)){a=l.join(a,l.basename(e));i=yield m.exists(a)}if(i){if(r.force==null||r.force){yield rmRF(a)}else{throw new Error("Destination already exists")}}}yield mkdirP(l.dirname(a));yield m.rename(e,a)}))}a.mv=mv;function rmRF(e){return o(this,void 0,void 0,(function*(){if(m.IS_WINDOWS){if(/[*"<>|]/.test(e)){throw new Error('File path must not contain `*`, `"`, `<`, `>` or `|` on Windows')}try{const a=m.getCmdPath();if(yield m.isDirectory(e,true)){yield c(`${a} /s /c "rd /s /q "%inputPath%""`,{env:{inputPath:e}})}else{yield c(`${a} /s /c "del /f /a "%inputPath%""`,{env:{inputPath:e}})}}catch(e){if(e.code!=="ENOENT")throw e}try{yield m.unlink(e)}catch(e){if(e.code!=="ENOENT")throw e}}else{let a=false;try{a=yield m.isDirectory(e)}catch(e){if(e.code!=="ENOENT")throw e;return}if(a){yield h(`rm`,[`-rf`,`${e}`])}else{yield m.unlink(e)}}}))}a.rmRF=rmRF;function mkdirP(e){return o(this,void 0,void 0,(function*(){d.ok(e,"a path argument must be provided");yield m.mkdir(e,{recursive:true})}))}a.mkdirP=mkdirP;function which(e,a){return o(this,void 0,void 0,(function*(){if(!e){throw new Error("parameter 'tool' is required")}if(a){const a=yield which(e,false);if(!a){if(m.IS_WINDOWS){throw new Error(`Unable to locate executable file: ${e}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`)}else{throw new Error(`Unable to locate executable file: ${e}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`)}}return a}const r=yield findInPath(e);if(r&&r.length>0){return r[0]}return""}))}a.which=which;function findInPath(e){return o(this,void 0,void 0,(function*(){if(!e){throw new Error("parameter 'tool' is required")}const a=[];if(m.IS_WINDOWS&&process.env["PATHEXT"]){for(const e of process.env["PATHEXT"].split(l.delimiter)){if(e){a.push(e)}}}if(m.isRooted(e)){const r=yield m.tryGetExecutablePath(e,a);if(r){return[r]}return[]}if(e.includes(l.sep)){return[]}const r=[];if(process.env.PATH){for(const e of process.env.PATH.split(l.delimiter)){if(e){r.push(e)}}}const i=[];for(const n of r){const r=yield m.tryGetExecutablePath(l.join(n,e),a);if(r){i.push(r)}}return i}))}a.findInPath=findInPath;function readCopyOptions(e){const a=e.force==null?true:e.force;const r=Boolean(e.recursive);const i=e.copySourceDirectory==null?true:Boolean(e.copySourceDirectory);return{force:a,recursive:r,copySourceDirectory:i}}function cpDirRecursive(e,a,r,i){return o(this,void 0,void 0,(function*(){if(r>=255)return;r++;yield mkdirP(a);const n=yield m.readdir(e);for(const p of n){const n=`${e}/${p}`;const o=`${a}/${p}`;const d=yield m.lstat(n);if(d.isDirectory()){yield cpDirRecursive(n,o,r,i)}else{yield copyFile(n,o,i)}}yield m.chmod(a,(yield m.stat(e)).mode)}))}function copyFile(e,a,r){return o(this,void 0,void 0,(function*(){if((yield m.lstat(e)).isSymbolicLink()){try{yield m.lstat(a);yield m.unlink(a)}catch(e){if(e.code==="EPERM"){yield m.chmod(a,"0666");yield m.unlink(a)}}const r=yield m.readlink(e);yield m.symlink(r,a,m.IS_WINDOWS?"junction":null)}else if(!(yield m.exists(a))||r){yield m.copyFile(e,a)}}))}},9417:e=>{"use strict";e.exports=balanced;function balanced(e,a,r){if(e instanceof RegExp)e=maybeMatch(e,r);if(a instanceof RegExp)a=maybeMatch(a,r);var i=range(e,a,r);return i&&{start:i[0],end:i[1],pre:r.slice(0,i[0]),body:r.slice(i[0]+e.length,i[1]),post:r.slice(i[1]+a.length)}}function maybeMatch(e,a){var r=a.match(e);return r?r[0]:null}balanced.range=range;function range(e,a,r){var i,n,p,o,d;var s=r.indexOf(e);var l=r.indexOf(a,s+1);var u=s;if(s>=0&&l>0){if(e===a){return[s,l]}i=[];p=r.length;while(u>=0&&!d){if(u==s){i.push(u);s=r.indexOf(e,u+1)}else if(i.length==1){d=[i.pop(),l]}else{n=i.pop();if(n<p){p=n;o=l}l=r.indexOf(a,u+1)}u=s<l&&s>=0?s:l}if(i.length){d=[p,o]}}return d}},7817:(e,a,r)=>{var i=r(5026);var n="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";var p="0123456789ABCDEFGHIJKLMNOPQRSTUV";var o="0123456789ABCDEFGHJKMNPQRSTVWXYZ";e.exports=function base32Encode(e,a,r){r=r||{};var d,s;switch(a){case"RFC3548":case"RFC4648":d=n;s=true;break;case"RFC4648-HEX":d=p;s=true;break;case"Crockford":d=o;s=false;break;default:throw new Error("Unknown base32 variant: "+a)}var l=r.padding!==undefined?r.padding:s;var u=i(e);var m=0;var c=0;var h="";for(var v=0;v<u.byteLength;v++){c=c<<8|u.getUint8(v);m+=8;while(m>=5){h+=d[c>>>m-5&31];m-=5}}if(m>0){h+=d[c<<5-m&31]}if(l){while(h.length%8!==0){h+="="}}return h}},6463:(e,a)=>{"use strict";a.byteLength=byteLength;a.toByteArray=toByteArray;a.fromByteArray=fromByteArray;var r=[];var i=[];var n=typeof Uint8Array!=="undefined"?Uint8Array:Array;var p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var o=0,d=p.length;o<d;++o){r[o]=p[o];i[p.charCodeAt(o)]=o}i["-".charCodeAt(0)]=62;i["_".charCodeAt(0)]=63;function getLens(e){var a=e.length;if(a%4>0){throw new Error("Invalid string. Length must be a multiple of 4")}var r=e.indexOf("=");if(r===-1)r=a;var i=r===a?0:4-r%4;return[r,i]}function byteLength(e){var a=getLens(e);var r=a[0];var i=a[1];return(r+i)*3/4-i}function _byteLength(e,a,r){return(a+r)*3/4-r}function toByteArray(e){var a;var r=getLens(e);var p=r[0];var o=r[1];var d=new n(_byteLength(e,p,o));var s=0;var l=o>0?p-4:p;var u;for(u=0;u<l;u+=4){a=i[e.charCodeAt(u)]<<18|i[e.charCodeAt(u+1)]<<12|i[e.charCodeAt(u+2)]<<6|i[e.charCodeAt(u+3)];d[s++]=a>>16&255;d[s++]=a>>8&255;d[s++]=a&255}if(o===2){a=i[e.charCodeAt(u)]<<2|i[e.charCodeAt(u+1)]>>4;d[s++]=a&255}if(o===1){a=i[e.charCodeAt(u)]<<10|i[e.charCodeAt(u+1)]<<4|i[e.charCodeAt(u+2)]>>2;d[s++]=a>>8&255;d[s++]=a&255}return d}function tripletToBase64(e){return r[e>>18&63]+r[e>>12&63]+r[e>>6&63]+r[e&63]}function encodeChunk(e,a,r){var i;var n=[];for(var p=a;p<r;p+=3){i=(e[p]<<16&16711680)+(e[p+1]<<8&65280)+(e[p+2]&255);n.push(tripletToBase64(i))}return n.join("")}function fromByteArray(e){var a;var i=e.length;var n=i%3;var p=[];var o=16383;for(var d=0,s=i-n;d<s;d+=o){p.push(encodeChunk(e,d,d+o>s?s:d+o))}if(n===1){a=e[i-1];p.push(r[a>>2]+r[a<<4&63]+"==")}else if(n===2){a=(e[i-2]<<8)+e[i-1];p.push(r[a>>10]+r[a>>4&63]+r[a<<2&63]+"=")}return p.join("")}},1575:(e,a,r)=>{e=r.nmd(e);var i=function(e){"use strict";var a=1e7,r=7,n=9007199254740992,p=smallToArray(n),o="0123456789abcdefghijklmnopqrstuvwxyz";var d=typeof BigInt==="function";function Integer(e,a,r,i){if(typeof e==="undefined")return Integer[0];if(typeof a!=="undefined")return+a===10&&!r?parseValue(e):parseBase(e,a,r,i);return parseValue(e)}function BigInteger(e,a){this.value=e;this.sign=a;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(e){this.value=e;this.sign=e<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(e){this.value=e}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(e){return-n<e&&e<n}function smallToArray(e){if(e<1e7)return[e];if(e<1e14)return[e%1e7,Math.floor(e/1e7)];return[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function arrayToSmall(e){trim(e);var r=e.length;if(r<4&&compareAbs(e,p)<0){switch(r){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*a;default:return e[0]+(e[1]+e[2]*a)*a}}return e}function trim(e){var a=e.length;while(e[--a]===0);e.length=a+1}function createArray(e){var a=new Array(e);var r=-1;while(++r<e){a[r]=0}return a}function truncate(e){if(e>0)return Math.floor(e);return Math.ceil(e)}function add(e,r){var i=e.length,n=r.length,p=new Array(i),o=0,d=a,s,l;for(l=0;l<n;l++){s=e[l]+r[l]+o;o=s>=d?1:0;p[l]=s-o*d}while(l<i){s=e[l]+o;o=s===d?1:0;p[l++]=s-o*d}if(o>0)p.push(o);return p}function addAny(e,a){if(e.length>=a.length)return add(e,a);return add(a,e)}function addSmall(e,r){var i=e.length,n=new Array(i),p=a,o,d;for(d=0;d<i;d++){o=e[d]-p+r;r=Math.floor(o/p);n[d]=o-r*p;r+=1}while(r>0){n[d++]=r%p;r=Math.floor(r/p)}return n}BigInteger.prototype.add=function(e){var a=parseValue(e);if(this.sign!==a.sign){return this.subtract(a.negate())}var r=this.value,i=a.value;if(a.isSmall){return new BigInteger(addSmall(r,Math.abs(i)),this.sign)}return new BigInteger(addAny(r,i),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(e){var a=parseValue(e);var r=this.value;if(r<0!==a.sign){return this.subtract(a.negate())}var i=a.value;if(a.isSmall){if(isPrecise(r+i))return new SmallInteger(r+i);i=smallToArray(Math.abs(i))}return new BigInteger(addSmall(i,Math.abs(r)),r<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(e){return new NativeBigInt(this.value+parseValue(e).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(e,r){var i=e.length,n=r.length,p=new Array(i),o=0,d=a,s,l;for(s=0;s<n;s++){l=e[s]-o-r[s];if(l<0){l+=d;o=1}else o=0;p[s]=l}for(s=n;s<i;s++){l=e[s]-o;if(l<0)l+=d;else{p[s++]=l;break}p[s]=l}for(;s<i;s++){p[s]=e[s]}trim(p);return p}function subtractAny(e,a,r){var i;if(compareAbs(e,a)>=0){i=subtract(e,a)}else{i=subtract(a,e);r=!r}i=arrayToSmall(i);if(typeof i==="number"){if(r)i=-i;return new SmallInteger(i)}return new BigInteger(i,r)}function subtractSmall(e,r,i){var n=e.length,p=new Array(n),o=-r,d=a,s,l;for(s=0;s<n;s++){l=e[s]+o;o=Math.floor(l/d);l%=d;p[s]=l<0?l+d:l}p=arrayToSmall(p);if(typeof p==="number"){if(i)p=-p;return new SmallInteger(p)}return new BigInteger(p,i)}BigInteger.prototype.subtract=function(e){var a=parseValue(e);if(this.sign!==a.sign){return this.add(a.negate())}var r=this.value,i=a.value;if(a.isSmall)return subtractSmall(r,Math.abs(i),this.sign);return subtractAny(r,i,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(e){var a=parseValue(e);var r=this.value;if(r<0!==a.sign){return this.add(a.negate())}var i=a.value;if(a.isSmall){return new SmallInteger(r-i)}return subtractSmall(i,Math.abs(r),r>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(e){return new NativeBigInt(this.value-parseValue(e).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var e=this.sign;var a=new SmallInteger(-this.value);a.sign=!e;return a};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(e,r){var i=e.length,n=r.length,p=i+n,o=createArray(p),d=a,s,l,u,m,c;for(u=0;u<i;++u){m=e[u];for(var h=0;h<n;++h){c=r[h];s=m*c+o[u+h];l=Math.floor(s/d);o[u+h]=s-l*d;o[u+h+1]+=l}}trim(o);return o}function multiplySmall(e,r){var i=e.length,n=new Array(i),p=a,o=0,d,s;for(s=0;s<i;s++){d=e[s]*r+o;o=Math.floor(d/p);n[s]=d-o*p}while(o>0){n[s++]=o%p;o=Math.floor(o/p)}return n}function shiftLeft(e,a){var r=[];while(a-- >0)r.push(0);return r.concat(e)}function multiplyKaratsuba(e,a){var r=Math.max(e.length,a.length);if(r<=30)return multiplyLong(e,a);r=Math.ceil(r/2);var i=e.slice(r),n=e.slice(0,r),p=a.slice(r),o=a.slice(0,r);var d=multiplyKaratsuba(n,o),s=multiplyKaratsuba(i,p),l=multiplyKaratsuba(addAny(n,i),addAny(o,p));var u=addAny(addAny(d,shiftLeft(subtract(subtract(l,d),s),r)),shiftLeft(s,2*r));trim(u);return u}function useKaratsuba(e,a){return-.012*e-.012*a+15e-6*e*a>0}BigInteger.prototype.multiply=function(e){var r=parseValue(e),i=this.value,n=r.value,p=this.sign!==r.sign,o;if(r.isSmall){if(n===0)return Integer[0];if(n===1)return this;if(n===-1)return this.negate();o=Math.abs(n);if(o<a){return new BigInteger(multiplySmall(i,o),p)}n=smallToArray(o)}if(useKaratsuba(i.length,n.length))return new BigInteger(multiplyKaratsuba(i,n),p);return new BigInteger(multiplyLong(i,n),p)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(e,r,i){if(e<a){return new BigInteger(multiplySmall(r,e),i)}return new BigInteger(multiplyLong(r,smallToArray(e)),i)}SmallInteger.prototype._multiplyBySmall=function(e){if(isPrecise(e.value*this.value)){return new SmallInteger(e.value*this.value)}return multiplySmallAndArray(Math.abs(e.value),smallToArray(Math.abs(this.value)),this.sign!==e.sign)};BigInteger.prototype._multiplyBySmall=function(e){if(e.value===0)return Integer[0];if(e.value===1)return this;if(e.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(e.value),this.value,this.sign!==e.sign)};SmallInteger.prototype.multiply=function(e){return parseValue(e)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(e){return new NativeBigInt(this.value*parseValue(e).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(e){var r=e.length,i=createArray(r+r),n=a,p,o,d,s,l;for(d=0;d<r;d++){s=e[d];o=0-s*s;for(var u=d;u<r;u++){l=e[u];p=2*(s*l)+i[d+u]+o;o=Math.floor(p/n);i[d+u]=p-o*n}i[d+r]=o}trim(i);return i}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var e=this.value*this.value;if(isPrecise(e))return new SmallInteger(e);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(e){return new NativeBigInt(this.value*this.value)};function divMod1(e,r){var i=e.length,n=r.length,p=a,o=createArray(r.length),d=r[n-1],s=Math.ceil(p/(2*d)),l=multiplySmall(e,s),u=multiplySmall(r,s),m,c,h,v,g,y,w;if(l.length<=i)l.push(0);u.push(0);d=u[n-1];for(c=i-n;c>=0;c--){m=p-1;if(l[c+n]!==d){m=Math.floor((l[c+n]*p+l[c+n-1])/d)}h=0;v=0;y=u.length;for(g=0;g<y;g++){h+=m*u[g];w=Math.floor(h/p);v+=l[c+g]-(h-w*p);h=w;if(v<0){l[c+g]=v+p;v=-1}else{l[c+g]=v;v=0}}while(v!==0){m-=1;h=0;for(g=0;g<y;g++){h+=l[c+g]-p+u[g];if(h<0){l[c+g]=h+p;h=0}else{l[c+g]=h;h=1}}v+=h}o[c]=m}l=divModSmall(l,s)[0];return[arrayToSmall(o),arrayToSmall(l)]}function divMod2(e,r){var i=e.length,n=r.length,p=[],o=[],d=a,s,l,u,m,c;while(i){o.unshift(e[--i]);trim(o);if(compareAbs(o,r)<0){p.push(0);continue}l=o.length;u=o[l-1]*d+o[l-2];m=r[n-1]*d+r[n-2];if(l>n){u=(u+1)*d}s=Math.ceil(u/m);do{c=multiplySmall(r,s);if(compareAbs(c,o)<=0)break;s--}while(s);p.push(s);o=subtract(o,c)}p.reverse();return[arrayToSmall(p),arrayToSmall(o)]}function divModSmall(e,r){var i=e.length,n=createArray(i),p=a,o,d,s,l;s=0;for(o=i-1;o>=0;--o){l=s*p+e[o];d=truncate(l/r);s=l-d*r;n[o]=d|0}return[n,s|0]}function divModAny(e,r){var i,n=parseValue(r);if(d){return[new NativeBigInt(e.value/n.value),new NativeBigInt(e.value%n.value)]}var p=e.value,o=n.value;var s;if(o===0)throw new Error("Cannot divide by zero");if(e.isSmall){if(n.isSmall){return[new SmallInteger(truncate(p/o)),new SmallInteger(p%o)]}return[Integer[0],e]}if(n.isSmall){if(o===1)return[e,Integer[0]];if(o==-1)return[e.negate(),Integer[0]];var l=Math.abs(o);if(l<a){i=divModSmall(p,l);s=arrayToSmall(i[0]);var u=i[1];if(e.sign)u=-u;if(typeof s==="number"){if(e.sign!==n.sign)s=-s;return[new SmallInteger(s),new SmallInteger(u)]}return[new BigInteger(s,e.sign!==n.sign),new SmallInteger(u)]}o=smallToArray(l)}var m=compareAbs(p,o);if(m===-1)return[Integer[0],e];if(m===0)return[Integer[e.sign===n.sign?1:-1],Integer[0]];if(p.length+o.length<=200)i=divMod1(p,o);else i=divMod2(p,o);s=i[0];var c=e.sign!==n.sign,h=i[1],v=e.sign;if(typeof s==="number"){if(c)s=-s;s=new SmallInteger(s)}else s=new BigInteger(s,c);if(typeof h==="number"){if(v)h=-h;h=new SmallInteger(h)}else h=new BigInteger(h,v);return[s,h]}BigInteger.prototype.divmod=function(e){var a=divModAny(this,e);return{quotient:a[0],remainder:a[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(e){return divModAny(this,e)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(e){return new NativeBigInt(this.value/parseValue(e).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(e){return divModAny(this,e)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(e){return new NativeBigInt(this.value%parseValue(e).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(e){var a=parseValue(e),r=this.value,i=a.value,n,p,o;if(i===0)return Integer[1];if(r===0)return Integer[0];if(r===1)return Integer[1];if(r===-1)return a.isEven()?Integer[1]:Integer[-1];if(a.sign){return Integer[0]}if(!a.isSmall)throw new Error("The exponent "+a.toString()+" is too large.");if(this.isSmall){if(isPrecise(n=Math.pow(r,i)))return new SmallInteger(truncate(n))}p=this;o=Integer[1];while(true){if(i&1===1){o=o.times(p);--i}if(i===0)break;i/=2;p=p.square()}return o};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(e){var a=parseValue(e);var r=this.value,i=a.value;var n=BigInt(0),p=BigInt(1),o=BigInt(2);if(i===n)return Integer[1];if(r===n)return Integer[0];if(r===p)return Integer[1];if(r===BigInt(-1))return a.isEven()?Integer[1]:Integer[-1];if(a.isNegative())return new NativeBigInt(n);var d=this;var s=Integer[1];while(true){if((i&p)===p){s=s.times(d);--i}if(i===n)break;i/=o;d=d.square()}return s};BigInteger.prototype.modPow=function(e,a){e=parseValue(e);a=parseValue(a);if(a.isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],i=this.mod(a);if(e.isNegative()){e=e.multiply(Integer[-1]);i=i.modInv(a)}while(e.isPositive()){if(i.isZero())return Integer[0];if(e.isOdd())r=r.multiply(i).mod(a);e=e.divide(2);i=i.square().mod(a)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(e,a){if(e.length!==a.length){return e.length>a.length?1:-1}for(var r=e.length-1;r>=0;r--){if(e[r]!==a[r])return e[r]>a[r]?1:-1}return 0}BigInteger.prototype.compareAbs=function(e){var a=parseValue(e),r=this.value,i=a.value;if(a.isSmall)return 1;return compareAbs(r,i)};SmallInteger.prototype.compareAbs=function(e){var a=parseValue(e),r=Math.abs(this.value),i=a.value;if(a.isSmall){i=Math.abs(i);return r===i?0:r>i?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(e){var a=this.value;var r=parseValue(e).value;a=a>=0?a:-a;r=r>=0?r:-r;return a===r?0:a>r?1:-1};BigInteger.prototype.compare=function(e){if(e===Infinity){return-1}if(e===-Infinity){return 1}var a=parseValue(e),r=this.value,i=a.value;if(this.sign!==a.sign){return a.sign?1:-1}if(a.isSmall){return this.sign?-1:1}return compareAbs(r,i)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(e){if(e===Infinity){return-1}if(e===-Infinity){return 1}var a=parseValue(e),r=this.value,i=a.value;if(a.isSmall){return r==i?0:r>i?1:-1}if(r<0!==a.sign){return r<0?-1:1}return r<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(e){if(e===Infinity){return-1}if(e===-Infinity){return 1}var a=this.value;var r=parseValue(e).value;return a===r?0:a>r?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(e){return this.compare(e)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(e){return this.compare(e)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(e){return this.compare(e)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(e){return this.compare(e)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(e){return this.compare(e)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(e){return this.compare(e)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(e){var a=parseValue(e);if(a.isZero())return false;if(a.isUnit())return true;if(a.compareAbs(2)===0)return this.isEven();return this.mod(a).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(e){var a=e.abs();if(a.isUnit())return false;if(a.equals(2)||a.equals(3)||a.equals(5))return true;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return false;if(a.lesser(49))return true}function millerRabinTest(e,a){var r=e.prev(),n=r,p=0,o,d,s,l;while(n.isEven())n=n.divide(2),p++;e:for(s=0;s<a.length;s++){if(e.lesser(a[s]))continue;l=i(a[s]).modPow(n,e);if(l.isUnit()||l.equals(r))continue;for(o=p-1;o!=0;o--){l=l.square().mod(e);if(l.isUnit())return false;if(l.equals(r))continue e}return false}return true}BigInteger.prototype.isPrime=function(a){var r=isBasicPrime(this);if(r!==e)return r;var n=this.abs();var p=n.bitLength();if(p<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var o=Math.log(2)*p.toJSNumber();var d=Math.ceil(a===true?2*Math.pow(o,2):o);for(var s=[],l=0;l<d;l++){s.push(i(l+2))}return millerRabinTest(n,s)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(a,r){var n=isBasicPrime(this);if(n!==e)return n;var p=this.abs();var o=a===e?5:a;for(var d=[],s=0;s<o;s++){d.push(i.randBetween(2,p.minus(2),r))}return millerRabinTest(p,d)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(e){var a=i.zero,r=i.one,n=parseValue(e),p=this.abs(),o,d,s;while(!p.isZero()){o=n.divide(p);d=a;s=n;a=r;n=p;r=d.subtract(o.multiply(r));p=s.subtract(o.multiply(p))}if(!n.isUnit())throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");if(a.compare(0)===-1){a=a.add(e)}if(this.isNegative()){return a.negate()}return a};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var e=this.value;if(this.sign){return subtractSmall(e,1,this.sign)}return new BigInteger(addSmall(e,1),this.sign)};SmallInteger.prototype.next=function(){var e=this.value;if(e+1<n)return new SmallInteger(e+1);return new BigInteger(p,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var e=this.value;if(this.sign){return new BigInteger(addSmall(e,1),true)}return subtractSmall(e,1,this.sign)};SmallInteger.prototype.prev=function(){var e=this.value;if(e-1>-n)return new SmallInteger(e-1);return new BigInteger(p,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var s=[1];while(2*s[s.length-1]<=a)s.push(2*s[s.length-1]);var l=s.length,u=s[l-1];function shift_isSmall(e){return Math.abs(e)<=a}BigInteger.prototype.shiftLeft=function(e){var a=parseValue(e).toJSNumber();if(!shift_isSmall(a)){throw new Error(String(a)+" is too large for shifting.")}if(a<0)return this.shiftRight(-a);var r=this;if(r.isZero())return r;while(a>=l){r=r.multiply(u);a-=l-1}return r.multiply(s[a])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(e){var a;var r=parseValue(e).toJSNumber();if(!shift_isSmall(r)){throw new Error(String(r)+" is too large for shifting.")}if(r<0)return this.shiftLeft(-r);var i=this;while(r>=l){if(i.isZero()||i.isNegative()&&i.isUnit())return i;a=divModAny(i,u);i=a[1].isNegative()?a[0].prev():a[0];r-=l-1}a=divModAny(i,s[r]);return a[1].isNegative()?a[0].prev():a[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(e,a,r){a=parseValue(a);var n=e.isNegative(),p=a.isNegative();var o=n?e.not():e,d=p?a.not():a;var s=0,l=0;var m=null,c=null;var h=[];while(!o.isZero()||!d.isZero()){m=divModAny(o,u);s=m[1].toJSNumber();if(n){s=u-1-s}c=divModAny(d,u);l=c[1].toJSNumber();if(p){l=u-1-l}o=m[0];d=c[0];h.push(r(s,l))}var v=r(n?1:0,p?1:0)!==0?i(-1):i(0);for(var g=h.length-1;g>=0;g-=1){v=v.multiply(u).add(i(h[g]))}return v}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(e){return bitwise(this,e,(function(e,a){return e&a}))};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(e){return bitwise(this,e,(function(e,a){return e|a}))};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(e){return bitwise(this,e,(function(e,a){return e^a}))};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var m=1<<30,c=(a&-a)*(a&-a)|m;function roughLOB(e){var r=e.value,i=typeof r==="number"?r|m:typeof r==="bigint"?r|BigInt(m):r[0]+r[1]*a|c;return i&-i}function integerLogarithm(e,a){if(a.compareTo(e)<=0){var r=integerLogarithm(e,a.square(a));var n=r.p;var p=r.e;var o=n.multiply(a);return o.compareTo(e)<=0?{p:o,e:p*2+1}:{p:n,e:p*2}}return{p:i(1),e:0}}BigInteger.prototype.bitLength=function(){var e=this;if(e.compareTo(i(0))<0){e=e.negate().subtract(i(1))}if(e.compareTo(i(0))===0){return i(0)}return i(integerLogarithm(e,i(2)).e).add(i(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(e,a){e=parseValue(e);a=parseValue(a);return e.greater(a)?e:a}function min(e,a){e=parseValue(e);a=parseValue(a);return e.lesser(a)?e:a}function gcd(e,a){e=parseValue(e).abs();a=parseValue(a).abs();if(e.equals(a))return e;if(e.isZero())return a;if(a.isZero())return e;var r=Integer[1],i,n;while(e.isEven()&&a.isEven()){i=min(roughLOB(e),roughLOB(a));e=e.divide(i);a=a.divide(i);r=r.multiply(i)}while(e.isEven()){e=e.divide(roughLOB(e))}do{while(a.isEven()){a=a.divide(roughLOB(a))}if(e.greater(a)){n=a;a=e;e=n}a=a.subtract(e)}while(!a.isZero());return r.isUnit()?e:e.multiply(r)}function lcm(e,a){e=parseValue(e).abs();a=parseValue(a).abs();return e.divide(gcd(e,a)).multiply(a)}function randBetween(e,r,i){e=parseValue(e);r=parseValue(r);var n=i||Math.random;var p=min(e,r),o=max(e,r);var d=o.subtract(p).add(1);if(d.isSmall)return p.add(Math.floor(n()*d));var s=toBase(d,a).value;var l=[],u=true;for(var m=0;m<s.length;m++){var c=u?s[m]+(m+1<s.length?s[m+1]/a:0):a;var h=truncate(n()*c);l.push(h);if(h<s[m])u=false}return p.add(Integer.fromArray(l,a,false))}var parseBase=function(e,a,r,i){r=r||o;e=String(e);if(!i){e=e.toLowerCase();r=r.toLowerCase()}var n=e.length;var p;var d=Math.abs(a);var s={};for(p=0;p<r.length;p++){s[r[p]]=p}for(p=0;p<n;p++){var l=e[p];if(l==="-")continue;if(l in s){if(s[l]>=d){if(l==="1"&&d===1)continue;throw new Error(l+" is not a valid digit in base "+a+".")}}}a=parseValue(a);var u=[];var m=e[0]==="-";for(p=m?1:0;p<e.length;p++){var l=e[p];if(l in s)u.push(parseValue(s[l]));else if(l==="<"){var c=p;do{p++}while(e[p]!==">"&&p<e.length);u.push(parseValue(e.slice(c+1,p)))}else throw new Error(l+" is not a valid character")}return parseBaseFromArray(u,a,m)};function parseBaseFromArray(e,a,r){var i=Integer[0],n=Integer[1],p;for(p=e.length-1;p>=0;p--){i=i.add(e[p].times(n));n=n.times(a)}return r?i.negate():i}function stringify(e,a){a=a||o;if(e<a.length){return a[e]}return"<"+e+">"}function toBase(e,a){a=i(a);if(a.isZero()){if(e.isZero())return{value:[0],isNegative:false};throw new Error("Cannot convert nonzero numbers to base 0.")}if(a.equals(-1)){if(e.isZero())return{value:[0],isNegative:false};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var r=Array.apply(null,Array(e.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);r.unshift([1]);return{value:[].concat.apply([],r),isNegative:false}}var n=false;if(e.isNegative()&&a.isPositive()){n=true;e=e.abs()}if(a.isUnit()){if(e.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(e.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:n}}var p=[];var o=e,d;while(o.isNegative()||o.compareAbs(a)>=0){d=o.divmod(a);o=d.quotient;var s=d.remainder;if(s.isNegative()){s=a.minus(s).abs();o=o.next()}p.push(s.toJSNumber())}p.push(o.toJSNumber());return{value:p.reverse(),isNegative:n}}function toBaseString(e,a,r){var i=toBase(e,a);return(i.isNegative?"-":"")+i.value.map((function(e){return stringify(e,r)})).join("")}BigInteger.prototype.toArray=function(e){return toBase(this,e)};SmallInteger.prototype.toArray=function(e){return toBase(this,e)};NativeBigInt.prototype.toArray=function(e){return toBase(this,e)};BigInteger.prototype.toString=function(a,r){if(a===e)a=10;if(a!==10)return toBaseString(this,a,r);var i=this.value,n=i.length,p=String(i[--n]),o="0000000",d;while(--n>=0){d=String(i[n]);p+=o.slice(d.length)+d}var s=this.sign?"-":"";return s+p};SmallInteger.prototype.toString=function(a,r){if(a===e)a=10;if(a!=10)return toBaseString(this,a,r);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(e){if(isPrecise(+e)){var a=+e;if(a===truncate(a))return d?new NativeBigInt(BigInt(a)):new SmallInteger(a);throw new Error("Invalid integer: "+e)}var i=e[0]==="-";if(i)e=e.slice(1);var n=e.split(/e/i);if(n.length>2)throw new Error("Invalid integer: "+n.join("e"));if(n.length===2){var p=n[1];if(p[0]==="+")p=p.slice(1);p=+p;if(p!==truncate(p)||!isPrecise(p))throw new Error("Invalid integer: "+p+" is not a valid exponent.");var o=n[0];var s=o.indexOf(".");if(s>=0){p-=o.length-s-1;o=o.slice(0,s)+o.slice(s+1)}if(p<0)throw new Error("Cannot include negative exponent part for integers");o+=new Array(p+1).join("0");e=o}var l=/^([0-9][0-9]*)$/.test(e);if(!l)throw new Error("Invalid integer: "+e);if(d){return new NativeBigInt(BigInt(i?"-"+e:e))}var u=[],m=e.length,c=r,h=m-c;while(m>0){u.push(+e.slice(h,m));h-=c;if(h<0)h=0;m-=c}trim(u);return new BigInteger(u,i)}function parseNumberValue(e){if(d){return new NativeBigInt(BigInt(e))}if(isPrecise(e)){if(e!==truncate(e))throw new Error(e+" is not an integer.");return new SmallInteger(e)}return parseStringValue(e.toString())}function parseValue(e){if(typeof e==="number"){return parseNumberValue(e)}if(typeof e==="string"){return parseStringValue(e)}if(typeof e==="bigint"){return new NativeBigInt(e)}return e}for(var h=0;h<1e3;h++){Integer[h]=parseValue(h);if(h>0)Integer[-h]=parseValue(-h)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(e){return e instanceof BigInteger||e instanceof SmallInteger||e instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(e,a,r){return parseBaseFromArray(e.map(parseValue),parseValue(a||10),r)};return Integer}();if(true&&e.hasOwnProperty("exports")){e.exports=i}if(typeof define==="function"&&define.amd){define((function(){return i}))}},4067:(e,a,r)=>{"use strict";var i=r(8168);var n=false;function Real(e){this.value=e}e.exports=function(e){var a=new i.WritableStreamBuffer;a.write(new Buffer("bplist00"));if(n){console.log("create",r(1669).inspect(e,false,10))}if(e instanceof Array&&e.length===1){e=e[0]}var p=toEntries(e);if(n){console.log("entries",p)}var o=computeIdSizeInBytes(p.length);var d=[];var s;var l;updateEntryIds();p.forEach((function(e,r){d[r]=a.size();if(!e){a.write(0)}else{write(e)}}));writeOffsetTable();writeTrailer();return a.getContents();function updateEntryIds(){var e={};var a=0;p.forEach((function(r){if(r.id){return}if(r.type==="string"){if(!r.bplistOverride&&e.hasOwnProperty(r.value)){r.type="stringref";r.id=e[r.value]}else{e[r.value]=r.id=a++}}else{r.id=a++}}));p=p.filter((function(e){return e.type!=="stringref"}))}function writeTrailer(){if(n){console.log("0x"+a.size().toString(16),"writeTrailer")}a.write(new Buffer([0,0,0,0,0,0]));if(n){console.log("0x"+a.size().toString(16),"writeTrailer(offsetSizeInBytes):",s)}writeByte(s);if(n){console.log("0x"+a.size().toString(16),"writeTrailer(offsetSizeInBytes):",o)}writeByte(o);if(n){console.log("0x"+a.size().toString(16),"writeTrailer(number of objects):",p.length)}writeLong(p.length);if(n){console.log("0x"+a.size().toString(16),"writeTrailer(top object)")}writeLong(0);if(n){console.log("0x"+a.size().toString(16),"writeTrailer(offset table offset):",l)}writeLong(l)}function writeOffsetTable(){if(n){console.log("0x"+a.size().toString(16),"writeOffsetTable")}l=a.size();s=computeOffsetSizeInBytes(l);d.forEach((function(e){writeBytes(e,s)}))}function write(e){switch(e.type){case"dict":writeDict(e);break;case"number":case"double":writeNumber(e);break;case"UID":writeUID(e);break;case"array":writeArray(e);break;case"boolean":writeBoolean(e);break;case"string":case"string-utf16":writeString(e);break;case"date":writeDate(e);break;case"data":writeData(e);break;default:throw new Error("unhandled entry type: "+e.type)}}function writeDate(e){writeByte(51);var a=Date.parse(e.value)/1e3-978307200;writeDouble(a)}function writeDict(e){if(n){var r=e.entryKeys.map((function(e){return e.id}));var i=e.entryValues.map((function(e){return e.id}));console.log("0x"+a.size().toString(16),"writeDict","(id: "+e.id+")","(keys: "+r+")","(values: "+i+")")}writeIntHeader(13,e.entryKeys.length);e.entryKeys.forEach((function(e){writeID(e.id)}));e.entryValues.forEach((function(e){writeID(e.id)}))}function writeNumber(e){if(n){console.log("0x"+a.size().toString(16),"writeNumber",e.value," (type: "+e.type+")","(id: "+e.id+")")}if(e.type!=="double"&&parseFloat(e.value.toFixed())==e.value){if(e.value<0){writeByte(19);writeBytes(e.value,8,true)}else if(e.value<=255){writeByte(16);writeBytes(e.value,1)}else if(e.value<=65535){writeByte(17);writeBytes(e.value,2)}else if(e.value<=4294967295){writeByte(18);writeBytes(e.value,4)}else{writeByte(20);writeBytes(e.value,8)}}else{writeByte(35);writeDouble(e.value)}}function writeUID(e){if(n){console.log("0x"+a.size().toString(16),"writeUID",e.value," (type: "+e.type+")","(id: "+e.id+")")}writeIntHeader(8,0);writeID(e.value)}function writeArray(e){if(n){console.log("0x"+a.size().toString(16),"writeArray (length: "+e.entries.length+")","(id: "+e.id+")")}writeIntHeader(10,e.entries.length);e.entries.forEach((function(e){writeID(e.id)}))}function writeBoolean(e){if(n){console.log("0x"+a.size().toString(16),"writeBoolean",e.value,"(id: "+e.id+")")}writeByte(e.value?9:8)}function writeString(e){if(n){console.log("0x"+a.size().toString(16),"writeString",e.value,"(id: "+e.id+")")}if(e.type==="string-utf16"||mustBeUtf16(e.value)){var r=new Buffer(e.value,"ucs2");writeIntHeader(6,r.length/2);for(var i=0;i<r.length;i+=2){var p=r[i+0];r[i+0]=r[i+1];r[i+1]=p}a.write(r)}else{var o=new Buffer(e.value,"ascii");writeIntHeader(5,o.length);a.write(o)}}function writeData(e){if(n){console.log("0x"+a.size().toString(16),"writeData",e.value,"(id: "+e.id+")")}writeIntHeader(4,e.value.length);a.write(e.value)}function writeLong(e){writeBytes(e,8)}function writeByte(e){a.write(new Buffer([e]))}function writeDouble(e){var r=new Buffer(8);r.writeDoubleBE(e,0);a.write(r)}function writeIntHeader(e,a){if(a<15){writeByte((e<<4)+a)}else if(a<256){writeByte((e<<4)+15);writeByte(16);writeBytes(a,1)}else if(a<65536){writeByte((e<<4)+15);writeByte(17);writeBytes(a,2)}else{writeByte((e<<4)+15);writeByte(18);writeBytes(a,4)}}function writeID(e){writeBytes(e,o)}function writeBytes(e,r,i){var n=new Buffer(r);var p=0;if(!i){while(r>4){n[p++]=0;r--}}for(var o=r-1;o>=0;o--){n[p++]=e>>8*o}a.write(n)}function mustBeUtf16(e){return Buffer.byteLength(e,"utf8")!=e.length}};function toEntries(e){if(e.bplistOverride){return[e]}if(e instanceof Array){return toEntriesArray(e)}else if(e instanceof Buffer){return[{type:"data",value:e}]}else if(e instanceof Real){return[{type:"double",value:e.value}]}else if(typeof e==="object"){if(e instanceof Date){return[{type:"date",value:e}]}else if(Object.keys(e).length==1&&typeof e.UID==="number"){return[{type:"UID",value:e.UID}]}else{return toEntriesObject(e)}}else if(typeof e==="string"){return[{type:"string",value:e}]}else if(typeof e==="number"){return[{type:"number",value:e}]}else if(typeof e==="boolean"){return[{type:"boolean",value:e}]}else if(typeof e==="bigint"){return[{type:"number",value:Number(BigInt.asIntN(32,e))}]}else{throw new Error("unhandled entry: "+e)}}function toEntriesArray(e){if(n){console.log("toEntriesArray")}var a=[{type:"array",entries:[]}];e.forEach((function(e){var r=toEntries(e);a[0].entries.push(r[0]);a=a.concat(r)}));return a}function toEntriesObject(e){if(n){console.log("toEntriesObject")}var a=[{type:"dict",entryKeys:[],entryValues:[]}];Object.keys(e).forEach((function(e){var r=toEntries(e);a[0].entryKeys.push(r[0]);a=a.concat(r[0])}));Object.keys(e).forEach((function(r){var i=toEntries(e[r]);a[0].entryValues.push(i[0]);a=a.concat(i)}));return a}function computeOffsetSizeInBytes(e){if(e<256){return 1}if(e<65536){return 2}if(e<4294967296){return 4}return 8}function computeIdSizeInBytes(e){if(e<256){return 1}if(e<65536){return 2}return 4}e.exports.Real=Real},8905:(e,a,r)=>{"use strict";const i=r(5747);const n=r(1575);const p=false;a.maxObjectSize=100*1e3*1e3;a.maxObjectCount=32768;const o=9783072e5;const d=a.UID=function(e){this.UID=e};const s=a.parseFile=function(e,a){return new Promise((function(r,n){function tryParseBuffer(e){let i=null;let p;try{p=l(e);r(p)}catch(e){i=e;n(i)}finally{if(a)a(i,p)}}if(Buffer.isBuffer(e)){return tryParseBuffer(e)}i.readFile(e,(function(e,r){if(e){n(e);return a(e)}tryParseBuffer(r)}))}))};const l=a.parseBuffer=function(e){const r=e.slice(0,"bplist".length).toString("utf8");if(r!=="bplist"){throw new Error("Invalid binary plist. Expected 'bplist' at offset 0.")}const i=e.slice(e.length-32,e.length);const s=i.readUInt8(6);if(p){console.log("offsetSize: "+s)}const l=i.readUInt8(7);if(p){console.log("objectRefSize: "+l)}const u=readUInt64BE(i,8);if(p){console.log("numObjects: "+u)}const m=readUInt64BE(i,16);if(p){console.log("topObject: "+m)}const c=readUInt64BE(i,24);if(p){console.log("offsetTableOffset: "+c)}if(u>a.maxObjectCount){throw new Error("maxObjectCount exceeded")}const h=[];for(let a=0;a<u;a++){const r=e.slice(c+a*s,c+(a+1)*s);h[a]=readUInt(r,0);if(p){console.log("Offset for Object #"+a+" is "+h[a]+" ["+h[a].toString(16)+"]")}}function parseObject(r){const i=h[r];const s=e[i];const u=(s&240)>>4;const m=s&15;switch(u){case 0:return parseSimple();case 1:return parseInteger();case 8:return parseUID();case 2:return parseReal();case 3:return parseDate();case 4:return parseData();case 5:return parsePlistString();case 6:return parsePlistString(true);case 10:return parseArray();case 13:return parseDictionary();default:throw new Error("Unhandled type 0x"+u.toString(16))}function parseSimple(){switch(m){case 0:return null;case 8:return false;case 9:return true;case 15:return null;default:throw new Error("Unhandled simple type 0x"+u.toString(16))}}function bufferToHexString(e){let a="";let r;for(r=0;r<e.length;r++){if(e[r]!=0){break}}for(;r<e.length;r++){const i="00"+e[r].toString(16);a+=i.substr(i.length-2)}return a}function parseInteger(){const r=Math.pow(2,m);if(m==4){const a=e.slice(i+1,i+1+r);const p=bufferToHexString(a);return n(p,16)}if(m==3){return e.readInt32BE(i+1)}if(r<a.maxObjectSize){return readUInt(e.slice(i+1,i+1+r))}throw new Error("To little heap space available! Wanted to read "+r+" bytes, but only "+a.maxObjectSize+" are available.")}function parseUID(){const r=m+1;if(r<a.maxObjectSize){return new d(readUInt(e.slice(i+1,i+1+r)))}throw new Error("To little heap space available! Wanted to read "+r+" bytes, but only "+a.maxObjectSize+" are available.")}function parseReal(){const r=Math.pow(2,m);if(r<a.maxObjectSize){const a=e.slice(i+1,i+1+r);if(r===4){return a.readFloatBE(0)}if(r===8){return a.readDoubleBE(0)}}else{throw new Error("To little heap space available! Wanted to read "+r+" bytes, but only "+a.maxObjectSize+" are available.")}}function parseDate(){if(m!=3){console.error("Unknown date type :"+m+". Parsing anyway...")}const a=e.slice(i+1,i+9);return new Date(o+1e3*a.readDoubleBE(0))}function parseData(){let r=1;let n=m;if(m==15){const a=e[i+1];const p=(a&240)/16;if(p!=1){console.error("0x4: UNEXPECTED LENGTH-INT TYPE! "+p)}const o=a&15;const d=Math.pow(2,o);r=2+d;if(d<3){n=readUInt(e.slice(i+2,i+2+d))}else{n=readUInt(e.slice(i+2,i+2+d))}}if(n<a.maxObjectSize){return e.slice(i+r,i+r+n)}throw new Error("To little heap space available! Wanted to read "+n+" bytes, but only "+a.maxObjectSize+" are available.")}function parsePlistString(r){r=r||0;let n="utf8";let p=m;let o=1;if(m==15){const a=e[i+1];const r=(a&240)/16;if(r!=1){console.err("UNEXPECTED LENGTH-INT TYPE! "+r)}const n=a&15;const d=Math.pow(2,n);o=2+d;if(d<3){p=readUInt(e.slice(i+2,i+2+d))}else{p=readUInt(e.slice(i+2,i+2+d))}}p*=r+1;if(p<a.maxObjectSize){let a=Buffer.from(e.slice(i+o,i+o+p));if(r){a=swapBytes(a);n="ucs2"}return a.toString(n)}throw new Error("To little heap space available! Wanted to read "+p+" bytes, but only "+a.maxObjectSize+" are available.")}function parseArray(){let r=m;let n=1;if(m==15){const a=e[i+1];const p=(a&240)/16;if(p!=1){console.error("0xa: UNEXPECTED LENGTH-INT TYPE! "+p)}const o=a&15;const d=Math.pow(2,o);n=2+d;if(d<3){r=readUInt(e.slice(i+2,i+2+d))}else{r=readUInt(e.slice(i+2,i+2+d))}}if(r*l>a.maxObjectSize){throw new Error("To little heap space available!")}const p=[];for(let a=0;a<r;a++){const r=readUInt(e.slice(i+n+a*l,i+n+(a+1)*l));p[a]=parseObject(r)}return p}function parseDictionary(){let n=m;let o=1;if(m==15){const a=e[i+1];const r=(a&240)/16;if(r!=1){console.error("0xD: UNEXPECTED LENGTH-INT TYPE! "+r)}const p=a&15;const d=Math.pow(2,p);o=2+d;if(d<3){n=readUInt(e.slice(i+2,i+2+d))}else{n=readUInt(e.slice(i+2,i+2+d))}}if(n*2*l>a.maxObjectSize){throw new Error("To little heap space available!")}if(p){console.log("Parsing dictionary #"+r)}const d={};for(let a=0;a<n;a++){const s=readUInt(e.slice(i+o+a*l,i+o+(a+1)*l));const u=readUInt(e.slice(i+o+n*l+a*l,i+o+n*l+(a+1)*l));const m=parseObject(s);const c=parseObject(u);if(p){console.log("  DICT #"+r+": Mapped "+m+" to "+c)}d[m]=c}return d}}return[parseObject(m)]};function readUInt(e,a){a=a||0;let r=0;for(let i=a;i<e.length;i++){r<<=8;r|=e[i]&255}return r}function readUInt64BE(e,a){const r=e.slice(a,a+8);return r.readUInt32BE(4,8)}function swapBytes(e){const a=e.length;for(let r=0;r<a;r+=2){const a=e[r];e[r]=e[r+1];e[r+1]=a}return e}},3717:(e,a,r)=>{var i=r(6891);var n=r(9417);e.exports=expandTop;var p="\0SLASH"+Math.random()+"\0";var o="\0OPEN"+Math.random()+"\0";var d="\0CLOSE"+Math.random()+"\0";var s="\0COMMA"+Math.random()+"\0";var l="\0PERIOD"+Math.random()+"\0";function numeric(e){return parseInt(e,10)==e?parseInt(e,10):e.charCodeAt(0)}function escapeBraces(e){return e.split("\\\\").join(p).split("\\{").join(o).split("\\}").join(d).split("\\,").join(s).split("\\.").join(l)}function unescapeBraces(e){return e.split(p).join("\\").split(o).join("{").split(d).join("}").split(s).join(",").split(l).join(".")}function parseCommaParts(e){if(!e)return[""];var a=[];var r=n("{","}",e);if(!r)return e.split(",");var i=r.pre;var p=r.body;var o=r.post;var d=i.split(",");d[d.length-1]+="{"+p+"}";var s=parseCommaParts(o);if(o.length){d[d.length-1]+=s.shift();d.push.apply(d,s)}a.push.apply(a,d);return a}function expandTop(e){if(!e)return[];if(e.substr(0,2)==="{}"){e="\\{\\}"+e.substr(2)}return expand(escapeBraces(e),true).map(unescapeBraces)}function identity(e){return e}function embrace(e){return"{"+e+"}"}function isPadded(e){return/^-?0\d/.test(e)}function lte(e,a){return e<=a}function gte(e,a){return e>=a}function expand(e,a){var r=[];var p=n("{","}",e);if(!p||/\$$/.test(p.pre))return[e];var o=/^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(p.body);var s=/^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(p.body);var l=o||s;var u=p.body.indexOf(",")>=0;if(!l&&!u){if(p.post.match(/,.*\}/)){e=p.pre+"{"+p.body+d+p.post;return expand(e)}return[e]}var m;if(l){m=p.body.split(/\.\./)}else{m=parseCommaParts(p.body);if(m.length===1){m=expand(m[0],false).map(embrace);if(m.length===1){var c=p.post.length?expand(p.post,false):[""];return c.map((function(e){return p.pre+m[0]+e}))}}}var h=p.pre;var c=p.post.length?expand(p.post,false):[""];var v;if(l){var g=numeric(m[0]);var y=numeric(m[1]);var w=Math.max(m[0].length,m[1].length);var b=m.length==3?Math.abs(numeric(m[2])):1;var S=lte;var _=y<g;if(_){b*=-1;S=gte}var N=m.some(isPadded);v=[];for(var E=g;S(E,y);E+=b){var D;if(s){D=String.fromCharCode(E);if(D==="\\")D=""}else{D=String(E);if(N){var C=w-D.length;if(C>0){var I=new Array(C+1).join("0");if(E<0)D="-"+I+D.slice(1);else D=I+D}}}v.push(D)}}else{v=i(m,(function(e){return expand(e,false)}))}for(var T=0;T<v.length;T++){for(var A=0;A<c.length;A++){var x=h+v[T]+c[A];if(!a||l||x)r.push(x)}}return r}},4794:(e,a,r)=>{var i=r(4293).Buffer;var n=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];if(typeof Int32Array!=="undefined"){n=new Int32Array(n)}function ensureBuffer(e){if(i.isBuffer(e)){return e}var a=typeof i.alloc==="function"&&typeof i.from==="function";if(typeof e==="number"){return a?i.alloc(e):new i(e)}else if(typeof e==="string"){return a?i.from(e):new i(e)}else{throw new Error("input must be buffer, number, or string, received "+typeof e)}}function bufferizeInt(e){var a=ensureBuffer(4);a.writeInt32BE(e,0);return a}function _crc32(e,a){e=ensureBuffer(e);if(i.isBuffer(a)){a=a.readUInt32BE(0)}var r=~~a^-1;for(var p=0;p<e.length;p++){r=n[(r^e[p])&255]^r>>>8}return r^-1}function crc32(){return bufferizeInt(_crc32.apply(null,arguments))}crc32.signed=function(){return _crc32.apply(null,arguments)};crc32.unsigned=function(){return _crc32.apply(null,arguments)>>>0};e.exports=crc32},421:e=>{var a={utf8:{stringToBytes:function(e){return a.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(a.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var a=[],r=0;r<e.length;r++)a.push(e.charCodeAt(r)&255);return a},bytesToString:function(e){for(var a=[],r=0;r<e.length;r++)a.push(String.fromCharCode(e[r]));return a.join("")}}};e.exports=a},6891:e=>{e.exports=function(e,r){var i=[];for(var n=0;n<e.length;n++){var p=r(e[n],n);if(a(p))i.push.apply(i,p);else i.push(p)}return i};var a=Array.isArray||function(e){return Object.prototype.toString.call(e)==="[object Array]"}},7935:e=>{(function(){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(e,a){return e<<a|e>>>32-a},rotr:function(e,a){return e<<32-a|e>>>a},endian:function(e){if(e.constructor==Number){return r.rotl(e,8)&16711935|r.rotl(e,24)&4278255360}for(var a=0;a<e.length;a++)e[a]=r.endian(e[a]);return e},randomBytes:function(e){for(var a=[];e>0;e--)a.push(Math.floor(Math.random()*256));return a},bytesToWords:function(e){for(var a=[],r=0,i=0;r<e.length;r++,i+=8)a[i>>>5]|=e[r]<<24-i%32;return a},wordsToBytes:function(e){for(var a=[],r=0;r<e.length*32;r+=8)a.push(e[r>>>5]>>>24-r%32&255);return a},bytesToHex:function(e){for(var a=[],r=0;r<e.length;r++){a.push((e[r]>>>4).toString(16));a.push((e[r]&15).toString(16))}return a.join("")},hexToBytes:function(e){for(var a=[],r=0;r<e.length;r+=2)a.push(parseInt(e.substr(r,2),16));return a},bytesToBase64:function(e){for(var r=[],i=0;i<e.length;i+=3){var n=e[i]<<16|e[i+1]<<8|e[i+2];for(var p=0;p<4;p++)if(i*8+p*6<=e.length*8)r.push(a.charAt(n>>>6*(3-p)&63));else r.push("=")}return r.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var r=[],i=0,n=0;i<e.length;n=++i%4){if(n==0)continue;r.push((a.indexOf(e.charAt(i-1))&Math.pow(2,-2*n+8)-1)<<n*2|a.indexOf(e.charAt(i))>>>6-n*2)}return r}};e.exports=r})()},8222:(e,a,r)=>{a.formatArgs=formatArgs;a.save=save;a.load=load;a.useColors=useColors;a.storage=localstorage();a.destroy=(()=>{let e=false;return()=>{if(!e){e=true;console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}}})();a.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function useColors(){if(typeof window!=="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)){return true}if(typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)){return false}return typeof document!=="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!=="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function formatArgs(a){a[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+a[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff);if(!this.useColors){return}const r="color: "+this.color;a.splice(1,0,r,"color: inherit");let i=0;let n=0;a[0].replace(/%[a-zA-Z%]/g,(e=>{if(e==="%%"){return}i++;if(e==="%c"){n=i}}));a.splice(n,0,r)}a.log=console.debug||console.log||(()=>{});function save(e){try{if(e){a.storage.setItem("debug",e)}else{a.storage.removeItem("debug")}}catch(e){}}function load(){let e;try{e=a.storage.getItem("debug")}catch(e){}if(!e&&typeof process!=="undefined"&&"env"in process){e=process.env.DEBUG}return e}function localstorage(){try{return localStorage}catch(e){}}e.exports=r(6243)(a);const{formatters:i}=e.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},6243:(e,a,r)=>{function setup(e){createDebug.debug=createDebug;createDebug.default=createDebug;createDebug.coerce=coerce;createDebug.disable=disable;createDebug.enable=enable;createDebug.enabled=enabled;createDebug.humanize=r(900);createDebug.destroy=destroy;Object.keys(e).forEach((a=>{createDebug[a]=e[a]}));createDebug.names=[];createDebug.skips=[];createDebug.formatters={};function selectColor(e){let a=0;for(let r=0;r<e.length;r++){a=(a<<5)-a+e.charCodeAt(r);a|=0}return createDebug.colors[Math.abs(a)%createDebug.colors.length]}createDebug.selectColor=selectColor;function createDebug(e){let a;let r=null;let i;let n;function debug(...e){if(!debug.enabled){return}const r=debug;const i=Number(new Date);const n=i-(a||i);r.diff=n;r.prev=a;r.curr=i;a=i;e[0]=createDebug.coerce(e[0]);if(typeof e[0]!=="string"){e.unshift("%O")}let p=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((a,i)=>{if(a==="%%"){return"%"}p++;const n=createDebug.formatters[i];if(typeof n==="function"){const i=e[p];a=n.call(r,i);e.splice(p,1);p--}return a}));createDebug.formatArgs.call(r,e);const o=r.log||createDebug.log;o.apply(r,e)}debug.namespace=e;debug.useColors=createDebug.useColors();debug.color=createDebug.selectColor(e);debug.extend=extend;debug.destroy=createDebug.destroy;Object.defineProperty(debug,"enabled",{enumerable:true,configurable:false,get:()=>{if(r!==null){return r}if(i!==createDebug.namespaces){i=createDebug.namespaces;n=createDebug.enabled(e)}return n},set:e=>{r=e}});if(typeof createDebug.init==="function"){createDebug.init(debug)}return debug}function extend(e,a){const r=createDebug(this.namespace+(typeof a==="undefined"?":":a)+e);r.log=this.log;return r}function enable(e){createDebug.save(e);createDebug.namespaces=e;createDebug.names=[];createDebug.skips=[];let a;const r=(typeof e==="string"?e:"").split(/[\s,]+/);const i=r.length;for(a=0;a<i;a++){if(!r[a]){continue}e=r[a].replace(/\*/g,".*?");if(e[0]==="-"){createDebug.skips.push(new RegExp("^"+e.substr(1)+"$"))}else{createDebug.names.push(new RegExp("^"+e+"$"))}}}function disable(){const e=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map((e=>"-"+e))].join(",");createDebug.enable("");return e}function enabled(e){if(e[e.length-1]==="*"){return true}let a;let r;for(a=0,r=createDebug.skips.length;a<r;a++){if(createDebug.skips[a].test(e)){return false}}for(a=0,r=createDebug.names.length;a<r;a++){if(createDebug.names[a].test(e)){return true}}return false}function toNamespace(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}function coerce(e){if(e instanceof Error){return e.stack||e.message}return e}function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}createDebug.enable(createDebug.load());return createDebug}e.exports=setup},8237:(e,a,r)=>{if(typeof process==="undefined"||process.type==="renderer"||process.browser===true||process.__nwjs){e.exports=r(8222)}else{e.exports=r(5332)}},5332:(e,a,r)=>{const i=r(3867);const n=r(1669);a.init=init;a.log=log;a.formatArgs=formatArgs;a.save=save;a.load=load;a.useColors=useColors;a.destroy=n.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");a.colors=[6,2,3,4,5,1];try{const e=r(9318);if(e&&(e.stderr||e).level>=2){a.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]}}catch(e){}a.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,a)=>{const r=a.substring(6).toLowerCase().replace(/_([a-z])/g,((e,a)=>a.toUpperCase()));let i=process.env[a];if(/^(yes|on|true|enabled)$/i.test(i)){i=true}else if(/^(no|off|false|disabled)$/i.test(i)){i=false}else if(i==="null"){i=null}else{i=Number(i)}e[r]=i;return e}),{});function useColors(){return"colors"in a.inspectOpts?Boolean(a.inspectOpts.colors):i.isatty(process.stderr.fd)}function formatArgs(a){const{namespace:r,useColors:i}=this;if(i){const i=this.color;const n="[3"+(i<8?i:"8;5;"+i);const p=`  ${n};1m${r} [0m`;a[0]=p+a[0].split("\n").join("\n"+p);a.push(n+"m+"+e.exports.humanize(this.diff)+"[0m")}else{a[0]=getDate()+r+" "+a[0]}}function getDate(){if(a.inspectOpts.hideDate){return""}return(new Date).toISOString()+" "}function log(...e){return process.stderr.write(n.format(...e)+"\n")}function save(e){if(e){process.env.DEBUG=e}else{delete process.env.DEBUG}}function load(){return process.env.DEBUG}function init(e){e.inspectOpts={};const r=Object.keys(a.inspectOpts);for(let i=0;i<r.length;i++){e.inspectOpts[r[i]]=a.inspectOpts[r[i]]}}e.exports=r(6243)(a);const{formatters:p}=e.exports;p.o=function(e){this.inspectOpts.colors=this.useColors;return n.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")};p.O=function(e){this.inspectOpts.colors=this.useColors;return n.inspect(e,this.inspectOpts)}},1349:(e,a,r)=>{var i=r(2357);var n=r(4223);var p=r(1669);var o=r(3539);var d=r(9414);function Helper(){this.file=new d;this.opts={window:{x:100,y:100}}}Helper.prototype.setBackgroundPath=function(e){this.opts.backgroundPath=e};Helper.prototype.setBackgroundColor=function(e,a,r){this.opts.backgroundColor=[e,a,r]};Helper.prototype.setIconSize=function(e){this.opts.iconSize=e};Helper.prototype.setIconPos=function(e,a,r){this.file.push(o.construct(e,"Iloc",{x:a,y:r}))};Helper.prototype.setWindowPos=function(e,a){this.opts.window.x=e;this.opts.window.y=a};Helper.prototype.setWindowSize=function(e,a){this.opts.window.width=e;this.opts.window.height=a+22};Helper.prototype.vSrn=function(e){i(e===0||e===1);this.file.push(o.construct(".","vSrn",{value:e}))};Helper.prototype.write=function(e,a){var r,i;if(this.opts.backgroundPath){r=n.create(this.opts.backgroundPath)}if(this.opts.backgroundColor){i=this.opts.backgroundColor}this.file.push(o.construct(".","bwsp",this.opts.window));this.file.push(o.construct(".","icvp",{iconSize:this.opts.iconSize,rawAlias:r,colorComponents:i}));this.file.write(e,a)};Helper.prototype.setBackground=p.deprecate(Helper.prototype.setBackgroundPath,"setBackground is deprecated, please use setBackgroundPath");e.exports=a=Helper},9414:(e,a,r)=>{var i=r(5747);var n=r(5622);var p=r(3539);function DSStore(){this.entries=[]}DSStore.prototype.push=function(e){this.entries.push(e)};DSStore.prototype.write=function(e,a){var n=this.entries.sort(p.sort);i.readFile(r.ab+"DSStore-clean",(function(r,p){if(r)return a(r);var o=new Buffer(3840);o.fill(0);var d=0;var s=0;var l=n.length;o.writeUInt32BE(s,d);o.writeUInt32BE(l,d+4);d+=8;n.forEach((function(e,a){var r=e.buffer;r.copy(o,d);d+=r.length}));p.writeUInt32BE(n.length,76);o.copy(p,4100);i.writeFile(e,p,(function(e){a(e)}))}))};e.exports=a=DSStore},3539:(e,a,r)=>{var i=r(8694);var n=r(4067);function utf16be(e){var a=new Buffer(e,"ucs2");for(var r=0;r<a.length;r+=2){var i=a[r];a[r]=a[r+1];a[r+1]=i}return a}function Entry(e,a,r,n){this.filename=i.normalize(e);this.structureId=a;var p=this.filename.length;var o=p*2;this.buffer=new Buffer(4+o+4+4+n.length);this.buffer.writeUInt32BE(p,0);utf16be(this.filename).copy(this.buffer,4);this.buffer.write(a,4+o,"ascii");this.buffer.write(r,8+o,"ascii");n.copy(this.buffer,12+o)}Entry.prototype.length=function(){return this.buffer.length()};Entry.sort=function(e,a){var r=i.compare(e.filename,a.filename);var n=e.structureId.localeCompare(a.structureId);return r||n};Entry.construct=function(e,a,r){var i,p;var opt=function(e,a){if(e in r){return r[e]}else if(a===undefined){throw new TypeError("Missing option: "+e)}else{return a}};switch(a){case"BKGD":i="blob";p=new Buffer(12+4);p.writeUInt32BE(p.length-4,0);if(r.color){p.write("ClrB",4,"ascii");throw new Error("Not implemented")}else if(r.pictureByteLength){p.write("PctB",4,"ascii");p.writeUInt32BE(r.pictureByteLength,8)}else{p.write("DefB",4,"ascii")}break;case"Iloc":i="blob";p=new Buffer(16+4);p.writeUInt32BE(p.length-4,0);p.writeUInt32BE(r.x,4);p.writeUInt32BE(r.y,8);p.write("FFFFFF00",12,"hex");break;case"fwi0":throw new Error("Deprecated: Use `bwsp` (I think this is for old OS X)");case"pict":throw new Error("Not implemented");case"bwsp":i="bplist";p=n({ContainerShowSidebar:true,ShowPathbar:false,ShowSidebar:true,ShowStatusBar:false,ShowTabView:false,ShowToolbar:false,SidebarWidth:0,WindowBounds:"{{"+opt("x")+", "+opt("y")+"},"+" {"+opt("width")+", "+opt("height")+"}}"});break;case"icvp":var o={backgroundType:1,backgroundColorRed:new n.Real(1),backgroundColorGreen:new n.Real(1),backgroundColorBlue:new n.Real(1),showIconPreview:true,showItemInfo:false,textSize:new n.Real(12),iconSize:new n.Real(opt("iconSize")),viewOptionsVersion:1,gridSpacing:new n.Real(100),gridOffsetX:new n.Real(0),gridOffsetY:new n.Real(0),labelOnBottom:true,arrangeBy:"none"};if(r.colorComponents){o.backgroundColorRed=new n.Real(r.colorComponents[0]);o.backgroundColorGreen=new n.Real(r.colorComponents[1]);o.backgroundColorBlue=new n.Real(r.colorComponents[2])}if(r.rawAlias){o.backgroundType=2;o.backgroundImageAlias=r.rawAlias}i="bplist";p=n(o);break;case"vSrn":i="long";p=new Buffer(4);p.writeUInt32BE(opt("value"),0);break;default:throw new Error("Not implemented")}if(i==="bplist"){i="blob";var d=p;p=new Buffer(d.length+4);p.writeUInt32BE(d.length,0);d.copy(p,4)}return new Entry(e,a,i,p)};e.exports=a=Entry},682:e=>{"use strict";e.exports=function encodeUtf8(e){var a=[];var r=e.length;for(var i=0;i<r;i++){var n=e.charCodeAt(i);if(n>=55296&&n<=56319&&r>i+1){var p=e.charCodeAt(i+1);if(p>=56320&&p<=57343){n=(n-55296)*1024+p-56320+65536;i+=1}}if(n<128){a.push(n);continue}if(n<2048){a.push(n>>6|192);a.push(n&63|128);continue}if(n<55296||n>=57344&&n<65536){a.push(n>>12|224);a.push(n>>6&63|128);a.push(n&63|128);continue}if(n>=65536&&n<=1114111){a.push(n>>18|240);a.push(n>>12&63|128);a.push(n>>6&63|128);a.push(n&63|128);continue}a.push(239,191,189)}return new Uint8Array(a).buffer}},1205:(e,a,r)=>{var i=r(1223);var noop=function(){};var isRequest=function(e){return e.setHeader&&typeof e.abort==="function"};var isChildProcess=function(e){return e.stdio&&Array.isArray(e.stdio)&&e.stdio.length===3};var eos=function(e,a,r){if(typeof a==="function")return eos(e,null,a);if(!a)a={};r=i(r||noop);var n=e._writableState;var p=e._readableState;var o=a.readable||a.readable!==false&&e.readable;var d=a.writable||a.writable!==false&&e.writable;var s=false;var onlegacyfinish=function(){if(!e.writable)onfinish()};var onfinish=function(){d=false;if(!o)r.call(e)};var onend=function(){o=false;if(!d)r.call(e)};var onexit=function(a){r.call(e,a?new Error("exited with error code: "+a):null)};var onerror=function(a){r.call(e,a)};var onclose=function(){process.nextTick(onclosenexttick)};var onclosenexttick=function(){if(s)return;if(o&&!(p&&(p.ended&&!p.destroyed)))return r.call(e,new Error("premature close"));if(d&&!(n&&(n.ended&&!n.destroyed)))return r.call(e,new Error("premature close"))};var onrequest=function(){e.req.on("finish",onfinish)};if(isRequest(e)){e.on("complete",onfinish);e.on("abort",onclose);if(e.req)onrequest();else e.on("request",onrequest)}else if(d&&!n){e.on("end",onlegacyfinish);e.on("close",onlegacyfinish)}if(isChildProcess(e))e.on("exit",onexit);e.on("end",onend);e.on("finish",onfinish);if(a.error!==false)e.on("error",onerror);e.on("close",onclose);return function(){s=true;e.removeListener("complete",onfinish);e.removeListener("abort",onclose);e.removeListener("request",onrequest);if(e.req)e.req.removeListener("finish",onfinish);e.removeListener("end",onlegacyfinish);e.removeListener("close",onlegacyfinish);e.removeListener("finish",onfinish);e.removeListener("exit",onexit);e.removeListener("end",onend);e.removeListener("error",onerror);e.removeListener("close",onclose)}};e.exports=eos},460:(e,a,r)=>{const i=r(8237)("extract-zip");const{createWriteStream:n,promises:p}=r(5747);const o=r(1766);const d=r(5622);const{promisify:s}=r(1669);const l=r(2413);const u=r(8781);const m=s(u.open);const c=s(l.pipeline);class Extractor{constructor(e,a){this.zipPath=e;this.opts=a}async extract(){i("opening",this.zipPath,"with opts",this.opts);this.zipfile=await m(this.zipPath,{lazyEntries:true});this.canceled=false;return new Promise(((e,a)=>{this.zipfile.on("error",(e=>{this.canceled=true;a(e)}));this.zipfile.readEntry();this.zipfile.on("close",(()=>{if(!this.canceled){i("zip extraction complete");e()}}));this.zipfile.on("entry",(async e=>{if(this.canceled){i("skipping entry",e.fileName,{cancelled:this.canceled});return}i("zipfile entry",e.fileName);if(e.fileName.startsWith("__MACOSX/")){this.zipfile.readEntry();return}const r=d.dirname(d.join(this.opts.dir,e.fileName));try{await p.mkdir(r,{recursive:true});const a=await p.realpath(r);const n=d.relative(this.opts.dir,a);if(n.split(d.sep).includes("..")){throw new Error(`Out of bound path "${a}" found while processing file ${e.fileName}`)}await this.extractEntry(e);i("finished processing",e.fileName);this.zipfile.readEntry()}catch(e){this.canceled=true;this.zipfile.close();a(e)}}))}))}async extractEntry(e){if(this.canceled){i("skipping entry extraction",e.fileName,{cancelled:this.canceled});return}if(this.opts.onEntry){this.opts.onEntry(e,this.zipfile)}const a=d.join(this.opts.dir,e.fileName);const r=e.externalFileAttributes>>16&65535;const l=61440;const u=16384;const m=40960;const h=(r&l)===m;let v=(r&l)===u;if(!v&&e.fileName.endsWith("/")){v=true}const g=e.versionMadeBy>>8;if(!v)v=g===0&&e.externalFileAttributes===16;i("extracting entry",{filename:e.fileName,isDir:v,isSymlink:h});const y=this.getExtractedMode(r,v)&511;const w=v?a:d.dirname(a);const b={recursive:true};if(v){b.mode=y}i("mkdir",{dir:w,...b});await p.mkdir(w,b);if(v)return;i("opening read stream",a);const S=await s(this.zipfile.openReadStream.bind(this.zipfile))(e);if(h){const e=await o(S);i("creating symlink",e,a);await p.symlink(e,a)}else{await c(S,n(a,{mode:y}))}}getExtractedMode(e,a){let r=e;if(r===0){if(a){if(this.opts.defaultDirMode){r=parseInt(this.opts.defaultDirMode,10)}if(!r){r=493}}else{if(this.opts.defaultFileMode){r=parseInt(this.opts.defaultFileMode,10)}if(!r){r=420}}}return r}}e.exports=async function(e,a){i("creating target directory",a.dir);if(!d.isAbsolute(a.dir)){throw new Error("Target directory is expected to be absolute")}await p.mkdir(a.dir,{recursive:true});a.dir=await p.realpath(a.dir);return new Extractor(e,a).extract()}},5010:(e,a,r)=>{var i=r(5747);var n=r(1669);var p=r(2413);var o=p.Readable;var d=p.Writable;var s=p.PassThrough;var l=r(4833);var u=r(8614).EventEmitter;a.createFromBuffer=createFromBuffer;a.createFromFd=createFromFd;a.BufferSlicer=BufferSlicer;a.FdSlicer=FdSlicer;n.inherits(FdSlicer,u);function FdSlicer(e,a){a=a||{};u.call(this);this.fd=e;this.pend=new l;this.pend.max=1;this.refCount=0;this.autoClose=!!a.autoClose}FdSlicer.prototype.read=function(e,a,r,n,p){var o=this;o.pend.go((function(d){i.read(o.fd,e,a,r,n,(function(e,a,r){d();p(e,a,r)}))}))};FdSlicer.prototype.write=function(e,a,r,n,p){var o=this;o.pend.go((function(d){i.write(o.fd,e,a,r,n,(function(e,a,r){d();p(e,a,r)}))}))};FdSlicer.prototype.createReadStream=function(e){return new ReadStream(this,e)};FdSlicer.prototype.createWriteStream=function(e){return new WriteStream(this,e)};FdSlicer.prototype.ref=function(){this.refCount+=1};FdSlicer.prototype.unref=function(){var e=this;e.refCount-=1;if(e.refCount>0)return;if(e.refCount<0)throw new Error("invalid unref");if(e.autoClose){i.close(e.fd,onCloseDone)}function onCloseDone(a){if(a){e.emit("error",a)}else{e.emit("close")}}};n.inherits(ReadStream,o);function ReadStream(e,a){a=a||{};o.call(this,a);this.context=e;this.context.ref();this.start=a.start||0;this.endOffset=a.end;this.pos=this.start;this.destroyed=false}ReadStream.prototype._read=function(e){var a=this;if(a.destroyed)return;var r=Math.min(a._readableState.highWaterMark,e);if(a.endOffset!=null){r=Math.min(r,a.endOffset-a.pos)}if(r<=0){a.destroyed=true;a.push(null);a.context.unref();return}a.context.pend.go((function(e){if(a.destroyed)return e();var n=new Buffer(r);i.read(a.context.fd,n,0,r,a.pos,(function(r,i){if(r){a.destroy(r)}else if(i===0){a.destroyed=true;a.push(null);a.context.unref()}else{a.pos+=i;a.push(n.slice(0,i))}e()}))}))};ReadStream.prototype.destroy=function(e){if(this.destroyed)return;e=e||new Error("stream destroyed");this.destroyed=true;this.emit("error",e);this.context.unref()};n.inherits(WriteStream,d);function WriteStream(e,a){a=a||{};d.call(this,a);this.context=e;this.context.ref();this.start=a.start||0;this.endOffset=a.end==null?Infinity:+a.end;this.bytesWritten=0;this.pos=this.start;this.destroyed=false;this.on("finish",this.destroy.bind(this))}WriteStream.prototype._write=function(e,a,r){var n=this;if(n.destroyed)return;if(n.pos+e.length>n.endOffset){var p=new Error("maximum file length exceeded");p.code="ETOOBIG";n.destroy();r(p);return}n.context.pend.go((function(a){if(n.destroyed)return a();i.write(n.context.fd,e,0,e.length,n.pos,(function(e,i){if(e){n.destroy();a();r(e)}else{n.bytesWritten+=i;n.pos+=i;n.emit("progress");a();r()}}))}))};WriteStream.prototype.destroy=function(){if(this.destroyed)return;this.destroyed=true;this.context.unref()};n.inherits(BufferSlicer,u);function BufferSlicer(e,a){u.call(this);a=a||{};this.refCount=0;this.buffer=e;this.maxChunkSize=a.maxChunkSize||Number.MAX_SAFE_INTEGER}BufferSlicer.prototype.read=function(e,a,r,i,n){var p=i+r;var o=p-this.buffer.length;var d=o>0?o:r;this.buffer.copy(e,a,i,p);setImmediate((function(){n(null,d)}))};BufferSlicer.prototype.write=function(e,a,r,i,n){e.copy(this.buffer,i,a,a+r);setImmediate((function(){n(null,r,e)}))};BufferSlicer.prototype.createReadStream=function(e){e=e||{};var a=new s(e);a.destroyed=false;a.start=e.start||0;a.endOffset=e.end;a.pos=a.endOffset||this.buffer.length;var r=this.buffer.slice(a.start,a.pos);var i=0;while(true){var n=i+this.maxChunkSize;if(n>=r.length){if(i<r.length){a.write(r.slice(i,r.length))}break}a.write(r.slice(i,n));i=n}a.end();a.destroy=function(){a.destroyed=true};return a};BufferSlicer.prototype.createWriteStream=function(e){var a=this;e=e||{};var r=new d(e);r.start=e.start||0;r.endOffset=e.end==null?this.buffer.length:+e.end;r.bytesWritten=0;r.pos=r.start;r.destroyed=false;r._write=function(e,i,n){if(r.destroyed)return;var p=r.pos+e.length;if(p>r.endOffset){var o=new Error("maximum file length exceeded");o.code="ETOOBIG";r.destroyed=true;n(o);return}e.copy(a.buffer,r.pos,0,e.length);r.bytesWritten+=e.length;r.pos=p;r.emit("progress");n()};r.destroy=function(){r.destroyed=true};return r};BufferSlicer.prototype.ref=function(){this.refCount+=1};BufferSlicer.prototype.unref=function(){this.refCount-=1;if(this.refCount<0){throw new Error("invalid unref")}};function createFromBuffer(e,a){return new BufferSlicer(e,a)}function createFromFd(e,a){return new FdSlicer(e,a)}},8062:(e,a,r)=>{var i=r(3070);e.exports=function fmix(e){e^=e>>>16;e=i(e,2246822507);e^=e>>>13;e=i(e,3266489909);e^=e>>>16;return e>>>0}},1371:(e,a,r)=>{var i=r(2851);var n=r(3515);function template(e){n.validateTemplate(e);return{open:i.open.bind(i,e),openSync:i.openSync.bind(i,e),mkdir:i.mkdir.bind(i,e),mkdirSync:i.mkdirSync.bind(i,e),writeFile:i.writeFile.bind(i,e),writeFileSync:i.writeFileSync.bind(i,e),createWriteStream:i.createWriteStream.bind(i,e)}}e.exports=template("%s");e.exports.template=template},6328:(e,a)=>{function sync(e){var a;var r=3;while(--r){try{a=e()}catch(e){if(e.code==="EEXIST")continue;throw e}return a}throw new Error("Failed to find unique name")}function async(e,a){var r=3;(function next(){e((function(e,i){if(!e)return a(null,i);if(e.code!=="EEXIST")return a(e);if(--r===0)return a(new Error("Failed to find unique name"));next()}))})()}a.sync=sync;a.async=async},2851:(e,a,r)=>{var i=r(5747);var n=r(2087);var p=r(3515);var o=r(6328);var d=r(7974);var s=n.tmpdir();function open(e,a,r,n){switch(a){case"w":a="wx";break;case"w+":a="wx+";break;default:throw new Error("Unknown file open flag: "+a)}if(typeof r==="function"){n=r;r=undefined}var d;o.async((function(n){d=p(s,e);i.open(d,a,r,n)}),(function(e,a){n(e,e?undefined:{fd:a,path:d})}))}function openSync(e,a,r){switch(a){case"w":a="wx";break;case"w+":a="wx+";break;default:throw new Error("Unknown file open flag: "+a)}var n;var d=o.sync((function(){n=p(s,e);return i.openSync(n,a,r)}));return{fd:d,path:n}}function mkdir(e,a,r){if(typeof a==="function"){r=a;a=undefined}var n;o.async((function(r){n=p(s,e);i.mkdir(n,a,r)}),(function(e){r(e,e?undefined:n)}))}function mkdirSync(e,a){var r;o.sync((function(){r=p(s,e);i.mkdirSync(r,a)}));return r}function writeFile(e,a,r,n){n=arguments[arguments.length-1];if(typeof r==="function"||!r){r={flag:"wx"}}else if(typeof r==="string"){r={encoding:r,flag:"wx"}}else if(typeof r==="object"){r.flag="wx"}else{throw new TypeError("Bad arguments")}var d;o.async((function(n){d=p(s,e);i.writeFile(d,a,r,n)}),(function(e){n(e,e?undefined:d)}))}function writeFileSync(e,a,r){if(!r){r={flag:"wx"}}else if(typeof r==="string"){r={encoding:r,flag:"wx"}}else if(typeof r==="object"){r.flag="wx"}else{throw new TypeError("Bad arguments")}var n;o.sync((function(){n=p(s,e);i.writeFileSync(n,a,r)}));return n}function createWriteStream(e,a){return new d(e,a)}a.open=open;a.openSync=openSync;a.mkdir=mkdir;a.mkdirSync=mkdirSync;a.writeFile=writeFile;a.writeFileSync=writeFileSync;a.createWriteStream=createWriteStream},7974:(e,a,r)=>{var i=r(2851);var n=r(5747).WriteStream;function TempWriteStream(e,a){this.template=e;n.call(this,null,a)}TempWriteStream.prototype=Object.create(n.prototype);TempWriteStream.prototype.open=function open(){i.open(this.template,this.flags,this.mode,function(e,a){if(e){this.destroy();this.emit("error",e);return}this.fd=a.fd;this.path=a.path;this.emit("path",a.path);this.emit("open",a.fd)}.bind(this))};e.exports=TempWriteStream},6863:(e,a,r)=>{e.exports=realpath;realpath.realpath=realpath;realpath.sync=realpathSync;realpath.realpathSync=realpathSync;realpath.monkeypatch=monkeypatch;realpath.unmonkeypatch=unmonkeypatch;var i=r(5747);var n=i.realpath;var p=i.realpathSync;var o=process.version;var d=/^v[0-5]\./.test(o);var s=r(1734);function newError(e){return e&&e.syscall==="realpath"&&(e.code==="ELOOP"||e.code==="ENOMEM"||e.code==="ENAMETOOLONG")}function realpath(e,a,r){if(d){return n(e,a,r)}if(typeof a==="function"){r=a;a=null}n(e,a,(function(i,n){if(newError(i)){s.realpath(e,a,r)}else{r(i,n)}}))}function realpathSync(e,a){if(d){return p(e,a)}try{return p(e,a)}catch(r){if(newError(r)){return s.realpathSync(e,a)}else{throw r}}}function monkeypatch(){i.realpath=realpath;i.realpathSync=realpathSync}function unmonkeypatch(){i.realpath=n;i.realpathSync=p}},1734:(e,a,r)=>{var i=r(5622);var n=process.platform==="win32";var p=r(5747);var o=process.env.NODE_DEBUG&&/fs/.test(process.env.NODE_DEBUG);function rethrow(){var e;if(o){var a=new Error;e=debugCallback}else e=missingCallback;return e;function debugCallback(e){if(e){a.message=e.message;e=a;missingCallback(e)}}function missingCallback(e){if(e){if(process.throwDeprecation)throw e;else if(!process.noDeprecation){var a="fs: missing callback "+(e.stack||e.message);if(process.traceDeprecation)console.trace(a);else console.error(a)}}}}function maybeCallback(e){return typeof e==="function"?e:rethrow()}var d=i.normalize;if(n){var s=/(.*?)(?:[\/\\]+|$)/g}else{var s=/(.*?)(?:[\/]+|$)/g}if(n){var l=/^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/}else{var l=/^[\/]*/}a.realpathSync=function realpathSync(e,a){e=i.resolve(e);if(a&&Object.prototype.hasOwnProperty.call(a,e)){return a[e]}var r=e,o={},d={};var u;var m;var c;var h;start();function start(){var a=l.exec(e);u=a[0].length;m=a[0];c=a[0];h="";if(n&&!d[c]){p.lstatSync(c);d[c]=true}}while(u<e.length){s.lastIndex=u;var v=s.exec(e);h=m;m+=v[0];c=h+v[1];u=s.lastIndex;if(d[c]||a&&a[c]===c){continue}var g;if(a&&Object.prototype.hasOwnProperty.call(a,c)){g=a[c]}else{var y=p.lstatSync(c);if(!y.isSymbolicLink()){d[c]=true;if(a)a[c]=c;continue}var w=null;if(!n){var b=y.dev.toString(32)+":"+y.ino.toString(32);if(o.hasOwnProperty(b)){w=o[b]}}if(w===null){p.statSync(c);w=p.readlinkSync(c)}g=i.resolve(h,w);if(a)a[c]=g;if(!n)o[b]=w}e=i.resolve(g,e.slice(u));start()}if(a)a[r]=e;return e};a.realpath=function realpath(e,a,r){if(typeof r!=="function"){r=maybeCallback(a);a=null}e=i.resolve(e);if(a&&Object.prototype.hasOwnProperty.call(a,e)){return process.nextTick(r.bind(null,null,a[e]))}var o=e,d={},u={};var m;var c;var h;var v;start();function start(){var a=l.exec(e);m=a[0].length;c=a[0];h=a[0];v="";if(n&&!u[h]){p.lstat(h,(function(e){if(e)return r(e);u[h]=true;LOOP()}))}else{process.nextTick(LOOP)}}function LOOP(){if(m>=e.length){if(a)a[o]=e;return r(null,e)}s.lastIndex=m;var i=s.exec(e);v=c;c+=i[0];h=v+i[1];m=s.lastIndex;if(u[h]||a&&a[h]===h){return process.nextTick(LOOP)}if(a&&Object.prototype.hasOwnProperty.call(a,h)){return gotResolvedLink(a[h])}return p.lstat(h,gotStat)}function gotStat(e,i){if(e)return r(e);if(!i.isSymbolicLink()){u[h]=true;if(a)a[h]=h;return process.nextTick(LOOP)}if(!n){var o=i.dev.toString(32)+":"+i.ino.toString(32);if(d.hasOwnProperty(o)){return gotTarget(null,d[o],h)}}p.stat(h,(function(e){if(e)return r(e);p.readlink(h,(function(e,a){if(!n)d[o]=a;gotTarget(e,a)}))}))}function gotTarget(e,n,p){if(e)return r(e);var o=i.resolve(v,n);if(a)a[p]=o;gotResolvedLink(o)}function gotResolvedLink(a){e=i.resolve(a,e.slice(m));start()}}},1585:(e,a,r)=>{"use strict";const{PassThrough:i}=r(2413);e.exports=e=>{e={...e};const{array:a}=e;let{encoding:r}=e;const n=r==="buffer";let p=false;if(a){p=!(r||n)}else{r=r||"utf8"}if(n){r=null}const o=new i({objectMode:p});if(r){o.setEncoding(r)}let d=0;const s=[];o.on("data",(e=>{s.push(e);if(p){d=s.length}else{d+=e.length}}));o.getBufferedValue=()=>{if(a){return s}return n?Buffer.concat(s,d):s.join("")};o.getBufferedLength=()=>d;return o}},1766:(e,a,r)=>{"use strict";const{constants:i}=r(4293);const n=r(8341);const p=r(1585);class MaxBufferError extends Error{constructor(){super("maxBuffer exceeded");this.name="MaxBufferError"}}async function getStream(e,a){if(!e){return Promise.reject(new Error("Expected a stream"))}a={maxBuffer:Infinity,...a};const{maxBuffer:r}=a;let o;await new Promise(((d,s)=>{const rejectPromise=e=>{if(e&&o.getBufferedLength()<=i.MAX_LENGTH){e.bufferedData=o.getBufferedValue()}s(e)};o=n(e,p(a),(e=>{if(e){rejectPromise(e);return}d()}));o.on("data",(()=>{if(o.getBufferedLength()>r){rejectPromise(new MaxBufferError)}}))}));return o.getBufferedValue()}e.exports=getStream;e.exports.default=getStream;e.exports.buffer=(e,a)=>getStream(e,{...a,encoding:"buffer"});e.exports.array=(e,a)=>getStream(e,{...a,array:true});e.exports.MaxBufferError=MaxBufferError},7625:(e,a,r)=>{a.setopts=setopts;a.ownProp=ownProp;a.makeAbs=makeAbs;a.finish=finish;a.mark=mark;a.isIgnored=isIgnored;a.childrenIgnored=childrenIgnored;function ownProp(e,a){return Object.prototype.hasOwnProperty.call(e,a)}var i=r(5747);var n=r(5622);var p=r(3973);var o=r(8714);var d=p.Minimatch;function alphasort(e,a){return e.localeCompare(a,"en")}function setupIgnores(e,a){e.ignore=a.ignore||[];if(!Array.isArray(e.ignore))e.ignore=[e.ignore];if(e.ignore.length){e.ignore=e.ignore.map(ignoreMap)}}function ignoreMap(e){var a=null;if(e.slice(-3)==="/**"){var r=e.replace(/(\/\*\*)+$/,"");a=new d(r,{dot:true})}return{matcher:new d(e,{dot:true}),gmatcher:a}}function setopts(e,a,r){if(!r)r={};if(r.matchBase&&-1===a.indexOf("/")){if(r.noglobstar){throw new Error("base matching requires globstar")}a="**/"+a}e.silent=!!r.silent;e.pattern=a;e.strict=r.strict!==false;e.realpath=!!r.realpath;e.realpathCache=r.realpathCache||Object.create(null);e.follow=!!r.follow;e.dot=!!r.dot;e.mark=!!r.mark;e.nodir=!!r.nodir;if(e.nodir)e.mark=true;e.sync=!!r.sync;e.nounique=!!r.nounique;e.nonull=!!r.nonull;e.nosort=!!r.nosort;e.nocase=!!r.nocase;e.stat=!!r.stat;e.noprocess=!!r.noprocess;e.absolute=!!r.absolute;e.fs=r.fs||i;e.maxLength=r.maxLength||Infinity;e.cache=r.cache||Object.create(null);e.statCache=r.statCache||Object.create(null);e.symlinks=r.symlinks||Object.create(null);setupIgnores(e,r);e.changedCwd=false;var p=process.cwd();if(!ownProp(r,"cwd"))e.cwd=p;else{e.cwd=n.resolve(r.cwd);e.changedCwd=e.cwd!==p}e.root=r.root||n.resolve(e.cwd,"/");e.root=n.resolve(e.root);if(process.platform==="win32")e.root=e.root.replace(/\\/g,"/");e.cwdAbs=o(e.cwd)?e.cwd:makeAbs(e,e.cwd);if(process.platform==="win32")e.cwdAbs=e.cwdAbs.replace(/\\/g,"/");e.nomount=!!r.nomount;r.nonegate=true;r.nocomment=true;e.minimatch=new d(a,r);e.options=e.minimatch.options}function finish(e){var a=e.nounique;var r=a?[]:Object.create(null);for(var i=0,n=e.matches.length;i<n;i++){var p=e.matches[i];if(!p||Object.keys(p).length===0){if(e.nonull){var o=e.minimatch.globSet[i];if(a)r.push(o);else r[o]=true}}else{var d=Object.keys(p);if(a)r.push.apply(r,d);else d.forEach((function(e){r[e]=true}))}}if(!a)r=Object.keys(r);if(!e.nosort)r=r.sort(alphasort);if(e.mark){for(var i=0;i<r.length;i++){r[i]=e._mark(r[i])}if(e.nodir){r=r.filter((function(a){var r=!/\/$/.test(a);var i=e.cache[a]||e.cache[makeAbs(e,a)];if(r&&i)r=i!=="DIR"&&!Array.isArray(i);return r}))}}if(e.ignore.length)r=r.filter((function(a){return!isIgnored(e,a)}));e.found=r}function mark(e,a){var r=makeAbs(e,a);var i=e.cache[r];var n=a;if(i){var p=i==="DIR"||Array.isArray(i);var o=a.slice(-1)==="/";if(p&&!o)n+="/";else if(!p&&o)n=n.slice(0,-1);if(n!==a){var d=makeAbs(e,n);e.statCache[d]=e.statCache[r];e.cache[d]=e.cache[r]}}return n}function makeAbs(e,a){var r=a;if(a.charAt(0)==="/"){r=n.join(e.root,a)}else if(o(a)||a===""){r=a}else if(e.changedCwd){r=n.resolve(e.cwd,a)}else{r=n.resolve(a)}if(process.platform==="win32")r=r.replace(/\\/g,"/");return r}function isIgnored(e,a){if(!e.ignore.length)return false;return e.ignore.some((function(e){return e.matcher.match(a)||!!(e.gmatcher&&e.gmatcher.match(a))}))}function childrenIgnored(e,a){if(!e.ignore.length)return false;return e.ignore.some((function(e){return!!(e.gmatcher&&e.gmatcher.match(a))}))}},1957:(e,a,r)=>{e.exports=glob;var i=r(6863);var n=r(3973);var p=n.Minimatch;var o=r(4124);var d=r(8614).EventEmitter;var s=r(5622);var l=r(2357);var u=r(8714);var m=r(9010);var c=r(7625);var h=c.setopts;var v=c.ownProp;var g=r(2492);var y=r(1669);var w=c.childrenIgnored;var b=c.isIgnored;var S=r(1223);function glob(e,a,r){if(typeof a==="function")r=a,a={};if(!a)a={};if(a.sync){if(r)throw new TypeError("callback provided to sync glob");return m(e,a)}return new Glob(e,a,r)}glob.sync=m;var _=glob.GlobSync=m.GlobSync;glob.glob=glob;function extend(e,a){if(a===null||typeof a!=="object"){return e}var r=Object.keys(a);var i=r.length;while(i--){e[r[i]]=a[r[i]]}return e}glob.hasMagic=function(e,a){var r=extend({},a);r.noprocess=true;var i=new Glob(e,r);var n=i.minimatch.set;if(!e)return false;if(n.length>1)return true;for(var p=0;p<n[0].length;p++){if(typeof n[0][p]!=="string")return true}return false};glob.Glob=Glob;o(Glob,d);function Glob(e,a,r){if(typeof a==="function"){r=a;a=null}if(a&&a.sync){if(r)throw new TypeError("callback provided to sync glob");return new _(e,a)}if(!(this instanceof Glob))return new Glob(e,a,r);h(this,e,a);this._didRealPath=false;var i=this.minimatch.set.length;this.matches=new Array(i);if(typeof r==="function"){r=S(r);this.on("error",r);this.on("end",(function(e){r(null,e)}))}var n=this;this._processing=0;this._emitQueue=[];this._processQueue=[];this.paused=false;if(this.noprocess)return this;if(i===0)return done();var p=true;for(var o=0;o<i;o++){this._process(this.minimatch.set[o],o,false,done)}p=false;function done(){--n._processing;if(n._processing<=0){if(p){process.nextTick((function(){n._finish()}))}else{n._finish()}}}}Glob.prototype._finish=function(){l(this instanceof Glob);if(this.aborted)return;if(this.realpath&&!this._didRealpath)return this._realpath();c.finish(this);this.emit("end",this.found)};Glob.prototype._realpath=function(){if(this._didRealpath)return;this._didRealpath=true;var e=this.matches.length;if(e===0)return this._finish();var a=this;for(var r=0;r<this.matches.length;r++)this._realpathSet(r,next);function next(){if(--e===0)a._finish()}};Glob.prototype._realpathSet=function(e,a){var r=this.matches[e];if(!r)return a();var n=Object.keys(r);var p=this;var o=n.length;if(o===0)return a();var d=this.matches[e]=Object.create(null);n.forEach((function(r,n){r=p._makeAbs(r);i.realpath(r,p.realpathCache,(function(i,n){if(!i)d[n]=true;else if(i.syscall==="stat")d[r]=true;else p.emit("error",i);if(--o===0){p.matches[e]=d;a()}}))}))};Glob.prototype._mark=function(e){return c.mark(this,e)};Glob.prototype._makeAbs=function(e){return c.makeAbs(this,e)};Glob.prototype.abort=function(){this.aborted=true;this.emit("abort")};Glob.prototype.pause=function(){if(!this.paused){this.paused=true;this.emit("pause")}};Glob.prototype.resume=function(){if(this.paused){this.emit("resume");this.paused=false;if(this._emitQueue.length){var e=this._emitQueue.slice(0);this._emitQueue.length=0;for(var a=0;a<e.length;a++){var r=e[a];this._emitMatch(r[0],r[1])}}if(this._processQueue.length){var i=this._processQueue.slice(0);this._processQueue.length=0;for(var a=0;a<i.length;a++){var n=i[a];this._processing--;this._process(n[0],n[1],n[2],n[3])}}}};Glob.prototype._process=function(e,a,r,i){l(this instanceof Glob);l(typeof i==="function");if(this.aborted)return;this._processing++;if(this.paused){this._processQueue.push([e,a,r,i]);return}var p=0;while(typeof e[p]==="string"){p++}var o;switch(p){case e.length:this._processSimple(e.join("/"),a,i);return;case 0:o=null;break;default:o=e.slice(0,p).join("/");break}var d=e.slice(p);var s;if(o===null)s=".";else if(u(o)||u(e.join("/"))){if(!o||!u(o))o="/"+o;s=o}else s=o;var m=this._makeAbs(s);if(w(this,s))return i();var c=d[0]===n.GLOBSTAR;if(c)this._processGlobStar(o,s,m,d,a,r,i);else this._processReaddir(o,s,m,d,a,r,i)};Glob.prototype._processReaddir=function(e,a,r,i,n,p,o){var d=this;this._readdir(r,p,(function(s,l){return d._processReaddir2(e,a,r,i,n,p,l,o)}))};Glob.prototype._processReaddir2=function(e,a,r,i,n,p,o,d){if(!o)return d();var l=i[0];var u=!!this.minimatch.negate;var m=l._glob;var c=this.dot||m.charAt(0)===".";var h=[];for(var v=0;v<o.length;v++){var g=o[v];if(g.charAt(0)!=="."||c){var y;if(u&&!e){y=!g.match(l)}else{y=g.match(l)}if(y)h.push(g)}}var w=h.length;if(w===0)return d();if(i.length===1&&!this.mark&&!this.stat){if(!this.matches[n])this.matches[n]=Object.create(null);for(var v=0;v<w;v++){var g=h[v];if(e){if(e!=="/")g=e+"/"+g;else g=e+g}if(g.charAt(0)==="/"&&!this.nomount){g=s.join(this.root,g)}this._emitMatch(n,g)}return d()}i.shift();for(var v=0;v<w;v++){var g=h[v];var b;if(e){if(e!=="/")g=e+"/"+g;else g=e+g}this._process([g].concat(i),n,p,d)}d()};Glob.prototype._emitMatch=function(e,a){if(this.aborted)return;if(b(this,a))return;if(this.paused){this._emitQueue.push([e,a]);return}var r=u(a)?a:this._makeAbs(a);if(this.mark)a=this._mark(a);if(this.absolute)a=r;if(this.matches[e][a])return;if(this.nodir){var i=this.cache[r];if(i==="DIR"||Array.isArray(i))return}this.matches[e][a]=true;var n=this.statCache[r];if(n)this.emit("stat",a,n);this.emit("match",a)};Glob.prototype._readdirInGlobStar=function(e,a){if(this.aborted)return;if(this.follow)return this._readdir(e,false,a);var r="lstat\0"+e;var i=this;var n=g(r,lstatcb_);if(n)i.fs.lstat(e,n);function lstatcb_(r,n){if(r&&r.code==="ENOENT")return a();var p=n&&n.isSymbolicLink();i.symlinks[e]=p;if(!p&&n&&!n.isDirectory()){i.cache[e]="FILE";a()}else i._readdir(e,false,a)}};Glob.prototype._readdir=function(e,a,r){if(this.aborted)return;r=g("readdir\0"+e+"\0"+a,r);if(!r)return;if(a&&!v(this.symlinks,e))return this._readdirInGlobStar(e,r);if(v(this.cache,e)){var i=this.cache[e];if(!i||i==="FILE")return r();if(Array.isArray(i))return r(null,i)}var n=this;n.fs.readdir(e,readdirCb(this,e,r))};function readdirCb(e,a,r){return function(i,n){if(i)e._readdirError(a,i,r);else e._readdirEntries(a,n,r)}}Glob.prototype._readdirEntries=function(e,a,r){if(this.aborted)return;if(!this.mark&&!this.stat){for(var i=0;i<a.length;i++){var n=a[i];if(e==="/")n=e+n;else n=e+"/"+n;this.cache[n]=true}}this.cache[e]=a;return r(null,a)};Glob.prototype._readdirError=function(e,a,r){if(this.aborted)return;switch(a.code){case"ENOTSUP":case"ENOTDIR":var i=this._makeAbs(e);this.cache[i]="FILE";if(i===this.cwdAbs){var n=new Error(a.code+" invalid cwd "+this.cwd);n.path=this.cwd;n.code=a.code;this.emit("error",n);this.abort()}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=false;break;default:this.cache[this._makeAbs(e)]=false;if(this.strict){this.emit("error",a);this.abort()}if(!this.silent)console.error("glob error",a);break}return r()};Glob.prototype._processGlobStar=function(e,a,r,i,n,p,o){var d=this;this._readdir(r,p,(function(s,l){d._processGlobStar2(e,a,r,i,n,p,l,o)}))};Glob.prototype._processGlobStar2=function(e,a,r,i,n,p,o,d){if(!o)return d();var s=i.slice(1);var l=e?[e]:[];var u=l.concat(s);this._process(u,n,false,d);var m=this.symlinks[r];var c=o.length;if(m&&p)return d();for(var h=0;h<c;h++){var v=o[h];if(v.charAt(0)==="."&&!this.dot)continue;var g=l.concat(o[h],s);this._process(g,n,true,d);var y=l.concat(o[h],i);this._process(y,n,true,d)}d()};Glob.prototype._processSimple=function(e,a,r){var i=this;this._stat(e,(function(n,p){i._processSimple2(e,a,n,p,r)}))};Glob.prototype._processSimple2=function(e,a,r,i,n){if(!this.matches[a])this.matches[a]=Object.create(null);if(!i)return n();if(e&&u(e)&&!this.nomount){var p=/[\/\\]$/.test(e);if(e.charAt(0)==="/"){e=s.join(this.root,e)}else{e=s.resolve(this.root,e);if(p)e+="/"}}if(process.platform==="win32")e=e.replace(/\\/g,"/");this._emitMatch(a,e);n()};Glob.prototype._stat=function(e,a){var r=this._makeAbs(e);var i=e.slice(-1)==="/";if(e.length>this.maxLength)return a();if(!this.stat&&v(this.cache,r)){var n=this.cache[r];if(Array.isArray(n))n="DIR";if(!i||n==="DIR")return a(null,n);if(i&&n==="FILE")return a()}var p;var o=this.statCache[r];if(o!==undefined){if(o===false)return a(null,o);else{var d=o.isDirectory()?"DIR":"FILE";if(i&&d==="FILE")return a();else return a(null,d,o)}}var s=this;var l=g("stat\0"+r,lstatcb_);if(l)s.fs.lstat(r,l);function lstatcb_(i,n){if(n&&n.isSymbolicLink()){return s.fs.stat(r,(function(i,p){if(i)s._stat2(e,r,null,n,a);else s._stat2(e,r,i,p,a)}))}else{s._stat2(e,r,i,n,a)}}};Glob.prototype._stat2=function(e,a,r,i,n){if(r&&(r.code==="ENOENT"||r.code==="ENOTDIR")){this.statCache[a]=false;return n()}var p=e.slice(-1)==="/";this.statCache[a]=i;if(a.slice(-1)==="/"&&i&&!i.isDirectory())return n(null,false,i);var o=true;if(i)o=i.isDirectory()?"DIR":"FILE";this.cache[a]=this.cache[a]||o;if(p&&o==="FILE")return n();return n(null,o,i)}},9010:(e,a,r)=>{e.exports=globSync;globSync.GlobSync=GlobSync;var i=r(6863);var n=r(3973);var p=n.Minimatch;var o=r(1957).Glob;var d=r(1669);var s=r(5622);var l=r(2357);var u=r(8714);var m=r(7625);var c=m.setopts;var h=m.ownProp;var v=m.childrenIgnored;var g=m.isIgnored;function globSync(e,a){if(typeof a==="function"||arguments.length===3)throw new TypeError("callback provided to sync glob\n"+"See: https://github.com/isaacs/node-glob/issues/167");return new GlobSync(e,a).found}function GlobSync(e,a){if(!e)throw new Error("must provide pattern");if(typeof a==="function"||arguments.length===3)throw new TypeError("callback provided to sync glob\n"+"See: https://github.com/isaacs/node-glob/issues/167");if(!(this instanceof GlobSync))return new GlobSync(e,a);c(this,e,a);if(this.noprocess)return this;var r=this.minimatch.set.length;this.matches=new Array(r);for(var i=0;i<r;i++){this._process(this.minimatch.set[i],i,false)}this._finish()}GlobSync.prototype._finish=function(){l(this instanceof GlobSync);if(this.realpath){var e=this;this.matches.forEach((function(a,r){var n=e.matches[r]=Object.create(null);for(var p in a){try{p=e._makeAbs(p);var o=i.realpathSync(p,e.realpathCache);n[o]=true}catch(a){if(a.syscall==="stat")n[e._makeAbs(p)]=true;else throw a}}}))}m.finish(this)};GlobSync.prototype._process=function(e,a,r){l(this instanceof GlobSync);var i=0;while(typeof e[i]==="string"){i++}var p;switch(i){case e.length:this._processSimple(e.join("/"),a);return;case 0:p=null;break;default:p=e.slice(0,i).join("/");break}var o=e.slice(i);var d;if(p===null)d=".";else if(u(p)||u(e.join("/"))){if(!p||!u(p))p="/"+p;d=p}else d=p;var s=this._makeAbs(d);if(v(this,d))return;var m=o[0]===n.GLOBSTAR;if(m)this._processGlobStar(p,d,s,o,a,r);else this._processReaddir(p,d,s,o,a,r)};GlobSync.prototype._processReaddir=function(e,a,r,i,n,p){var o=this._readdir(r,p);if(!o)return;var d=i[0];var l=!!this.minimatch.negate;var u=d._glob;var m=this.dot||u.charAt(0)===".";var c=[];for(var h=0;h<o.length;h++){var v=o[h];if(v.charAt(0)!=="."||m){var g;if(l&&!e){g=!v.match(d)}else{g=v.match(d)}if(g)c.push(v)}}var y=c.length;if(y===0)return;if(i.length===1&&!this.mark&&!this.stat){if(!this.matches[n])this.matches[n]=Object.create(null);for(var h=0;h<y;h++){var v=c[h];if(e){if(e.slice(-1)!=="/")v=e+"/"+v;else v=e+v}if(v.charAt(0)==="/"&&!this.nomount){v=s.join(this.root,v)}this._emitMatch(n,v)}return}i.shift();for(var h=0;h<y;h++){var v=c[h];var w;if(e)w=[e,v];else w=[v];this._process(w.concat(i),n,p)}};GlobSync.prototype._emitMatch=function(e,a){if(g(this,a))return;var r=this._makeAbs(a);if(this.mark)a=this._mark(a);if(this.absolute){a=r}if(this.matches[e][a])return;if(this.nodir){var i=this.cache[r];if(i==="DIR"||Array.isArray(i))return}this.matches[e][a]=true;if(this.stat)this._stat(a)};GlobSync.prototype._readdirInGlobStar=function(e){if(this.follow)return this._readdir(e,false);var a;var r;var i;try{r=this.fs.lstatSync(e)}catch(e){if(e.code==="ENOENT"){return null}}var n=r&&r.isSymbolicLink();this.symlinks[e]=n;if(!n&&r&&!r.isDirectory())this.cache[e]="FILE";else a=this._readdir(e,false);return a};GlobSync.prototype._readdir=function(e,a){var r;if(a&&!h(this.symlinks,e))return this._readdirInGlobStar(e);if(h(this.cache,e)){var i=this.cache[e];if(!i||i==="FILE")return null;if(Array.isArray(i))return i}try{return this._readdirEntries(e,this.fs.readdirSync(e))}catch(a){this._readdirError(e,a);return null}};GlobSync.prototype._readdirEntries=function(e,a){if(!this.mark&&!this.stat){for(var r=0;r<a.length;r++){var i=a[r];if(e==="/")i=e+i;else i=e+"/"+i;this.cache[i]=true}}this.cache[e]=a;return a};GlobSync.prototype._readdirError=function(e,a){switch(a.code){case"ENOTSUP":case"ENOTDIR":var r=this._makeAbs(e);this.cache[r]="FILE";if(r===this.cwdAbs){var i=new Error(a.code+" invalid cwd "+this.cwd);i.path=this.cwd;i.code=a.code;throw i}break;case"ENOENT":case"ELOOP":case"ENAMETOOLONG":case"UNKNOWN":this.cache[this._makeAbs(e)]=false;break;default:this.cache[this._makeAbs(e)]=false;if(this.strict)throw a;if(!this.silent)console.error("glob error",a);break}};GlobSync.prototype._processGlobStar=function(e,a,r,i,n,p){var o=this._readdir(r,p);if(!o)return;var d=i.slice(1);var s=e?[e]:[];var l=s.concat(d);this._process(l,n,false);var u=o.length;var m=this.symlinks[r];if(m&&p)return;for(var c=0;c<u;c++){var h=o[c];if(h.charAt(0)==="."&&!this.dot)continue;var v=s.concat(o[c],d);this._process(v,n,true);var g=s.concat(o[c],i);this._process(g,n,true)}};GlobSync.prototype._processSimple=function(e,a){var r=this._stat(e);if(!this.matches[a])this.matches[a]=Object.create(null);if(!r)return;if(e&&u(e)&&!this.nomount){var i=/[\/\\]$/.test(e);if(e.charAt(0)==="/"){e=s.join(this.root,e)}else{e=s.resolve(this.root,e);if(i)e+="/"}}if(process.platform==="win32")e=e.replace(/\\/g,"/");this._emitMatch(a,e)};GlobSync.prototype._stat=function(e){var a=this._makeAbs(e);var r=e.slice(-1)==="/";if(e.length>this.maxLength)return false;if(!this.stat&&h(this.cache,a)){var i=this.cache[a];if(Array.isArray(i))i="DIR";if(!r||i==="DIR")return i;if(r&&i==="FILE")return false}var n;var p=this.statCache[a];if(!p){var o;try{o=this.fs.lstatSync(a)}catch(e){if(e&&(e.code==="ENOENT"||e.code==="ENOTDIR")){this.statCache[a]=false;return false}}if(o&&o.isSymbolicLink()){try{p=this.fs.statSync(a)}catch(e){p=o}}else{p=o}}this.statCache[a]=p;var i=true;if(p)i=p.isDirectory()?"DIR":"FILE";this.cache[a]=this.cache[a]||i;if(r&&i==="FILE")return false;return i};GlobSync.prototype._mark=function(e){return m.mark(this,e)};GlobSync.prototype._makeAbs=function(e){return m.makeAbs(this,e)}},1621:e=>{"use strict";e.exports=(e,a=process.argv)=>{const r=e.startsWith("-")?"":e.length===1?"-":"--";const i=a.indexOf(r+e);const n=a.indexOf("--");return i!==-1&&(n===-1||i<n)}},3070:e=>{"use strict";e.exports=Math.imul||function(e,a){var r=e>>>16&65535;var i=e&65535;var n=a>>>16&65535;var p=a&65535;return i*p+(r*p+i*n<<16>>>0)|0}},2492:(e,a,r)=>{var i=r(2940);var n=Object.create(null);var p=r(1223);e.exports=i(inflight);function inflight(e,a){if(n[e]){n[e].push(a);return null}else{n[e]=[a];return makeres(e)}}function makeres(e){return p((function RES(){var a=n[e];var r=a.length;var i=slice(arguments);try{for(var p=0;p<r;p++){a[p].apply(null,i)}}finally{if(a.length>r){a.splice(0,r);process.nextTick((function(){RES.apply(null,i)}))}else{delete n[e]}}}))}function slice(e){var a=e.length;var r=[];for(var i=0;i<a;i++)r[i]=e[i];return r}},4124:(e,a,r)=>{try{var i=r(1669);if(typeof i.inherits!=="function")throw"";e.exports=i.inherits}catch(a){e.exports=r(8544)}},8544:e=>{if(typeof Object.create==="function"){e.exports=function inherits(e,a){if(a){e.super_=a;e.prototype=Object.create(a.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,a){if(a){e.super_=a;var TempCtor=function(){};TempCtor.prototype=a.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},5625:e=>{
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return e!=null&&(isBuffer(e)||isSlowBuffer(e)||!!e._isBuffer)};function isBuffer(e){return!!e.constructor&&typeof e.constructor.isBuffer==="function"&&e.constructor.isBuffer(e)}function isSlowBuffer(e){return typeof e.readFloatLE==="function"&&typeof e.slice==="function"&&isBuffer(e.slice(0,0))}},4223:(e,a,r)=>{a.create=r(5086);a.encode=r(2231);a.decode=r(8033);a.isAlias=r(9107)},5086:(e,a,r)=>{var i=r(5747);var n=r(5622);var p=r(2357);var o=r(2231);var d=r(2756);var findVolume=function(e,a){var r=a.dev;var p=a.ino;var o=e;while(1){var d=n.resolve(o,"..");var s=i.statSync(d);if(s.dev!==r){return o}if(s.ino===p){return o}r=s.dev;p=s.ino;o=d}};var utf16be=function(e){var a=new Buffer(e,"ucs2");for(var r=0;r<a.length;r+=2){var i=a[r];a[r]=a[r+1];a[r+1]=i}return a};e.exports=a=function(e){var a={version:2,extra:[]};var r=n.resolve(e,"..");var s=i.statSync(e);var l=i.statSync(r);var u=findVolume(e,s);var m=i.statSync(u);p(s.isFile()||s.isDirectory(),"Target is a file or directory");a.target={id:s.ino,type:s.isDirectory()?"directory":"file",filename:n.basename(e),created:s.ctime};a.parent={id:l.ino,name:n.basename(r)};a.volume={name:d.getVolumeName(u),created:m.ctime,signature:"H+",type:u==="/"?"local":"other"};(function addType0(){var e=new Buffer(a.parent.name,"utf8");a.extra.push({type:0,length:e.length,data:e})})();(function addType1(){var e=new Buffer(4);e.writeUInt32BE(a.parent.id,0);a.extra.push({type:1,length:e.length,data:e})})();(function addType14(){var e=a.target.filename.length;var r=new Buffer(2+e*2);r.writeUInt16BE(e,0);utf16be(a.target.filename).copy(r,2);a.extra.push({type:14,length:r.length,data:r})})();(function addType15(){var e=a.volume.name.length;var r=new Buffer(2+e*2);r.writeUInt16BE(e,0);utf16be(a.volume.name).copy(r,2);a.extra.push({type:15,length:r.length,data:r})})();(function addType18(){var r=u.length;p.equal(e.slice(0,r),u);var i=e.slice(r);var n=new Buffer(i,"utf8");a.extra.push({type:18,length:n.length,data:n})})();(function addType19(){var e=new Buffer(u,"utf8");a.extra.push({type:19,length:e.length,data:e})})();return o(a)}},8033:(e,a,r)=>{var i=r(2357);var n=r(6804);var p=Date.UTC(1904,0,1);var appleDate=function(e){return new Date(p+e*1e3)};e.exports=a=function(e){var a={volume:{},parent:{},target:{},extra:[]};i.equal(e.readUInt16BE(4),e.length);a.version=e.readUInt16BE(6);i.equal(a.version,2);var r=e.readUInt16BE(8);i(r===0||r===1,"Type is valid");a.target.type=n.type[r];var p=e.readUInt8(10);i(p<=27,"Volume name is not longer than 27 chars");a.volume.name=e.toString("utf8",11,11+p);var o=e.readUInt32BE(38);a.volume.created=appleDate(o);var d=e.toString("ascii",42,44);i(d==="BD"||d==="H+"||d==="HX","Volume signature is valid");a.volume.signature=d;var s=e.readUInt16BE(44);i(s>=0&&s<=5,"Volume type is valid");a.volume.type=n.volumeType[s];var l=e.readUInt32BE(46);a.parent.id=l;var u=e.readUInt8(50);i(u<=63,"File name is not longer than 63 chars");a.target.filename=e.toString("utf8",51,51+u);var m=e.readUInt32BE(114);a.target.id=m;var c=e.readUInt32BE(118);a.target.created=appleDate(c);var h=e.slice(140,150);i(h[0]===0&&h[1]===0,"Reserved is zero-filled");i(h[2]===0&&h[3]===0,"Reserved is zero-filled");i(h[4]===0&&h[5]===0,"Reserved is zero-filled");i(h[6]===0&&h[7]===0,"Reserved is zero-filled");i(h[8]===0&&h[9]===0,"Reserved is zero-filled");var v=150;while(v<e.length){var g=e.readInt16BE(v);var y=e.readUInt16BE(v+2);var w=e.slice(v+4,v+4+y);v+=4+y;if(g===-1){i.equal(y,0);break}if(y%2===1){var b=e.readUInt8(v);i.equal(b,0);v+=1}a.extra.push({type:g,length:y,data:w});switch(g){case 0:a.parent.name=w.toString("utf8");break;case 1:i.equal(a.parent.id,w.readUInt32BE(0));break;case 2:var S=w.toString("utf8").split("\0");a.target.path=S[0];i.equal(a.target.filename,S[1]);break;case 14:break;case 15:break;case 18:a.target.abspath=w.toString("utf8");break;case 19:a.volume.abspath=w.toString("utf8");break}}return a}},2231:(e,a,r)=>{var i=r(1669);var n=r(2357);var p=r(6804);var o=Date.UTC(1904,0,1);var appleDate=function(e){if(i.isDate(e)===false){throw new TypeError("Not a date: "+e)}return Math.round((e.getTime()-o)/1e3)};e.exports=a=function(e){n.equal(e.version,2);var a=150;var r=(e.extra||[]).reduce((function(e,a){n.equal(a.data.length,a.length);var r=a.length%2;return e+4+a.length+r}),0);var i=4;var o=new Buffer(a+r+i);o.writeUInt32BE(0,0);o.writeUInt16BE(o.length,4);o.writeUInt16BE(e.version,6);var d=p.type.indexOf(e.target.type);n(d===0||d===1,"Type is valid");o.writeUInt16BE(d,8);var s=e.volume.name.length;n(s<=27,"Volume name is not longer than 27 chars");o.writeUInt8(s,10);o.fill(0,11,11+27);o.write(e.volume.name,11,"utf8");var l=appleDate(e.volume.created);o.writeUInt32BE(l,38);var u=e.volume.signature;n(u==="BD"||u==="H+"||u==="HX","Volume signature is valid");o.write(u,42,"ascii");var m=p.volumeType.indexOf(e.volume.type);n(m>=0&&m<=5,"Volume type is valid");o.writeUInt16BE(m,44);o.writeUInt32BE(e.parent.id,46);var c=e.target.filename.length;n(c<=63,"File name is not longer than 63 chars");o.writeUInt8(c,50);o.fill(0,51,51+63);o.write(e.target.filename,51,"utf8");o.writeUInt32BE(e.target.id,114);var h=appleDate(e.target.created);o.writeUInt32BE(h,118);var v="\0\0\0\0";var g="\0\0\0\0";o.write(v,122,"binary");o.write(g,126,"binary");var y=-1;var w=-1;o.writeInt16BE(y,130);o.writeInt16BE(w,132);var b=3330;o.writeUInt32BE(b,134);var S=0;o.writeUInt16BE(S,138);o.fill(0,140,150);var _=150;for(var N=0;N<e.extra.length;N++){var E=e.extra[N];n(E.type>=0,"Type is valid");o.writeInt16BE(E.type,_);o.writeUInt16BE(E.length,_+2);E.data.copy(o,_+4);_+=4+E.length;if(E.length%2===1){o.writeUInt8(0,_);_+=1}}o.writeInt16BE(-1,_);o.writeUInt16BE(0,_+2);_+=4;n.equal(_,o.length);return o}},9107:(e,a,r)=>{var i=r(5747);e.exports=function isAlias(e){var a;var r=i.openSync(e,"r");try{a=new Buffer(16);i.readSync(r,a,0,16,0)}finally{i.closeSync(r)}var n="626f6f6b000000006d61726b00000000";var p=a.toString("hex");return p===n}},6804:(e,a)=>{a.type=["file","directory"];a.volumeType=["local","network","floppy-400","floppy-800","floppy-1400","other"]},1711:(e,a,r)=>{(function(){var a=r(7935),i=r(421).utf8,n=r(5625),p=r(421).bin,md5=function(e,r){if(e.constructor==String)if(r&&r.encoding==="binary")e=p.stringToBytes(e);else e=i.stringToBytes(e);else if(n(e))e=Array.prototype.slice.call(e,0);else if(!Array.isArray(e)&&e.constructor!==Uint8Array)e=e.toString();var o=a.bytesToWords(e),d=e.length*8,s=1732584193,l=-271733879,u=-1732584194,m=271733878;for(var c=0;c<o.length;c++){o[c]=(o[c]<<8|o[c]>>>24)&16711935|(o[c]<<24|o[c]>>>8)&4278255360}o[d>>>5]|=128<<d%32;o[(d+64>>>9<<4)+14]=d;var h=md5._ff,v=md5._gg,g=md5._hh,y=md5._ii;for(var c=0;c<o.length;c+=16){var w=s,b=l,S=u,_=m;s=h(s,l,u,m,o[c+0],7,-680876936);m=h(m,s,l,u,o[c+1],12,-389564586);u=h(u,m,s,l,o[c+2],17,606105819);l=h(l,u,m,s,o[c+3],22,-1044525330);s=h(s,l,u,m,o[c+4],7,-176418897);m=h(m,s,l,u,o[c+5],12,1200080426);u=h(u,m,s,l,o[c+6],17,-1473231341);l=h(l,u,m,s,o[c+7],22,-45705983);s=h(s,l,u,m,o[c+8],7,1770035416);m=h(m,s,l,u,o[c+9],12,-1958414417);u=h(u,m,s,l,o[c+10],17,-42063);l=h(l,u,m,s,o[c+11],22,-1990404162);s=h(s,l,u,m,o[c+12],7,1804603682);m=h(m,s,l,u,o[c+13],12,-40341101);u=h(u,m,s,l,o[c+14],17,-1502002290);l=h(l,u,m,s,o[c+15],22,1236535329);s=v(s,l,u,m,o[c+1],5,-165796510);m=v(m,s,l,u,o[c+6],9,-1069501632);u=v(u,m,s,l,o[c+11],14,643717713);l=v(l,u,m,s,o[c+0],20,-373897302);s=v(s,l,u,m,o[c+5],5,-701558691);m=v(m,s,l,u,o[c+10],9,38016083);u=v(u,m,s,l,o[c+15],14,-660478335);l=v(l,u,m,s,o[c+4],20,-405537848);s=v(s,l,u,m,o[c+9],5,568446438);m=v(m,s,l,u,o[c+14],9,-1019803690);u=v(u,m,s,l,o[c+3],14,-187363961);l=v(l,u,m,s,o[c+8],20,1163531501);s=v(s,l,u,m,o[c+13],5,-1444681467);m=v(m,s,l,u,o[c+2],9,-51403784);u=v(u,m,s,l,o[c+7],14,1735328473);l=v(l,u,m,s,o[c+12],20,-1926607734);s=g(s,l,u,m,o[c+5],4,-378558);m=g(m,s,l,u,o[c+8],11,-2022574463);u=g(u,m,s,l,o[c+11],16,1839030562);l=g(l,u,m,s,o[c+14],23,-35309556);s=g(s,l,u,m,o[c+1],4,-1530992060);m=g(m,s,l,u,o[c+4],11,1272893353);u=g(u,m,s,l,o[c+7],16,-155497632);l=g(l,u,m,s,o[c+10],23,-1094730640);s=g(s,l,u,m,o[c+13],4,681279174);m=g(m,s,l,u,o[c+0],11,-358537222);u=g(u,m,s,l,o[c+3],16,-722521979);l=g(l,u,m,s,o[c+6],23,76029189);s=g(s,l,u,m,o[c+9],4,-640364487);m=g(m,s,l,u,o[c+12],11,-421815835);u=g(u,m,s,l,o[c+15],16,530742520);l=g(l,u,m,s,o[c+2],23,-995338651);s=y(s,l,u,m,o[c+0],6,-198630844);m=y(m,s,l,u,o[c+7],10,1126891415);u=y(u,m,s,l,o[c+14],15,-1416354905);l=y(l,u,m,s,o[c+5],21,-57434055);s=y(s,l,u,m,o[c+12],6,1700485571);m=y(m,s,l,u,o[c+3],10,-1894986606);u=y(u,m,s,l,o[c+10],15,-1051523);l=y(l,u,m,s,o[c+1],21,-2054922799);s=y(s,l,u,m,o[c+8],6,1873313359);m=y(m,s,l,u,o[c+15],10,-30611744);u=y(u,m,s,l,o[c+6],15,-1560198380);l=y(l,u,m,s,o[c+13],21,1309151649);s=y(s,l,u,m,o[c+4],6,-145523070);m=y(m,s,l,u,o[c+11],10,-1120210379);u=y(u,m,s,l,o[c+2],15,718787259);l=y(l,u,m,s,o[c+9],21,-343485551);s=s+w>>>0;l=l+b>>>0;u=u+S>>>0;m=m+_>>>0}return a.endian([s,l,u,m])};md5._ff=function(e,a,r,i,n,p,o){var d=e+(a&r|~a&i)+(n>>>0)+o;return(d<<p|d>>>32-p)+a};md5._gg=function(e,a,r,i,n,p,o){var d=e+(a&i|r&~i)+(n>>>0)+o;return(d<<p|d>>>32-p)+a};md5._hh=function(e,a,r,i,n,p,o){var d=e+(a^r^i)+(n>>>0)+o;return(d<<p|d>>>32-p)+a};md5._ii=function(e,a,r,i,n,p,o){var d=e+(r^(a|~i))+(n>>>0)+o;return(d<<p|d>>>32-p)+a};md5._blocksize=16;md5._digestsize=16;e.exports=function(e,r){if(e===undefined||e===null)throw new Error("Illegal argument "+e);var i=a.wordsToBytes(md5(e,r));return r&&r.asBytes?i:r&&r.asString?p.bytesToString(i):a.bytesToHex(i)}})()},3973:(e,a,r)=>{e.exports=minimatch;minimatch.Minimatch=Minimatch;var i={sep:"/"};try{i=r(5622)}catch(e){}var n=minimatch.GLOBSTAR=Minimatch.GLOBSTAR={};var p=r(3717);var o={"!":{open:"(?:(?!(?:",close:"))[^/]*?)"},"?":{open:"(?:",close:")?"},"+":{open:"(?:",close:")+"},"*":{open:"(?:",close:")*"},"@":{open:"(?:",close:")"}};var d="[^/]";var s=d+"*?";var l="(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?";var u="(?:(?!(?:\\/|^)\\.).)*?";var m=charSet("().*{}+?[]^$\\!");function charSet(e){return e.split("").reduce((function(e,a){e[a]=true;return e}),{})}var c=/\/+/;minimatch.filter=filter;function filter(e,a){a=a||{};return function(r,i,n){return minimatch(r,e,a)}}function ext(e,a){e=e||{};a=a||{};var r={};Object.keys(a).forEach((function(e){r[e]=a[e]}));Object.keys(e).forEach((function(a){r[a]=e[a]}));return r}minimatch.defaults=function(e){if(!e||!Object.keys(e).length)return minimatch;var a=minimatch;var r=function minimatch(r,i,n){return a.minimatch(r,i,ext(e,n))};r.Minimatch=function Minimatch(r,i){return new a.Minimatch(r,ext(e,i))};return r};Minimatch.defaults=function(e){if(!e||!Object.keys(e).length)return Minimatch;return minimatch.defaults(e).Minimatch};function minimatch(e,a,r){if(typeof a!=="string"){throw new TypeError("glob pattern string required")}if(!r)r={};if(!r.nocomment&&a.charAt(0)==="#"){return false}if(a.trim()==="")return e==="";return new Minimatch(a,r).match(e)}function Minimatch(e,a){if(!(this instanceof Minimatch)){return new Minimatch(e,a)}if(typeof e!=="string"){throw new TypeError("glob pattern string required")}if(!a)a={};e=e.trim();if(i.sep!=="/"){e=e.split(i.sep).join("/")}this.options=a;this.set=[];this.pattern=e;this.regexp=null;this.negate=false;this.comment=false;this.empty=false;this.make()}Minimatch.prototype.debug=function(){};Minimatch.prototype.make=make;function make(){if(this._made)return;var e=this.pattern;var a=this.options;if(!a.nocomment&&e.charAt(0)==="#"){this.comment=true;return}if(!e){this.empty=true;return}this.parseNegate();var r=this.globSet=this.braceExpand();if(a.debug)this.debug=console.error;this.debug(this.pattern,r);r=this.globParts=r.map((function(e){return e.split(c)}));this.debug(this.pattern,r);r=r.map((function(e,a,r){return e.map(this.parse,this)}),this);this.debug(this.pattern,r);r=r.filter((function(e){return e.indexOf(false)===-1}));this.debug(this.pattern,r);this.set=r}Minimatch.prototype.parseNegate=parseNegate;function parseNegate(){var e=this.pattern;var a=false;var r=this.options;var i=0;if(r.nonegate)return;for(var n=0,p=e.length;n<p&&e.charAt(n)==="!";n++){a=!a;i++}if(i)this.pattern=e.substr(i);this.negate=a}minimatch.braceExpand=function(e,a){return braceExpand(e,a)};Minimatch.prototype.braceExpand=braceExpand;function braceExpand(e,a){if(!a){if(this instanceof Minimatch){a=this.options}else{a={}}}e=typeof e==="undefined"?this.pattern:e;if(typeof e==="undefined"){throw new TypeError("undefined pattern")}if(a.nobrace||!e.match(/\{.*\}/)){return[e]}return p(e)}Minimatch.prototype.parse=parse;var h={};function parse(e,a){if(e.length>1024*64){throw new TypeError("pattern is too long")}var r=this.options;if(!r.noglobstar&&e==="**")return n;if(e==="")return"";var i="";var p=!!r.nocase;var l=false;var u=[];var c=[];var v;var g=false;var y=-1;var w=-1;var b=e.charAt(0)==="."?"":r.dot?"(?!(?:^|\\/)\\.{1,2}(?:$|\\/))":"(?!\\.)";var S=this;function clearStateChar(){if(v){switch(v){case"*":i+=s;p=true;break;case"?":i+=d;p=true;break;default:i+="\\"+v;break}S.debug("clearStateChar %j %j",v,i);v=false}}for(var _=0,N=e.length,E;_<N&&(E=e.charAt(_));_++){this.debug("%s\t%s %s %j",e,_,i,E);if(l&&m[E]){i+="\\"+E;l=false;continue}switch(E){case"/":return false;case"\\":clearStateChar();l=true;continue;case"?":case"*":case"+":case"@":case"!":this.debug("%s\t%s %s %j <-- stateChar",e,_,i,E);if(g){this.debug("  in class");if(E==="!"&&_===w+1)E="^";i+=E;continue}S.debug("call clearStateChar %j",v);clearStateChar();v=E;if(r.noext)clearStateChar();continue;case"(":if(g){i+="(";continue}if(!v){i+="\\(";continue}u.push({type:v,start:_-1,reStart:i.length,open:o[v].open,close:o[v].close});i+=v==="!"?"(?:(?!(?:":"(?:";this.debug("plType %j %j",v,i);v=false;continue;case")":if(g||!u.length){i+="\\)";continue}clearStateChar();p=true;var D=u.pop();i+=D.close;if(D.type==="!"){c.push(D)}D.reEnd=i.length;continue;case"|":if(g||!u.length||l){i+="\\|";l=false;continue}clearStateChar();i+="|";continue;case"[":clearStateChar();if(g){i+="\\"+E;continue}g=true;w=_;y=i.length;i+=E;continue;case"]":if(_===w+1||!g){i+="\\"+E;l=false;continue}if(g){var C=e.substring(w+1,_);try{RegExp("["+C+"]")}catch(e){var I=this.parse(C,h);i=i.substr(0,y)+"\\["+I[0]+"\\]";p=p||I[1];g=false;continue}}p=true;g=false;i+=E;continue;default:clearStateChar();if(l){l=false}else if(m[E]&&!(E==="^"&&g)){i+="\\"}i+=E}}if(g){C=e.substr(w+1);I=this.parse(C,h);i=i.substr(0,y)+"\\["+I[0];p=p||I[1]}for(D=u.pop();D;D=u.pop()){var T=i.slice(D.reStart+D.open.length);this.debug("setting tail",i,D);T=T.replace(/((?:\\{2}){0,64})(\\?)\|/g,(function(e,a,r){if(!r){r="\\"}return a+a+r+"|"}));this.debug("tail=%j\n   %s",T,T,D,i);var A=D.type==="*"?s:D.type==="?"?d:"\\"+D.type;p=true;i=i.slice(0,D.reStart)+A+"\\("+T}clearStateChar();if(l){i+="\\\\"}var x=false;switch(i.charAt(0)){case".":case"[":case"(":x=true}for(var B=c.length-1;B>-1;B--){var O=c[B];var L=i.slice(0,O.reStart);var M=i.slice(O.reStart,O.reEnd-8);var R=i.slice(O.reEnd-8,O.reEnd);var P=i.slice(O.reEnd);R+=P;var F=L.split("(").length-1;var k=P;for(_=0;_<F;_++){k=k.replace(/\)[+*?]?/,"")}P=k;var V="";if(P===""&&a!==h){V="$"}var U=L+M+P+V+R;i=U}if(i!==""&&p){i="(?=.)"+i}if(x){i=b+i}if(a===h){return[i,p]}if(!p){return globUnescape(e)}var j=r.nocase?"i":"";try{var z=new RegExp("^"+i+"$",j)}catch(e){return new RegExp("$.")}z._glob=e;z._src=i;return z}minimatch.makeRe=function(e,a){return new Minimatch(e,a||{}).makeRe()};Minimatch.prototype.makeRe=makeRe;function makeRe(){if(this.regexp||this.regexp===false)return this.regexp;var e=this.set;if(!e.length){this.regexp=false;return this.regexp}var a=this.options;var r=a.noglobstar?s:a.dot?l:u;var i=a.nocase?"i":"";var p=e.map((function(e){return e.map((function(e){return e===n?r:typeof e==="string"?regExpEscape(e):e._src})).join("\\/")})).join("|");p="^(?:"+p+")$";if(this.negate)p="^(?!"+p+").*$";try{this.regexp=new RegExp(p,i)}catch(e){this.regexp=false}return this.regexp}minimatch.match=function(e,a,r){r=r||{};var i=new Minimatch(a,r);e=e.filter((function(e){return i.match(e)}));if(i.options.nonull&&!e.length){e.push(a)}return e};Minimatch.prototype.match=match;function match(e,a){this.debug("match",e,this.pattern);if(this.comment)return false;if(this.empty)return e==="";if(e==="/"&&a)return true;var r=this.options;if(i.sep!=="/"){e=e.split(i.sep).join("/")}e=e.split(c);this.debug(this.pattern,"split",e);var n=this.set;this.debug(this.pattern,"set",n);var p;var o;for(o=e.length-1;o>=0;o--){p=e[o];if(p)break}for(o=0;o<n.length;o++){var d=n[o];var s=e;if(r.matchBase&&d.length===1){s=[p]}var l=this.matchOne(s,d,a);if(l){if(r.flipNegate)return true;return!this.negate}}if(r.flipNegate)return false;return this.negate}Minimatch.prototype.matchOne=function(e,a,r){var i=this.options;this.debug("matchOne",{this:this,file:e,pattern:a});this.debug("matchOne",e.length,a.length);for(var p=0,o=0,d=e.length,s=a.length;p<d&&o<s;p++,o++){this.debug("matchOne loop");var l=a[o];var u=e[p];this.debug(a,l,u);if(l===false)return false;if(l===n){this.debug("GLOBSTAR",[a,l,u]);var m=p;var c=o+1;if(c===s){this.debug("** at the end");for(;p<d;p++){if(e[p]==="."||e[p]===".."||!i.dot&&e[p].charAt(0)===".")return false}return true}while(m<d){var h=e[m];this.debug("\nglobstar while",e,m,a,c,h);if(this.matchOne(e.slice(m),a.slice(c),r)){this.debug("globstar found match!",m,d,h);return true}else{if(h==="."||h===".."||!i.dot&&h.charAt(0)==="."){this.debug("dot detected!",e,m,a,c);break}this.debug("globstar swallow a segment, and continue");m++}}if(r){this.debug("\n>>> no match, partial?",e,m,a,c);if(m===d)return true}return false}var v;if(typeof l==="string"){if(i.nocase){v=u.toLowerCase()===l.toLowerCase()}else{v=u===l}this.debug("string match",l,u,v)}else{v=u.match(l);this.debug("pattern match",l,u,v)}if(!v)return false}if(p===d&&o===s){return true}else if(p===d){return r}else if(o===s){var g=p===d-1&&e[p]==="";return g}throw new Error("wtf?")};function globUnescape(e){return e.replace(/\\(.)/g,"$1")}function regExpEscape(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}},900:e=>{var a=1e3;var r=a*60;var i=r*60;var n=i*24;var p=n*7;var o=n*365.25;e.exports=function(e,a){a=a||{};var r=typeof e;if(r==="string"&&e.length>0){return parse(e)}else if(r==="number"&&isFinite(e)){return a.long?fmtLong(e):fmtShort(e)}throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(e){e=String(e);if(e.length>100){return}var d=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!d){return}var s=parseFloat(d[1]);var l=(d[2]||"ms").toLowerCase();switch(l){case"years":case"year":case"yrs":case"yr":case"y":return s*o;case"weeks":case"week":case"w":return s*p;case"days":case"day":case"d":return s*n;case"hours":case"hour":case"hrs":case"hr":case"h":return s*i;case"minutes":case"minute":case"mins":case"min":case"m":return s*r;case"seconds":case"second":case"secs":case"sec":case"s":return s*a;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return undefined}}function fmtShort(e){var p=Math.abs(e);if(p>=n){return Math.round(e/n)+"d"}if(p>=i){return Math.round(e/i)+"h"}if(p>=r){return Math.round(e/r)+"m"}if(p>=a){return Math.round(e/a)+"s"}return e+"ms"}function fmtLong(e){var p=Math.abs(e);if(p>=n){return plural(e,p,n,"day")}if(p>=i){return plural(e,p,i,"hour")}if(p>=r){return plural(e,p,r,"minute")}if(p>=a){return plural(e,p,a,"second")}return e+" ms"}function plural(e,a,r,i){var n=a>=r*1.5;return Math.round(e/r)+" "+i+(n?"s":"")}},2804:(e,a,r)=>{var i=r(3070);var n=r(8062);var p=r(682);var o=new Uint32Array([3432918353,461845907]);function rotl(e,a){return e<<a|e>>>32-a}function body(e,a){var r=e.byteLength/4|0;var n=new Uint32Array(e,0,r);for(var p=0;p<r;p++){n[p]=i(n[p],o[0]);n[p]=rotl(n[p],15);n[p]=i(n[p],o[1]);a[0]=a[0]^n[p];a[0]=rotl(a[0],13);a[0]=i(a[0],5)+3864292196}}function tail(e,a){var r=e.byteLength/4|0;var n=e.byteLength%4;var p=0;var d=new Uint8Array(e,r*4,n);switch(n){case 3:p=p^d[2]<<16;case 2:p=p^d[1]<<8;case 1:p=p^d[0]<<0;p=i(p,o[0]);p=rotl(p,15);p=i(p,o[1]);a[0]=a[0]^p}}function finalize(e,a){a[0]=a[0]^e.byteLength;a[0]=n(a[0])}e.exports=function murmur(e,a){a=a?a|0:0;if(typeof e==="string"){e=p(e)}if(!(e instanceof ArrayBuffer)){throw new TypeError("Expected key to be ArrayBuffer or string")}var r=new Uint32Array([a]);body(e,r);tail(e,r);finalize(e,r);return r.buffer}},467:(e,a,r)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var i=_interopDefault(r(2413));var n=_interopDefault(r(8605));var p=_interopDefault(r(8835));var o=_interopDefault(r(3323));var d=_interopDefault(r(7211));var s=_interopDefault(r(8761));const l=i.Readable;const u=Symbol("buffer");const m=Symbol("type");class Blob{constructor(){this[m]="";const e=arguments[0];const a=arguments[1];const r=[];let i=0;if(e){const a=e;const n=Number(a.length);for(let e=0;e<n;e++){const n=a[e];let p;if(n instanceof Buffer){p=n}else if(ArrayBuffer.isView(n)){p=Buffer.from(n.buffer,n.byteOffset,n.byteLength)}else if(n instanceof ArrayBuffer){p=Buffer.from(n)}else if(n instanceof Blob){p=n[u]}else{p=Buffer.from(typeof n==="string"?n:String(n))}i+=p.length;r.push(p)}}this[u]=Buffer.concat(r);let n=a&&a.type!==undefined&&String(a.type).toLowerCase();if(n&&!/[^\u0020-\u007E]/.test(n)){this[m]=n}}get size(){return this[u].length}get type(){return this[m]}text(){return Promise.resolve(this[u].toString())}arrayBuffer(){const e=this[u];const a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new l;e._read=function(){};e.push(this[u]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const a=arguments[0];const r=arguments[1];let i,n;if(a===undefined){i=0}else if(a<0){i=Math.max(e+a,0)}else{i=Math.min(a,e)}if(r===undefined){n=e}else if(r<0){n=Math.max(e+r,0)}else{n=Math.min(r,e)}const p=Math.max(n-i,0);const o=this[u];const d=o.slice(i,i+p);const s=new Blob([],{type:arguments[2]});s[u]=d;return s}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,a,r){Error.call(this,e);this.message=e;this.type=a;if(r){this.code=this.errno=r.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let c;try{c=r(2877).convert}catch(e){}const h=Symbol("Body internals");const v=i.PassThrough;function Body(e){var a=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},n=r.size;let p=n===undefined?0:n;var o=r.timeout;let d=o===undefined?0:o;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof i);else{e=Buffer.from(String(e))}this[h]={body:e,disturbed:false,error:null};this.size=p;this.timeout=d;if(e instanceof i){e.on("error",(function(e){const r=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[h].error=r}))}}Body.prototype={get body(){return this[h].body},get bodyUsed(){return this[h].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(a){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[u]:a})}))},json(){var e=this;return consumeBody.call(this).then((function(a){try{return JSON.parse(a.toString())}catch(a){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(a){return convertBody(a,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const a of Object.getOwnPropertyNames(Body.prototype)){if(!(a in e)){const r=Object.getOwnPropertyDescriptor(Body.prototype,a);Object.defineProperty(e,a,r)}}};function consumeBody(){var e=this;if(this[h].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[h].disturbed=true;if(this[h].error){return Body.Promise.reject(this[h].error)}let a=this.body;if(a===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(a)){a=a.stream()}if(Buffer.isBuffer(a)){return Body.Promise.resolve(a)}if(!(a instanceof i)){return Body.Promise.resolve(Buffer.alloc(0))}let r=[];let n=0;let p=false;return new Body.Promise((function(i,o){let d;if(e.timeout){d=setTimeout((function(){p=true;o(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}a.on("error",(function(a){if(a.name==="AbortError"){p=true;o(a)}else{o(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}}));a.on("data",(function(a){if(p||a===null){return}if(e.size&&n+a.length>e.size){p=true;o(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}n+=a.length;r.push(a)}));a.on("end",(function(){if(p){return}clearTimeout(d);try{i(Buffer.concat(r,n))}catch(a){o(new FetchError(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}))}))}function convertBody(e,a){if(typeof c!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const r=a.get("content-type");let i="utf-8";let n,p;if(r){n=/charset=([^;]*)/i.exec(r)}p=e.slice(0,1024).toString();if(!n&&p){n=/<meta.+?charset=(['"])(.+?)\1/i.exec(p)}if(!n&&p){n=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(p);if(!n){n=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(p);if(n){n.pop()}}if(n){n=/charset=(.*)/i.exec(n.pop())}}if(!n&&p){n=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(p)}if(n){i=n.pop();if(i==="gb2312"||i==="gbk"){i="gb18030"}}return c(e,"UTF-8",i).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let a,r;let n=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof i&&typeof n.getBoundary!=="function"){a=new v;r=new v;n.pipe(a);n.pipe(r);e[h].body=a;n=r}return n}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof i){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const a=e.body;if(a===null){return 0}else if(isBlob(a)){return a.size}else if(Buffer.isBuffer(a)){return a.length}else if(a&&typeof a.getLengthSync==="function"){if(a._lengthRetrievers&&a._lengthRetrievers.length==0||a.hasKnownLength&&a.hasKnownLength()){return a.getLengthSync()}return null}else{return null}}function writeToStream(e,a){const r=a.body;if(r===null){e.end()}else if(isBlob(r)){r.stream().pipe(e)}else if(Buffer.isBuffer(r)){e.write(r);e.end()}else{r.pipe(e)}}Body.Promise=global.Promise;const g=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const y=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(g.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(y.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,a){a=a.toLowerCase();for(const r in e){if(r.toLowerCase()===a){return r}}return undefined}const w=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[w]=Object.create(null);if(e instanceof Headers){const a=e.raw();const r=Object.keys(a);for(const e of r){for(const r of a[e]){this.append(e,r)}}return}if(e==null);else if(typeof e==="object"){const a=e[Symbol.iterator];if(a!=null){if(typeof a!=="function"){throw new TypeError("Header pairs must be iterable")}const r=[];for(const a of e){if(typeof a!=="object"||typeof a[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}r.push(Array.from(a))}for(const e of r){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const a of Object.keys(e)){const r=e[a];this.append(a,r)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const a=find(this[w],e);if(a===undefined){return null}return this[w][a].join(", ")}forEach(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let r=getHeaders(this);let i=0;while(i<r.length){var n=r[i];const p=n[0],o=n[1];e.call(a,o,p,this);r=getHeaders(this);i++}}set(e,a){e=`${e}`;a=`${a}`;validateName(e);validateValue(a);const r=find(this[w],e);this[w][r!==undefined?r:e]=[a]}append(e,a){e=`${e}`;a=`${a}`;validateName(e);validateValue(a);const r=find(this[w],e);if(r!==undefined){this[w][r].push(a)}else{this[w][e]=[a]}}has(e){e=`${e}`;validateName(e);return find(this[w],e)!==undefined}delete(e){e=`${e}`;validateName(e);const a=find(this[w],e);if(a!==undefined){delete this[w][a]}}raw(){return this[w]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const r=Object.keys(e[w]).sort();return r.map(a==="key"?function(e){return e.toLowerCase()}:a==="value"?function(a){return e[w][a].join(", ")}:function(a){return[a.toLowerCase(),e[w][a].join(", ")]})}const b=Symbol("internal");function createHeadersIterator(e,a){const r=Object.create(S);r[b]={target:e,kind:a,index:0};return r}const S=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==S){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[b];const a=e.target,r=e.kind,i=e.index;const n=getHeaders(a,r);const p=n.length;if(i>=p){return{value:undefined,done:true}}this[b].index=i+1;return{value:n[i],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(S,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const a=Object.assign({__proto__:null},e[w]);const r=find(e[w],"Host");if(r!==undefined){a[r]=a[r][0]}return a}function createHeadersLenient(e){const a=new Headers;for(const r of Object.keys(e)){if(g.test(r)){continue}if(Array.isArray(e[r])){for(const i of e[r]){if(y.test(i)){continue}if(a[w][r]===undefined){a[w][r]=[i]}else{a[w][r].push(i)}}}else if(!y.test(e[r])){a[w][r]=[e[r]]}}return a}const _=Symbol("Response internals");const N=n.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,a);const r=a.status||200;const i=new Headers(a.headers);if(e!=null&&!i.has("Content-Type")){const a=extractContentType(e);if(a){i.append("Content-Type",a)}}this[_]={url:a.url,status:r,statusText:a.statusText||N[r],headers:i,counter:a.counter}}get url(){return this[_].url||""}get status(){return this[_].status}get ok(){return this[_].status>=200&&this[_].status<300}get redirected(){return this[_].counter>0}get statusText(){return this[_].statusText}get headers(){return this[_].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const E=Symbol("Request internals");const D=p.URL||o.URL;const C=p.parse;const I=p.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){e=new D(e).toString()}return C(e)}const T="destroy"in i.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[E]==="object"}function isAbortSignal(e){const a=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(a&&a.constructor.name==="AbortSignal")}class Request{constructor(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let r;if(!isRequest(e)){if(e&&e.href){r=parseURL(e.href)}else{r=parseURL(`${e}`)}e={}}else{r=parseURL(e.url)}let i=a.method||e.method||"GET";i=i.toUpperCase();if((a.body!=null||isRequest(e)&&e.body!==null)&&(i==="GET"||i==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let n=a.body!=null?a.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,n,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const p=new Headers(a.headers||e.headers||{});if(n!=null&&!p.has("Content-Type")){const e=extractContentType(n);if(e){p.append("Content-Type",e)}}let o=isRequest(e)?e.signal:null;if("signal"in a)o=a.signal;if(o!=null&&!isAbortSignal(o)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[E]={method:i,redirect:a.redirect||e.redirect||"follow",headers:p,parsedURL:r,signal:o};this.follow=a.follow!==undefined?a.follow:e.follow!==undefined?e.follow:20;this.compress=a.compress!==undefined?a.compress:e.compress!==undefined?e.compress:true;this.counter=a.counter||e.counter||0;this.agent=a.agent||e.agent}get method(){return this[E].method}get url(){return I(this[E].parsedURL)}get headers(){return this[E].headers}get redirect(){return this[E].redirect}get signal(){return this[E].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const a=e[E].parsedURL;const r=new Headers(e[E].headers);if(!r.has("Accept")){r.set("Accept","*/*")}if(!a.protocol||!a.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(a.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof i.Readable&&!T){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let n=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){n="0"}if(e.body!=null){const a=getTotalBytes(e);if(typeof a==="number"){n=String(a)}}if(n){r.set("Content-Length",n)}if(!r.has("User-Agent")){r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!r.has("Accept-Encoding")){r.set("Accept-Encoding","gzip,deflate")}let p=e.agent;if(typeof p==="function"){p=p(a)}if(!r.has("Connection")&&!p){r.set("Connection","close")}return Object.assign({},a,{method:e.method,headers:exportNodeCompatibleHeaders(r),agent:p})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const A=p.URL||o.URL;const x=i.PassThrough;const B=function isDomainOrSubdomain(e,a){const r=new A(a).hostname;const i=new A(e).hostname;return r===i||r[r.length-i.length-1]==="."&&r.endsWith(i)};function fetch(e,a){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(r,p){const o=new Request(e,a);const l=getNodeRequestOptions(o);const u=(l.protocol==="https:"?d:n).request;const m=o.signal;let c=null;const h=function abort(){let e=new AbortError("The user aborted a request.");p(e);if(o.body&&o.body instanceof i.Readable){o.body.destroy(e)}if(!c||!c.body)return;c.body.emit("error",e)};if(m&&m.aborted){h();return}const v=function abortAndFinalize(){h();finalize()};const g=u(l);let y;if(m){m.addEventListener("abort",v)}function finalize(){g.abort();if(m)m.removeEventListener("abort",v);clearTimeout(y)}if(o.timeout){g.once("socket",(function(e){y=setTimeout((function(){p(new FetchError(`network timeout at: ${o.url}`,"request-timeout"));finalize()}),o.timeout)}))}g.on("error",(function(e){p(new FetchError(`request to ${o.url} failed, reason: ${e.message}`,"system",e));finalize()}));g.on("response",(function(e){clearTimeout(y);const a=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const i=a.get("Location");let n=null;try{n=i===null?null:new A(i,o.url).toString()}catch(e){if(o.redirect!=="manual"){p(new FetchError(`uri requested responds with an invalid redirect URL: ${i}`,"invalid-redirect"));finalize();return}}switch(o.redirect){case"error":p(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect"));finalize();return;case"manual":if(n!==null){try{a.set("Location",n)}catch(e){p(e)}}break;case"follow":if(n===null){break}if(o.counter>=o.follow){p(new FetchError(`maximum redirect reached at: ${o.url}`,"max-redirect"));finalize();return}const i={headers:new Headers(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!B(o.url,n)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){i.headers.delete(e)}}if(e.statusCode!==303&&o.body&&getTotalBytes(o)===null){p(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&o.method==="POST"){i.method="GET";i.body=undefined;i.headers.delete("content-length")}r(fetch(new Request(n,i)));finalize();return}}e.once("end",(function(){if(m)m.removeEventListener("abort",v)}));let i=e.pipe(new x);const n={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:o.size,timeout:o.timeout,counter:o.counter};const d=a.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||d===null||e.statusCode===204||e.statusCode===304){c=new Response(i,n);r(c);return}const l={flush:s.Z_SYNC_FLUSH,finishFlush:s.Z_SYNC_FLUSH};if(d=="gzip"||d=="x-gzip"){i=i.pipe(s.createGunzip(l));c=new Response(i,n);r(c);return}if(d=="deflate"||d=="x-deflate"){const a=e.pipe(new x);a.once("data",(function(e){if((e[0]&15)===8){i=i.pipe(s.createInflate())}else{i=i.pipe(s.createInflateRaw())}c=new Response(i,n);r(c)}));return}if(d=="br"&&typeof s.createBrotliDecompress==="function"){i=i.pipe(s.createBrotliDecompress());c=new Response(i,n);r(c);return}c=new Response(i,n);r(c)}));writeToStream(g,o)}))}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=a=fetch;Object.defineProperty(a,"__esModule",{value:true});a.default=a;a.Headers=Headers;a.Request=Request;a.Response=Response;a.FetchError=FetchError},2299:(e,a,r)=>{"use strict";var i=r(4213);var n=r(8661);var p={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function findStatus(e){var a=0;var r=n.length-1;while(a<=r){var i=Math.floor((a+r)/2);var p=n[i];if(p[0][0]<=e&&p[0][1]>=e){return p}else if(p[0][0]>e){r=i-1}else{a=i+1}}return null}var o=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(o,"_").length}function mapChars(e,a,r){var i=false;var n="";var o=countSymbols(e);for(var d=0;d<o;++d){var s=e.codePointAt(d);var l=findStatus(s);switch(l[1]){case"disallowed":i=true;n+=String.fromCodePoint(s);break;case"ignored":break;case"mapped":n+=String.fromCodePoint.apply(String,l[2]);break;case"deviation":if(r===p.TRANSITIONAL){n+=String.fromCodePoint.apply(String,l[2])}else{n+=String.fromCodePoint(s)}break;case"valid":n+=String.fromCodePoint(s);break;case"disallowed_STD3_mapped":if(a){i=true;n+=String.fromCodePoint(s)}else{n+=String.fromCodePoint.apply(String,l[2])}break;case"disallowed_STD3_valid":if(a){i=true}n+=String.fromCodePoint(s);break}}return{string:n,error:i}}var d=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function validateLabel(e,a){if(e.substr(0,4)==="xn--"){e=i.toUnicode(e);a=p.NONTRANSITIONAL}var r=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(d)===0){r=true}var n=countSymbols(e);for(var o=0;o<n;++o){var s=findStatus(e.codePointAt(o));if(processing===p.TRANSITIONAL&&s[1]!=="valid"||processing===p.NONTRANSITIONAL&&s[1]!=="valid"&&s[1]!=="deviation"){r=true;break}}return{label:e,error:r}}function processing(e,a,r){var i=mapChars(e,a,r);i.string=normalize(i.string);var n=i.string.split(".");for(var p=0;p<n.length;++p){try{var o=validateLabel(n[p]);n[p]=o.label;i.error=i.error||o.error}catch(e){i.error=true}}return{string:n.join("."),error:i.error}}e.exports.toASCII=function(e,a,r,n){var p=processing(e,a,r);var o=p.string.split(".");o=o.map((function(e){try{return i.toASCII(e)}catch(a){p.error=true;return e}}));if(n){var d=o.slice(0,o.length-1).join(".").length;if(d.length>253||d.length===0){p.error=true}for(var s=0;s<o.length;++s){if(o.length>63||o.length===0){p.error=true;break}}}if(p.error)return null;return o.join(".")};e.exports.toUnicode=function(e,a){var r=processing(e,a,p.NONTRANSITIONAL);return{domain:r.string,error:r.error}};e.exports.PROCESSING_OPTIONS=p},5871:e=>{"use strict";var a={};e.exports=a;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,a){if(!a.unsigned){--e}const r=a.unsigned?0:-Math.pow(2,e);const i=Math.pow(2,e)-1;const n=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e);const p=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,o){if(!o)o={};let d=+e;if(o.enforceRange){if(!Number.isFinite(d)){throw new TypeError("Argument is not a finite number")}d=sign(d)*Math.floor(Math.abs(d));if(d<r||d>i){throw new TypeError("Argument is not in byte range")}return d}if(!isNaN(d)&&o.clamp){d=evenRound(d);if(d<r)d=r;if(d>i)d=i;return d}if(!Number.isFinite(d)||d===0){return 0}d=sign(d)*Math.floor(Math.abs(d));d=d%n;if(!a.unsigned&&d>=p){return d-n}else if(a.unsigned){if(d<0){d+=n}else if(d===-0){return 0}}return d}}a["void"]=function(){return undefined};a["boolean"]=function(e){return!!e};a["byte"]=createNumberConversion(8,{unsigned:false});a["octet"]=createNumberConversion(8,{unsigned:true});a["short"]=createNumberConversion(16,{unsigned:false});a["unsigned short"]=createNumberConversion(16,{unsigned:true});a["long"]=createNumberConversion(32,{unsigned:false});a["unsigned long"]=createNumberConversion(32,{unsigned:true});a["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});a["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});a["double"]=function(e){const a=+e;if(!Number.isFinite(a)){throw new TypeError("Argument is not a finite floating-point value")}return a};a["unrestricted double"]=function(e){const a=+e;if(isNaN(a)){throw new TypeError("Argument is NaN")}return a};a["float"]=a["double"];a["unrestricted float"]=a["unrestricted double"];a["DOMString"]=function(e,a){if(!a)a={};if(a.treatNullAsEmptyString&&e===null){return""}return String(e)};a["ByteString"]=function(e,a){const r=String(e);let i=undefined;for(let e=0;(i=r.codePointAt(e))!==undefined;++e){if(i>255){throw new TypeError("Argument is not a valid bytestring")}}return r};a["USVString"]=function(e){const a=String(e);const r=a.length;const i=[];for(let e=0;e<r;++e){const n=a.charCodeAt(e);if(n<55296||n>57343){i.push(String.fromCodePoint(n))}else if(56320<=n&&n<=57343){i.push(String.fromCodePoint(65533))}else{if(e===r-1){i.push(String.fromCodePoint(65533))}else{const r=a.charCodeAt(e+1);if(56320<=r&&r<=57343){const a=n&1023;const p=r&1023;i.push(String.fromCodePoint((2<<15)+(2<<9)*a+p));++e}else{i.push(String.fromCodePoint(65533))}}}}return i.join("")};a["Date"]=function(e,a){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};a["RegExp"]=function(e,a){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},8262:(e,a,r)=>{"use strict";const i=r(33);a.implementation=class URLImpl{constructor(e){const a=e[0];const r=e[1];let n=null;if(r!==undefined){n=i.basicURLParse(r);if(n==="failure"){throw new TypeError("Invalid base URL")}}const p=i.basicURLParse(a,{baseURL:n});if(p==="failure"){throw new TypeError("Invalid URL")}this._url=p}get href(){return i.serializeURL(this._url)}set href(e){const a=i.basicURLParse(e);if(a==="failure"){throw new TypeError("Invalid URL")}this._url=a}get origin(){return i.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){i.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}i.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}i.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return i.serializeHost(e.host)}return i.serializeHost(e.host)+":"+i.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}i.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return i.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}i.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return i.serializeInteger(this._url.port)}set port(e){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{i.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];i.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const a=this._url;if(e===""){a.query=null;return}const r=e[0]==="?"?e.substring(1):e;a.query="";i.basicURLParse(r,{url:a,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const a=e[0]==="#"?e.substring(1):e;this._url.fragment="";i.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},653:(e,a,r)=>{"use strict";const i=r(5871);const n=r(276);const p=r(8262);const o=n.implSymbol;function URL(a){if(!this||this[o]||!(this instanceof URL)){throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.")}const r=[];for(let e=0;e<arguments.length&&e<2;++e){r[e]=arguments[e]}r[0]=i["USVString"](r[0]);if(r[1]!==undefined){r[1]=i["USVString"](r[1])}e.exports.setup(this,r)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const a=[];for(let e=0;e<arguments.length&&e<0;++e){a[e]=arguments[e]}return this[o].toJSON.apply(this[o],a)};Object.defineProperty(URL.prototype,"href",{get(){return this[o].href},set(e){e=i["USVString"](e);this[o].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[o].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[o].protocol},set(e){e=i["USVString"](e);this[o].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[o].username},set(e){e=i["USVString"](e);this[o].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[o].password},set(e){e=i["USVString"](e);this[o].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[o].host},set(e){e=i["USVString"](e);this[o].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[o].hostname},set(e){e=i["USVString"](e);this[o].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[o].port},set(e){e=i["USVString"](e);this[o].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[o].pathname},set(e){e=i["USVString"](e);this[o].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[o].search},set(e){e=i["USVString"](e);this[o].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[o].hash},set(e){e=i["USVString"](e);this[o].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[o]instanceof p.implementation},create(e,a){let r=Object.create(URL.prototype);this.setup(r,e,a);return r},setup(e,a,r){if(!r)r={};r.wrapper=e;e[o]=new p.implementation(a,r);e[o][n.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},3323:(e,a,r)=>{"use strict";a.URL=r(653).interface;a.serializeURL=r(33).serializeURL;a.serializeURLOrigin=r(33).serializeURLOrigin;a.basicURLParse=r(33).basicURLParse;a.setTheUsername=r(33).setTheUsername;a.setThePassword=r(33).setThePassword;a.serializeHost=r(33).serializeHost;a.serializeInteger=r(33).serializeInteger;a.parseURL=r(33).parseURL},33:(e,a,r)=>{"use strict";const i=r(4213);const n=r(2299);const p={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const o=Symbol("failure");function countSymbols(e){return i.ucs2.decode(e).length}function at(e,a){const r=e[a];return isNaN(r)?undefined:String.fromCodePoint(r)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,a){return isASCIIAlpha(e)&&(a===58||a===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function isSpecialScheme(e){return p[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return p[e]}function percentEncode(e){let a=e.toString(16).toUpperCase();if(a.length===1){a="0"+a}return"%"+a}function utf8PercentEncode(e){const a=new Buffer(e);let r="";for(let e=0;e<a.length;++e){r+=percentEncode(a[e])}return r}function utf8PercentDecode(e){const a=new Buffer(e);const r=[];for(let e=0;e<a.length;++e){if(a[e]!==37){r.push(a[e])}else if(a[e]===37&&isASCIIHex(a[e+1])&&isASCIIHex(a[e+2])){r.push(parseInt(a.slice(e+1,e+3).toString(),16));e+=2}else{r.push(a[e])}}return new Buffer(r).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const d=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||d.has(e)}const s=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||s.has(e)}function percentEncodeChar(e,a){const r=String.fromCodePoint(e);if(a(e)){return utf8PercentEncode(r)}return r}function parseIPv4Number(e){let a=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);a=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);a=8}if(e===""){return 0}const r=a===10?/[^0-9]/:a===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(r.test(e)){return o}return parseInt(e,a)}function parseIPv4(e){const a=e.split(".");if(a[a.length-1]===""){if(a.length>1){a.pop()}}if(a.length>4){return e}const r=[];for(const i of a){if(i===""){return e}const a=parseIPv4Number(i);if(a===o){return e}r.push(a)}for(let e=0;e<r.length-1;++e){if(r[e]>255){return o}}if(r[r.length-1]>=Math.pow(256,5-r.length)){return o}let i=r.pop();let n=0;for(const e of r){i+=e*Math.pow(256,3-n);++n}return i}function serializeIPv4(e){let a="";let r=e;for(let e=1;e<=4;++e){a=String(r%256)+a;if(e!==4){a="."+a}r=Math.floor(r/256)}return a}function parseIPv6(e){const a=[0,0,0,0,0,0,0,0];let r=0;let n=null;let p=0;e=i.ucs2.decode(e);if(e[p]===58){if(e[p+1]!==58){return o}p+=2;++r;n=r}while(p<e.length){if(r===8){return o}if(e[p]===58){if(n!==null){return o}++p;++r;n=r;continue}let i=0;let d=0;while(d<4&&isASCIIHex(e[p])){i=i*16+parseInt(at(e,p),16);++p;++d}if(e[p]===46){if(d===0){return o}p-=d;if(r>6){return o}let i=0;while(e[p]!==undefined){let n=null;if(i>0){if(e[p]===46&&i<4){++p}else{return o}}if(!isASCIIDigit(e[p])){return o}while(isASCIIDigit(e[p])){const a=parseInt(at(e,p));if(n===null){n=a}else if(n===0){return o}else{n=n*10+a}if(n>255){return o}++p}a[r]=a[r]*256+n;++i;if(i===2||i===4){++r}}if(i!==4){return o}break}else if(e[p]===58){++p;if(e[p]===undefined){return o}}else if(e[p]!==undefined){return o}a[r]=i;++r}if(n!==null){let e=r-n;r=7;while(r!==0&&e>0){const i=a[n+e-1];a[n+e-1]=a[r];a[r]=i;--r;--e}}else if(n===null&&r!==8){return o}return a}function serializeIPv6(e){let a="";const r=findLongestZeroSequence(e);const i=r.idx;let n=false;for(let r=0;r<=7;++r){if(n&&e[r]===0){continue}else if(n){n=false}if(i===r){const e=r===0?"::":":";a+=e;n=true;continue}a+=e[r].toString(16);if(r!==7){a+=":"}}return a}function parseHost(e,a){if(e[0]==="["){if(e[e.length-1]!=="]"){return o}return parseIPv6(e.substring(1,e.length-1))}if(!a){return parseOpaqueHost(e)}const r=utf8PercentDecode(e);const i=n.toASCII(r,false,n.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(i===null){return o}if(containsForbiddenHostCodePoint(i)){return o}const p=parseIPv4(i);if(typeof p==="number"||p===o){return p}return i}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return o}let a="";const r=i.ucs2.decode(e);for(let e=0;e<r.length;++e){a+=percentEncodeChar(r[e],isC0ControlPercentEncode)}return a}function findLongestZeroSequence(e){let a=null;let r=1;let i=null;let n=0;for(let p=0;p<e.length;++p){if(e[p]!==0){if(n>r){a=i;r=n}i=null;n=0}else{if(i===null){i=p}++n}}if(n>r){a=i;r=n}return{idx:a,len:r}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function shortenPath(e){const a=e.path;if(a.length===0){return}if(e.scheme==="file"&&a.length===1&&isNormalizedWindowsDriveLetter(a[0])){return}a.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,a,r,n,p){this.pointer=0;this.input=e;this.base=a||null;this.encodingOverride=r||"utf-8";this.stateOverride=p;this.url=n;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const d=trimTabAndNewline(this.input);if(d!==this.input){this.parseError=true}this.input=d;this.state=p||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=i.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const a=isNaN(e)?undefined:String.fromCodePoint(e);const r=this["parse "+this.state](e,a);if(!r){break}else if(r===o){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,a){if(isASCIIAlpha(e)){this.buffer+=a.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return o}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,a){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=a.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return o}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return o}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,a){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const r=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=r}else{this.url.username+=r}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return o}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=a}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,a){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return o}const e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return o}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=a}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,a){if(isASCIIDigit(e)){this.buffer+=a}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return o}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return o}return true};const l=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!l.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,a){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===o){return o}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=a}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,a){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e){if(a[e]<33||a[e]>126||a[e]===34||a[e]===35||a[e]===60||a[e]===62){this.url.query+=percentEncode(a[e])}else{this.url.query+=String.fromCodePoint(a[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=a}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,a){let r=e.scheme+":";if(e.host!==null){r+="//";if(e.username!==""||e.password!==""){r+=e.username;if(e.password!==""){r+=":"+e.password}r+="@"}r+=serializeHost(e.host);if(e.port!==null){r+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){r+="//"}if(e.cannotBeABaseURL){r+=e.path[0]}else{for(const a of e.path){r+="/"+a}}if(e.query!==null){r+="?"+e.query}if(!a&&e.fragment!==null){r+="#"+e.fragment}return r}function serializeOrigin(e){let a=e.scheme+"://";a+=serializeHost(e.host);if(e.port!==null){a+=":"+e.port}return a}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,a){if(a===undefined){a={}}const r=new URLStateMachine(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);if(r.failure){return"failure"}return r.url};e.exports.setTheUsername=function(e,a){e.username="";const r=i.ucs2.decode(a);for(let a=0;a<r.length;++a){e.username+=percentEncodeChar(r[a],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,a){e.password="";const r=i.ucs2.decode(a);for(let a=0;a<r.length;++a){e.password+=percentEncodeChar(r[a],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(a,r){if(r===undefined){r={}}return e.exports.basicURLParse(a,{baseURL:r.baseURL,encodingOverride:r.encodingOverride})}},276:e=>{"use strict";e.exports.mixin=function mixin(e,a){const r=Object.getOwnPropertyNames(a);for(let i=0;i<r.length;++i){Object.defineProperty(e,r[i],Object.getOwnPropertyDescriptor(a,r[i]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}},1223:(e,a,r)=>{var i=r(2940);e.exports=i(once);e.exports.strict=i(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var a=e.name||"Function wrapped with `once`";f.onceError=a+" shouldn't be called more than once";f.called=false;return f}},8714:e=>{"use strict";function posix(e){return e.charAt(0)==="/"}function win32(e){var a=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;var r=a.exec(e);var i=r[1]||"";var n=Boolean(i&&i.charAt(1)!==":");return Boolean(r[2]||n)}e.exports=process.platform==="win32"?win32:posix;e.exports.posix=posix;e.exports.win32=win32},4833:e=>{e.exports=Pend;function Pend(){this.pending=0;this.max=Infinity;this.listeners=[];this.waiting=[];this.error=null}Pend.prototype.go=function(e){if(this.pending<this.max){pendGo(this,e)}else{this.waiting.push(e)}};Pend.prototype.wait=function(e){if(this.pending===0){e(this.error)}else{this.listeners.push(e)}};Pend.prototype.hold=function(){return pendHold(this)};function pendHold(e){e.pending+=1;var a=false;return onCb;function onCb(r){if(a)throw new Error("callback called twice");a=true;e.error=e.error||r;e.pending-=1;if(e.waiting.length>0&&e.pending<e.max){pendGo(e,e.waiting.shift())}else if(e.pending===0){var i=e.listeners;e.listeners=[];i.forEach(cbListener)}}function cbListener(a){a(e.error)}}function pendGo(e,a){a(pendHold(e))}},1933:(e,a,r)=>{var i=r(8068);Object.keys(i).forEach((function(e){a[e]=i[e]}));var n=r(9979);Object.keys(n).forEach((function(e){a[e]=n[e]}))},9979:(e,a,r)=>{var i=r(6463);var n=r(2958);a.build=build;function ISODateString(e){function pad(e){return e<10?"0"+e:e}return e.getUTCFullYear()+"-"+pad(e.getUTCMonth()+1)+"-"+pad(e.getUTCDate())+"T"+pad(e.getUTCHours())+":"+pad(e.getUTCMinutes())+":"+pad(e.getUTCSeconds())+"Z"}var p=Object.prototype.toString;function type(e){var a=p.call(e).match(/\[object (.*)\]/);return a?a[1]:a}function build(e,a){var r={version:"1.0",encoding:"UTF-8"};var i={pubid:"-//Apple//DTD PLIST 1.0//EN",sysid:"http://www.apple.com/DTDs/PropertyList-1.0.dtd"};var p=n.create("plist");p.dec(r.version,r.encoding,r.standalone);p.dtd(i.pubid,i.sysid);p.att("version","1.0");walk_obj(e,p);if(!a)a={};a.pretty=a.pretty!==false;return p.end(a)}function walk_obj(e,a){var r,n,p;var o=type(e);if("Undefined"==o){return}else if(Array.isArray(e)){a=a.ele("array");for(n=0;n<e.length;n++){walk_obj(e[n],a)}}else if(Buffer.isBuffer(e)){a.ele("data").raw(e.toString("base64"))}else if("Object"==o){a=a.ele("dict");for(p in e){if(e.hasOwnProperty(p)){a.ele("key").txt(p);walk_obj(e[p],a)}}}else if("Number"==o){r=e%1===0?"integer":"real";a.ele(r).txt(e.toString())}else if("Date"==o){a.ele("date").txt(ISODateString(new Date(e)))}else if("Boolean"==o){a.ele(e?"true":"false")}else if("String"==o){a.ele("string").txt(e)}else if("ArrayBuffer"==o){a.ele("data").raw(i.fromByteArray(e))}else if(e&&e.buffer&&"ArrayBuffer"==type(e.buffer)){a.ele("data").raw(i.fromByteArray(new Uint8Array(e.buffer),a))}}},8068:(e,a,r)=>{var i=r(4399).a;a.parse=parse;var n=3;var p=4;var o=8;function shouldIgnoreNode(e){return e.nodeType===n||e.nodeType===o||e.nodeType===p}function isEmptyNode(e){if(!e.childNodes||e.childNodes.length===0){return true}else{return false}}function invariant(e,a){if(!e){throw new Error(a)}}function parse(e){var a=(new i).parseFromString(e);invariant(a.documentElement.nodeName==="plist","malformed document. First element should be <plist>");var r=parsePlistXML(a.documentElement);if(r.length==1)r=r[0];return r}function parsePlistXML(e){var a,r,i,o,d,s,l,u;if(!e)return null;if(e.nodeName==="plist"){d=[];if(isEmptyNode(e)){return d}for(a=0;a<e.childNodes.length;a++){if(!shouldIgnoreNode(e.childNodes[a])){d.push(parsePlistXML(e.childNodes[a]))}}return d}else if(e.nodeName==="dict"){r={};i=null;l=0;if(isEmptyNode(e)){return r}for(a=0;a<e.childNodes.length;a++){if(shouldIgnoreNode(e.childNodes[a]))continue;if(l%2===0){invariant(e.childNodes[a].nodeName==="key","Missing key while parsing <dict/>.");i=parsePlistXML(e.childNodes[a])}else{invariant(e.childNodes[a].nodeName!=="key",'Unexpected key "'+parsePlistXML(e.childNodes[a])+'" while parsing <dict/>.');r[i]=parsePlistXML(e.childNodes[a])}l+=1}if(l%2===1){throw new Error('Missing value for "'+i+'" while parsing <dict/>')}return r}else if(e.nodeName==="array"){d=[];if(isEmptyNode(e)){return d}for(a=0;a<e.childNodes.length;a++){if(!shouldIgnoreNode(e.childNodes[a])){s=parsePlistXML(e.childNodes[a]);if(null!=s)d.push(s)}}return d}else if(e.nodeName==="#text"){}else if(e.nodeName==="key"){if(isEmptyNode(e)){return""}return e.childNodes[0].nodeValue}else if(e.nodeName==="string"){s="";if(isEmptyNode(e)){return s}for(a=0;a<e.childNodes.length;a++){var u=e.childNodes[a].nodeType;if(u===n||u===p){s+=e.childNodes[a].nodeValue}}return s}else if(e.nodeName==="integer"){invariant(!isEmptyNode(e),'Cannot parse "" as integer.');return parseInt(e.childNodes[0].nodeValue,10)}else if(e.nodeName==="real"){invariant(!isEmptyNode(e),'Cannot parse "" as real.');s="";for(a=0;a<e.childNodes.length;a++){if(e.childNodes[a].nodeType===n){s+=e.childNodes[a].nodeValue}}return parseFloat(s)}else if(e.nodeName==="data"){s="";if(isEmptyNode(e)){return Buffer.from(s,"base64")}for(a=0;a<e.childNodes.length;a++){if(e.childNodes[a].nodeType===n){s+=e.childNodes[a].nodeValue.replace(/\s+/g,"")}}return Buffer.from(s,"base64")}else if(e.nodeName==="date"){invariant(!isEmptyNode(e),'Cannot parse "" as Date.');return new Date(e.childNodes[0].nodeValue)}else if(e.nodeName==="true"){return true}else if(e.nodeName==="false"){return false}}},4399:(e,a,r)=>{var i;function DOMParser(e){this.options=e||{locator:{}}}DOMParser.prototype.parseFromString=function(e,a){var r=this.options;var i=new o;var p=r.domBuilder||new DOMHandler;var d=r.errorHandler;var s=r.locator;var l=r.xmlns||{};var u=/\/x?html?$/.test(a);var m=u?n.entityMap:{lt:"<",gt:">",amp:"&",quot:'"',apos:"'"};if(s){p.setDocumentLocator(s)}i.errorHandler=buildErrorHandler(d,p,s);i.domBuilder=r.domBuilder||p;if(u){l[""]="http://www.w3.org/1999/xhtml"}l.xml=l.xml||"http://www.w3.org/XML/1998/namespace";if(e&&typeof e==="string"){i.parse(e,l,m)}else{i.errorHandler.error("invalid doc source")}return p.doc};function buildErrorHandler(e,a,r){if(!e){if(a instanceof DOMHandler){return a}e=a}var i={};var n=e instanceof Function;r=r||{};function build(a){var p=e[a];if(!p&&n){p=e.length==2?function(r){e(a,r)}:e}i[a]=p&&function(e){p("[xmldom "+a+"]\t"+e+_locator(r))}||function(){}}build("warning");build("error");build("fatalError");return i}function DOMHandler(){this.cdata=false}function position(e,a){a.lineNumber=e.lineNumber;a.columnNumber=e.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new s).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(e,a,r,i){var n=this.doc;var p=n.createElementNS(e,r||a);var o=i.length;appendElement(this,p);this.currentElement=p;this.locator&&position(this.locator,p);for(var d=0;d<o;d++){var e=i.getURI(d);var s=i.getValue(d);var r=i.getQName(d);var l=n.createAttributeNS(e,r);this.locator&&position(i.getLocator(d),l);l.value=l.nodeValue=s;p.setAttributeNode(l)}},endElement:function(e,a,r){var i=this.currentElement;var n=i.tagName;this.currentElement=i.parentNode},startPrefixMapping:function(e,a){},endPrefixMapping:function(e){},processingInstruction:function(e,a){var r=this.doc.createProcessingInstruction(e,a);this.locator&&position(this.locator,r);appendElement(this,r)},ignorableWhitespace:function(e,a,r){},characters:function(e,a,r){e=_toString.apply(this,arguments);if(e){if(this.cdata){var i=this.doc.createCDATASection(e)}else{var i=this.doc.createTextNode(e)}if(this.currentElement){this.currentElement.appendChild(i)}else if(/^\s*$/.test(e)){this.doc.appendChild(i)}this.locator&&position(this.locator,i)}},skippedEntity:function(e){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(e){if(this.locator=e){e.lineNumber=0}},comment:function(e,a,r){e=_toString.apply(this,arguments);var i=this.doc.createComment(e);this.locator&&position(this.locator,i);appendElement(this,i)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(e,a,r){var i=this.doc.implementation;if(i&&i.createDocumentType){var n=i.createDocumentType(e,a,r);this.locator&&position(this.locator,n);appendElement(this,n)}},warning:function(e){console.warn("[xmldom warning]\t"+e,_locator(this.locator))},error:function(e){console.error("[xmldom error]\t"+e,_locator(this.locator))},fatalError:function(e){throw new d(e,this.locator)}};function _locator(e){if(e){return"\n@"+(e.systemId||"")+"#[line:"+e.lineNumber+",col:"+e.columnNumber+"]"}}function _toString(e,a,r){if(typeof e=="string"){return e.substr(a,r)}else{if(e.length>=a+r||a){return new java.lang.String(e,a,r)+""}return e}}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,(function(e){DOMHandler.prototype[e]=function(){return null}}));function appendElement(e,a){if(!e.currentElement){e.doc.appendChild(a)}else{e.currentElement.appendChild(a)}}var n=r(2975);var p=r(7860);var o=p.XMLReader;var d=p.ParseError;var s=r(7009).DOMImplementation;r(7009);a.a=DOMParser;i=DOMHandler},7009:(e,a)=>{var r;function copy(e,a){for(var r in e){a[r]=e[r]}}function _extends(e,a){var r=e.prototype;if(!(r instanceof a)){function t(){}t.prototype=a.prototype;t=new t;copy(r,t);e.prototype=r=t}if(r.constructor!=e){if(typeof e!="function"){console.error("unknow Class:"+e)}r.constructor=e}}var i="http://www.w3.org/1999/xhtml";var n={};var p=n.ELEMENT_NODE=1;var o=n.ATTRIBUTE_NODE=2;var d=n.TEXT_NODE=3;var s=n.CDATA_SECTION_NODE=4;var l=n.ENTITY_REFERENCE_NODE=5;var u=n.ENTITY_NODE=6;var m=n.PROCESSING_INSTRUCTION_NODE=7;var c=n.COMMENT_NODE=8;var h=n.DOCUMENT_NODE=9;var v=n.DOCUMENT_TYPE_NODE=10;var g=n.DOCUMENT_FRAGMENT_NODE=11;var y=n.NOTATION_NODE=12;var w={};var b={};var S=w.INDEX_SIZE_ERR=(b[1]="Index size error",1);var _=w.DOMSTRING_SIZE_ERR=(b[2]="DOMString size error",2);var N=w.HIERARCHY_REQUEST_ERR=(b[3]="Hierarchy request error",3);var E=w.WRONG_DOCUMENT_ERR=(b[4]="Wrong document",4);var D=w.INVALID_CHARACTER_ERR=(b[5]="Invalid character",5);var C=w.NO_DATA_ALLOWED_ERR=(b[6]="No data allowed",6);var I=w.NO_MODIFICATION_ALLOWED_ERR=(b[7]="No modification allowed",7);var T=w.NOT_FOUND_ERR=(b[8]="Not found",8);var A=w.NOT_SUPPORTED_ERR=(b[9]="Not supported",9);var x=w.INUSE_ATTRIBUTE_ERR=(b[10]="Attribute in use",10);var B=w.INVALID_STATE_ERR=(b[11]="Invalid state",11);var O=w.SYNTAX_ERR=(b[12]="Syntax error",12);var L=w.INVALID_MODIFICATION_ERR=(b[13]="Invalid modification",13);var M=w.NAMESPACE_ERR=(b[14]="Invalid namespace",14);var R=w.INVALID_ACCESS_ERR=(b[15]="Invalid access",15);function DOMException(e,a){if(a instanceof Error){var r=a}else{r=this;Error.call(this,b[e]);this.message=b[e];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}r.code=e;if(a)this.message=this.message+": "+a;return r}DOMException.prototype=Error.prototype;copy(w,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(e){return this[e]||null},toString:function(e,a){for(var r=[],i=0;i<this.length;i++){serializeToString(this[i],r,e,a)}return r.join("")}};function LiveNodeList(e,a){this._node=e;this._refresh=a;_updateLiveList(this)}function _updateLiveList(e){var a=e._node._inc||e._node.ownerDocument._inc;if(e._inc!=a){var r=e._refresh(e._node);__set__(e,"length",r.length);copy(r,e);e._inc=a}}LiveNodeList.prototype.item=function(e){_updateLiveList(this);return this[e]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(e,a){var r=e.length;while(r--){if(e[r]===a){return r}}}function _addNamedNode(e,a,r,i){if(i){a[_findNodeIndex(a,i)]=r}else{a[a.length++]=r}if(e){r.ownerElement=e;var n=e.ownerDocument;if(n){i&&_onRemoveAttribute(n,e,i);_onAddAttribute(n,e,r)}}}function _removeNamedNode(e,a,r){var i=_findNodeIndex(a,r);if(i>=0){var n=a.length-1;while(i<n){a[i]=a[++i]}a.length=n;if(e){var p=e.ownerDocument;if(p){_onRemoveAttribute(p,e,r);r.ownerElement=null}}}else{throw DOMException(T,new Error(e.tagName+"@"+r))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(e){var a=this.length;while(a--){var r=this[a];if(r.nodeName==e){return r}}},setNamedItem:function(e){var a=e.ownerElement;if(a&&a!=this._ownerElement){throw new DOMException(x)}var r=this.getNamedItem(e.nodeName);_addNamedNode(this._ownerElement,this,e,r);return r},setNamedItemNS:function(e){var a=e.ownerElement,r;if(a&&a!=this._ownerElement){throw new DOMException(x)}r=this.getNamedItemNS(e.namespaceURI,e.localName);_addNamedNode(this._ownerElement,this,e,r);return r},removeNamedItem:function(e){var a=this.getNamedItem(e);_removeNamedNode(this._ownerElement,this,a);return a},removeNamedItemNS:function(e,a){var r=this.getNamedItemNS(e,a);_removeNamedNode(this._ownerElement,this,r);return r},getNamedItemNS:function(e,a){var r=this.length;while(r--){var i=this[r];if(i.localName==a&&i.namespaceURI==e){return i}}return null}};function DOMImplementation(e){this._features={};if(e){for(var a in e){this._features=e[a]}}}DOMImplementation.prototype={hasFeature:function(e,a){var r=this._features[e.toLowerCase()];if(r&&(!a||a in r)){return true}else{return false}},createDocument:function(e,a,r){var i=new Document;i.implementation=this;i.childNodes=new NodeList;i.doctype=r;if(r){i.appendChild(r)}if(a){var n=i.createElementNS(e,a);i.appendChild(n)}return i},createDocumentType:function(e,a,r){var i=new DocumentType;i.name=e;i.nodeName=e;i.publicId=a;i.systemId=r;return i}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(e,a){return _insertBefore(this,e,a)},replaceChild:function(e,a){this.insertBefore(e,a);if(a){this.removeChild(a)}},removeChild:function(e){return _removeChild(this,e)},appendChild:function(e){return this.insertBefore(e,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(e){return cloneNode(this.ownerDocument||this,this,e)},normalize:function(){var e=this.firstChild;while(e){var a=e.nextSibling;if(a&&a.nodeType==d&&e.nodeType==d){this.removeChild(a);e.appendData(a.data)}else{e.normalize();e=a}}},isSupported:function(e,a){return this.ownerDocument.implementation.hasFeature(e,a)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(e){var a=this;while(a){var r=a._nsMap;if(r){for(var i in r){if(r[i]==e){return i}}}a=a.nodeType==o?a.ownerDocument:a.parentNode}return null},lookupNamespaceURI:function(e){var a=this;while(a){var r=a._nsMap;if(r){if(e in r){return r[e]}}a=a.nodeType==o?a.ownerDocument:a.parentNode}return null},isDefaultNamespace:function(e){var a=this.lookupPrefix(e);return a==null}};function _xmlEncoder(e){return e=="<"&&"&lt;"||e==">"&&"&gt;"||e=="&"&&"&amp;"||e=='"'&&"&quot;"||"&#"+e.charCodeAt()+";"}copy(n,Node);copy(n,Node.prototype);function _visitNode(e,a){if(a(e)){return true}if(e=e.firstChild){do{if(_visitNode(e,a)){return true}}while(e=e.nextSibling)}}function Document(){}function _onAddAttribute(e,a,r){e&&e._inc++;var i=r.namespaceURI;if(i=="http://www.w3.org/2000/xmlns/"){a._nsMap[r.prefix?r.localName:""]=r.value}}function _onRemoveAttribute(e,a,r,i){e&&e._inc++;var n=r.namespaceURI;if(n=="http://www.w3.org/2000/xmlns/"){delete a._nsMap[r.prefix?r.localName:""]}}function _onUpdateChild(e,a,r){if(e&&e._inc){e._inc++;var i=a.childNodes;if(r){i[i.length++]=r}else{var n=a.firstChild;var p=0;while(n){i[p++]=n;n=n.nextSibling}i.length=p}}}function _removeChild(e,a){var r=a.previousSibling;var i=a.nextSibling;if(r){r.nextSibling=i}else{e.firstChild=i}if(i){i.previousSibling=r}else{e.lastChild=r}_onUpdateChild(e.ownerDocument,e);return a}function _insertBefore(e,a,r){var i=a.parentNode;if(i){i.removeChild(a)}if(a.nodeType===g){var n=a.firstChild;if(n==null){return a}var p=a.lastChild}else{n=p=a}var o=r?r.previousSibling:e.lastChild;n.previousSibling=o;p.nextSibling=r;if(o){o.nextSibling=n}else{e.firstChild=n}if(r==null){e.lastChild=p}else{r.previousSibling=p}do{n.parentNode=e}while(n!==p&&(n=n.nextSibling));_onUpdateChild(e.ownerDocument||e,e);if(a.nodeType==g){a.firstChild=a.lastChild=null}return a}function _appendSingleChild(e,a){var r=a.parentNode;if(r){var i=e.lastChild;r.removeChild(a);var i=e.lastChild}var i=e.lastChild;a.parentNode=e;a.previousSibling=i;a.nextSibling=null;if(i){i.nextSibling=a}else{e.firstChild=a}e.lastChild=a;_onUpdateChild(e.ownerDocument,e,a);return a}Document.prototype={nodeName:"#document",nodeType:h,doctype:null,documentElement:null,_inc:1,insertBefore:function(e,a){if(e.nodeType==g){var r=e.firstChild;while(r){var i=r.nextSibling;this.insertBefore(r,a);r=i}return e}if(this.documentElement==null&&e.nodeType==p){this.documentElement=e}return _insertBefore(this,e,a),e.ownerDocument=this,e},removeChild:function(e){if(this.documentElement==e){this.documentElement=null}return _removeChild(this,e)},importNode:function(e,a){return importNode(this,e,a)},getElementById:function(e){var a=null;_visitNode(this.documentElement,(function(r){if(r.nodeType==p){if(r.getAttribute("id")==e){a=r;return true}}}));return a},getElementsByClassName:function(e){var a=new RegExp("(^|\\s)"+e+"(\\s|$)");return new LiveNodeList(this,(function(e){var r=[];_visitNode(e.documentElement,(function(i){if(i!==e&&i.nodeType==p){if(a.test(i.getAttribute("class"))){r.push(i)}}}));return r}))},createElement:function(e){var a=new Element;a.ownerDocument=this;a.nodeName=e;a.tagName=e;a.childNodes=new NodeList;var r=a.attributes=new NamedNodeMap;r._ownerElement=a;return a},createDocumentFragment:function(){var e=new DocumentFragment;e.ownerDocument=this;e.childNodes=new NodeList;return e},createTextNode:function(e){var a=new Text;a.ownerDocument=this;a.appendData(e);return a},createComment:function(e){var a=new Comment;a.ownerDocument=this;a.appendData(e);return a},createCDATASection:function(e){var a=new CDATASection;a.ownerDocument=this;a.appendData(e);return a},createProcessingInstruction:function(e,a){var r=new ProcessingInstruction;r.ownerDocument=this;r.tagName=r.target=e;r.nodeValue=r.data=a;return r},createAttribute:function(e){var a=new Attr;a.ownerDocument=this;a.name=e;a.nodeName=e;a.localName=e;a.specified=true;return a},createEntityReference:function(e){var a=new EntityReference;a.ownerDocument=this;a.nodeName=e;return a},createElementNS:function(e,a){var r=new Element;var i=a.split(":");var n=r.attributes=new NamedNodeMap;r.childNodes=new NodeList;r.ownerDocument=this;r.nodeName=a;r.tagName=a;r.namespaceURI=e;if(i.length==2){r.prefix=i[0];r.localName=i[1]}else{r.localName=a}n._ownerElement=r;return r},createAttributeNS:function(e,a){var r=new Attr;var i=a.split(":");r.ownerDocument=this;r.nodeName=a;r.name=a;r.namespaceURI=e;r.specified=true;if(i.length==2){r.prefix=i[0];r.localName=i[1]}else{r.localName=a}return r}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:p,hasAttribute:function(e){return this.getAttributeNode(e)!=null},getAttribute:function(e){var a=this.getAttributeNode(e);return a&&a.value||""},getAttributeNode:function(e){return this.attributes.getNamedItem(e)},setAttribute:function(e,a){var r=this.ownerDocument.createAttribute(e);r.value=r.nodeValue=""+a;this.setAttributeNode(r)},removeAttribute:function(e){var a=this.getAttributeNode(e);a&&this.removeAttributeNode(a)},appendChild:function(e){if(e.nodeType===g){return this.insertBefore(e,null)}else{return _appendSingleChild(this,e)}},setAttributeNode:function(e){return this.attributes.setNamedItem(e)},setAttributeNodeNS:function(e){return this.attributes.setNamedItemNS(e)},removeAttributeNode:function(e){return this.attributes.removeNamedItem(e.nodeName)},removeAttributeNS:function(e,a){var r=this.getAttributeNodeNS(e,a);r&&this.removeAttributeNode(r)},hasAttributeNS:function(e,a){return this.getAttributeNodeNS(e,a)!=null},getAttributeNS:function(e,a){var r=this.getAttributeNodeNS(e,a);return r&&r.value||""},setAttributeNS:function(e,a,r){var i=this.ownerDocument.createAttributeNS(e,a);i.value=i.nodeValue=""+r;this.setAttributeNode(i)},getAttributeNodeNS:function(e,a){return this.attributes.getNamedItemNS(e,a)},getElementsByTagName:function(e){return new LiveNodeList(this,(function(a){var r=[];_visitNode(a,(function(i){if(i!==a&&i.nodeType==p&&(e==="*"||i.tagName==e)){r.push(i)}}));return r}))},getElementsByTagNameNS:function(e,a){return new LiveNodeList(this,(function(r){var i=[];_visitNode(r,(function(n){if(n!==r&&n.nodeType===p&&(e==="*"||n.namespaceURI===e)&&(a==="*"||n.localName==a)){i.push(n)}}));return i}))}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=o;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:"",substringData:function(e,a){return this.data.substring(e,e+a)},appendData:function(e){e=this.data+e;this.nodeValue=this.data=e;this.length=e.length},insertData:function(e,a){this.replaceData(e,0,a)},appendChild:function(e){throw new Error(b[N])},deleteData:function(e,a){this.replaceData(e,a,"")},replaceData:function(e,a,r){var i=this.data.substring(0,e);var n=this.data.substring(e+a);r=i+r+n;this.nodeValue=this.data=r;this.length=r.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:"#text",nodeType:d,splitText:function(e){var a=this.data;var r=a.substring(e);a=a.substring(0,e);this.data=this.nodeValue=a;this.length=a.length;var i=this.ownerDocument.createTextNode(r);if(this.parentNode){this.parentNode.insertBefore(i,this.nextSibling)}return i}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:"#comment",nodeType:c};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:"#cdata-section",nodeType:s};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=v;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=y;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=u;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=l;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName="#document-fragment";DocumentFragment.prototype.nodeType=g;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=m;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(e,a,r){return nodeSerializeToString.call(e,a,r)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(e,a){var r=[];var i=this.nodeType==9&&this.documentElement||this;var n=i.prefix;var p=i.namespaceURI;if(p&&n==null){var n=i.lookupPrefix(p);if(n==null){var o=[{namespace:p,prefix:null}]}}serializeToString(this,r,e,a,o);return r.join("")}function needNamespaceDefine(e,a,r){var i=e.prefix||"";var n=e.namespaceURI;if(!i&&!n){return false}if(i==="xml"&&n==="http://www.w3.org/XML/1998/namespace"||n=="http://www.w3.org/2000/xmlns/"){return false}var p=r.length;while(p--){var o=r[p];if(o.prefix==i){return o.namespace!=n}}return true}function serializeToString(e,a,r,n,u){if(n){e=n(e);if(e){if(typeof e=="string"){a.push(e);return}}else{return}}switch(e.nodeType){case p:if(!u)u=[];var y=u.length;var w=e.attributes;var b=w.length;var S=e.firstChild;var _=e.tagName;r=i===e.namespaceURI||r;a.push("<",_);for(var N=0;N<b;N++){var E=w.item(N);if(E.prefix=="xmlns"){u.push({prefix:E.localName,namespace:E.value})}else if(E.nodeName=="xmlns"){u.push({prefix:"",namespace:E.value})}}for(var N=0;N<b;N++){var E=w.item(N);if(needNamespaceDefine(E,r,u)){var D=E.prefix||"";var C=E.namespaceURI;var I=D?" xmlns:"+D:" xmlns";a.push(I,'="',C,'"');u.push({prefix:D,namespace:C})}serializeToString(E,a,r,n,u)}if(needNamespaceDefine(e,r,u)){var D=e.prefix||"";var C=e.namespaceURI;if(C){var I=D?" xmlns:"+D:" xmlns";a.push(I,'="',C,'"');u.push({prefix:D,namespace:C})}}if(S||r&&!/^(?:meta|link|img|br|hr|input)$/i.test(_)){a.push(">");if(r&&/^script$/i.test(_)){while(S){if(S.data){a.push(S.data)}else{serializeToString(S,a,r,n,u)}S=S.nextSibling}}else{while(S){serializeToString(S,a,r,n,u);S=S.nextSibling}}a.push("</",_,">")}else{a.push("/>")}return;case h:case g:var S=e.firstChild;while(S){serializeToString(S,a,r,n,u);S=S.nextSibling}return;case o:return a.push(" ",e.name,'="',e.value.replace(/[<&"]/g,_xmlEncoder),'"');case d:return a.push(e.data.replace(/[<&]/g,_xmlEncoder).replace(/]]>/g,"]]&gt;"));case s:return a.push("<![CDATA[",e.data,"]]>");case c:return a.push("\x3c!--",e.data,"--\x3e");case v:var T=e.publicId;var A=e.systemId;a.push("<!DOCTYPE ",e.name);if(T){a.push(" PUBLIC ",T);if(A&&A!="."){a.push(" ",A)}a.push(">")}else if(A&&A!="."){a.push(" SYSTEM ",A,">")}else{var x=e.internalSubset;if(x){a.push(" [",x,"]")}a.push(">")}return;case m:return a.push("<?",e.target," ",e.data,"?>");case l:return a.push("&",e.nodeName,";");default:a.push("??",e.nodeName)}}function importNode(e,a,r){var i;switch(a.nodeType){case p:i=a.cloneNode(false);i.ownerDocument=e;case g:break;case o:r=true;break}if(!i){i=a.cloneNode(false)}i.ownerDocument=e;i.parentNode=null;if(r){var n=a.firstChild;while(n){i.appendChild(importNode(e,n,r));n=n.nextSibling}}return i}function cloneNode(e,a,r){var i=new a.constructor;for(var n in a){var d=a[n];if(typeof d!="object"){if(d!=i[n]){i[n]=d}}}if(a.childNodes){i.childNodes=new NodeList}i.ownerDocument=e;switch(i.nodeType){case p:var s=a.attributes;var l=i.attributes=new NamedNodeMap;var u=s.length;l._ownerElement=i;for(var m=0;m<u;m++){i.setAttributeNode(cloneNode(e,s.item(m),true))}break;case o:r=true}if(r){var c=a.firstChild;while(c){i.appendChild(cloneNode(e,c,r));c=c.nextSibling}}return i}function __set__(e,a,r){e[a]=r}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,"length",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,"textContent",{get:function(){return getTextContent(this)},set:function(e){switch(this.nodeType){case p:case g:while(this.firstChild){this.removeChild(this.firstChild)}if(e||String(e)){this.appendChild(this.ownerDocument.createTextNode(e))}break;default:this.data=e;this.value=e;this.nodeValue=e}}});function getTextContent(e){switch(e.nodeType){case p:case g:var a=[];e=e.firstChild;while(e){if(e.nodeType!==7&&e.nodeType!==8){a.push(getTextContent(e))}e=e.nextSibling}return a.join("");default:return e.nodeValue}}__set__=function(e,a,r){e["$$"+a]=r}}}catch(e){}r=Node;r=DOMException;a.DOMImplementation=DOMImplementation;r=XMLSerializer},2975:(e,a)=>{a.entityMap={lt:"<",gt:">",amp:"&",quot:'"',apos:"'",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",times:"×",divide:"÷",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",euro:"€",trade:"™",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"}},7860:(e,a)=>{var r=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;var i=new RegExp("[\\-\\.0-9"+r.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");var n=new RegExp("^"+r.source+i.source+"*(?::"+r.source+i.source+"*)?$");var p=0;var o=1;var d=2;var s=3;var l=4;var u=5;var m=6;var c=7;function ParseError(e,a){this.message=e;this.locator=a;if(Error.captureStackTrace)Error.captureStackTrace(this,ParseError)}ParseError.prototype=new Error;ParseError.prototype.name=ParseError.name;function XMLReader(){}XMLReader.prototype={parse:function(e,a,r){var i=this.domBuilder;i.startDocument();_copy(a,a={});parse(e,a,r,i,this.errorHandler);i.endDocument()}};function parse(e,a,r,i,n){function fixedFromCharCode(e){if(e>65535){e-=65536;var a=55296+(e>>10),r=56320+(e&1023);return String.fromCharCode(a,r)}else{return String.fromCharCode(e)}}function entityReplacer(e){var a=e.slice(1,-1);if(a in r){return r[a]}else if(a.charAt(0)==="#"){return fixedFromCharCode(parseInt(a.substr(1).replace("x","0x")))}else{n.error("entity not found:"+e);return e}}function appendText(a){if(a>m){var r=e.substring(m,a).replace(/&#?\w+;/g,entityReplacer);s&&position(m);i.characters(r,0,a-m);m=a}}function position(a,r){while(a>=o&&(r=d.exec(e))){p=r.index;o=p+r[0].length;s.lineNumber++}s.columnNumber=a-p+1}var p=0;var o=0;var d=/.*(?:\r\n?|\n)|.*$/g;var s=i.locator;var l=[{currentNSMap:a}];var u={};var m=0;while(true){try{var c=e.indexOf("<",m);if(c<0){if(!e.substr(m).match(/^\s*$/)){var h=i.doc;var v=h.createTextNode(e.substr(m));h.appendChild(v);i.currentElement=v}return}if(c>m){appendText(c)}switch(e.charAt(c+1)){case"/":var g=e.indexOf(">",c+3);var y=e.substring(c+2,g);var w=l.pop();if(g<0){y=e.substring(c+2).replace(/[\s<].*/,"");n.error("end tag name: "+y+" is not complete:"+w.tagName);g=c+1+y.length}else if(y.match(/\s</)){y=y.replace(/[\s<].*/,"");n.error("end tag name: "+y+" maybe not complete");g=c+1+y.length}var b=w.localNSMap;var S=w.tagName==y;var _=S||w.tagName&&w.tagName.toLowerCase()==y.toLowerCase();if(_){i.endElement(w.uri,w.localName,y);if(b){for(var N in b){i.endPrefixMapping(N)}}if(!S){n.fatalError("end tag name: "+y+" is not match the current start tagName:"+w.tagName)}}else{l.push(w)}g++;break;case"?":s&&position(c);g=parseInstruction(e,c,i);break;case"!":s&&position(c);g=parseDCC(e,c,i,n);break;default:s&&position(c);var E=new ElementAttributes;var D=l[l.length-1].currentNSMap;var g=parseElementStartPart(e,c,E,D,entityReplacer,n);var C=E.length;if(!E.closed&&fixSelfClosed(e,g,E.tagName,u)){E.closed=true;if(!r.nbsp){n.warning("unclosed xml attribute")}}if(s&&C){var I=copyLocator(s,{});for(var T=0;T<C;T++){var A=E[T];position(A.offset);A.locator=copyLocator(s,{})}i.locator=I;if(appendElement(E,i,D)){l.push(E)}i.locator=s}else{if(appendElement(E,i,D)){l.push(E)}}if(E.uri==="http://www.w3.org/1999/xhtml"&&!E.closed){g=parseHtmlSpecialContent(e,g,E.tagName,entityReplacer,i)}else{g++}}}catch(e){if(e instanceof ParseError){throw e}n.error("element parse error: "+e);g=-1}if(g>m){m=g}else{appendText(Math.max(c,m)+1)}}}function copyLocator(e,a){a.lineNumber=e.lineNumber;a.columnNumber=e.columnNumber;return a}function parseElementStartPart(e,a,r,i,n,h){function addAttribute(e,a,i){if(e in r.attributeNames)h.fatalError("Attribute "+e+" redefined");r.addValue(e,a,i)}var v;var g;var y=++a;var w=p;while(true){var b=e.charAt(y);switch(b){case"=":if(w===o){v=e.slice(a,y);w=s}else if(w===d){w=s}else{throw new Error("attribute equal must after attrName")}break;case"'":case'"':if(w===s||w===o){if(w===o){h.warning('attribute value must after "="');v=e.slice(a,y)}a=y+1;y=e.indexOf(b,a);if(y>0){g=e.slice(a,y).replace(/&#?\w+;/g,n);addAttribute(v,g,a-1);w=u}else{throw new Error("attribute value no end '"+b+"' match")}}else if(w==l){g=e.slice(a,y).replace(/&#?\w+;/g,n);addAttribute(v,g,a);h.warning('attribute "'+v+'" missed start quot('+b+")!!");a=y+1;w=u}else{throw new Error('attribute value must after "="')}break;case"/":switch(w){case p:r.setTagName(e.slice(a,y));case u:case m:case c:w=c;r.closed=true;case l:case o:case d:break;default:throw new Error("attribute invalid close char('/')")}break;case"":h.error("unexpected end of input");if(w==p){r.setTagName(e.slice(a,y))}return y;case">":switch(w){case p:r.setTagName(e.slice(a,y));case u:case m:case c:break;case l:case o:g=e.slice(a,y);if(g.slice(-1)==="/"){r.closed=true;g=g.slice(0,-1)}case d:if(w===d){g=v}if(w==l){h.warning('attribute "'+g+'" missed quot(")!');addAttribute(v,g.replace(/&#?\w+;/g,n),a)}else{if(i[""]!=="http://www.w3.org/1999/xhtml"||!g.match(/^(?:disabled|checked|selected)$/i)){h.warning('attribute "'+g+'" missed value!! "'+g+'" instead!!')}addAttribute(g,g,a)}break;case s:throw new Error("attribute value missed!!")}return y;case"":b=" ";default:if(b<=" "){switch(w){case p:r.setTagName(e.slice(a,y));w=m;break;case o:v=e.slice(a,y);w=d;break;case l:var g=e.slice(a,y).replace(/&#?\w+;/g,n);h.warning('attribute "'+g+'" missed quot(")!!');addAttribute(v,g,a);case u:w=m;break}}else{switch(w){case d:var S=r.tagName;if(i[""]!=="http://www.w3.org/1999/xhtml"||!v.match(/^(?:disabled|checked|selected)$/i)){h.warning('attribute "'+v+'" missed value!! "'+v+'" instead2!!')}addAttribute(v,v,a);a=y;w=o;break;case u:h.warning('attribute space is required"'+v+'"!!');case m:w=o;a=y;break;case s:w=l;a=y;break;case c:throw new Error("elements closed character '/' and '>' must be connected to")}}}y++}}function appendElement(e,a,r){var i=e.tagName;var n=null;var p=e.length;while(p--){var o=e[p];var d=o.qName;var s=o.value;var l=d.indexOf(":");if(l>0){var u=o.prefix=d.slice(0,l);var m=d.slice(l+1);var c=u==="xmlns"&&m}else{m=d;u=null;c=d==="xmlns"&&""}o.localName=m;if(c!==false){if(n==null){n={};_copy(r,r={})}r[c]=n[c]=s;o.uri="http://www.w3.org/2000/xmlns/";a.startPrefixMapping(c,s)}}var p=e.length;while(p--){o=e[p];var u=o.prefix;if(u){if(u==="xml"){o.uri="http://www.w3.org/XML/1998/namespace"}if(u!=="xmlns"){o.uri=r[u||""]}}}var l=i.indexOf(":");if(l>0){u=e.prefix=i.slice(0,l);m=e.localName=i.slice(l+1)}else{u=null;m=e.localName=i}var h=e.uri=r[u||""];a.startElement(h,m,i,e);if(e.closed){a.endElement(h,m,i);if(n){for(u in n){a.endPrefixMapping(u)}}}else{e.currentNSMap=r;e.localNSMap=n;return true}}function parseHtmlSpecialContent(e,a,r,i,n){if(/^(?:script|textarea)$/i.test(r)){var p=e.indexOf("</"+r+">",a);var o=e.substring(a+1,p);if(/[&<]/.test(o)){if(/^script$/i.test(r)){n.characters(o,0,o.length);return p}o=o.replace(/&#?\w+;/g,i);n.characters(o,0,o.length);return p}}return a+1}function fixSelfClosed(e,a,r,i){var n=i[r];if(n==null){n=e.lastIndexOf("</"+r+">");if(n<a){n=e.lastIndexOf("</"+r)}i[r]=n}return n<a}function _copy(e,a){for(var r in e){a[r]=e[r]}}function parseDCC(e,a,r,i){var n=e.charAt(a+2);switch(n){case"-":if(e.charAt(a+3)==="-"){var p=e.indexOf("--\x3e",a+4);if(p>a){r.comment(e,a+4,p-a-4);return p+3}else{i.error("Unclosed comment");return-1}}else{return-1}default:if(e.substr(a+3,6)=="CDATA["){var p=e.indexOf("]]>",a+9);r.startCDATA();r.characters(e,a+9,p-a-9);r.endCDATA();return p+3}var o=split(e,a);var d=o.length;if(d>1&&/!doctype/i.test(o[0][0])){var s=o[1][0];var l=false;var u=false;if(d>3){if(/^public$/i.test(o[2][0])){l=o[3][0];u=d>4&&o[4][0]}else if(/^system$/i.test(o[2][0])){u=o[3][0]}}var m=o[d-1];r.startDTD(s,l,u);r.endDTD();return m.index+m[0].length}}return-1}function parseInstruction(e,a,r){var i=e.indexOf("?>",a);if(i){var n=e.substring(a,i).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);if(n){var p=n[0].length;r.processingInstruction(n[1],n[2]);return i+2}else{return-1}}return-1}function ElementAttributes(){this.attributeNames={}}ElementAttributes.prototype={setTagName:function(e){if(!n.test(e)){throw new Error("invalid tagName:"+e)}this.tagName=e},addValue:function(e,a,r){if(!n.test(e)){throw new Error("invalid attribute:"+e)}this.attributeNames[e]=this.length;this[this.length++]={qName:e,value:a,offset:r}},length:0,getLocalName:function(e){return this[e].localName},getLocator:function(e){return this[e].locator},getQName:function(e){return this[e].qName},getURI:function(e){return this[e].uri},getValue:function(e){return this[e].value}};function split(e,a){var r;var i=[];var n=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;n.lastIndex=a;n.exec(e);while(r=n.exec(e)){i.push(r);if(r[1])return i}}a.XMLReader=XMLReader;a.ParseError=ParseError},8341:(e,a,r)=>{var i=r(1223);var n=r(1205);var p=r(5747);var noop=function(){};var o=/^v?\.0/.test(process.version);var isFn=function(e){return typeof e==="function"};var isFS=function(e){if(!o)return false;if(!p)return false;return(e instanceof(p.ReadStream||noop)||e instanceof(p.WriteStream||noop))&&isFn(e.close)};var isRequest=function(e){return e.setHeader&&isFn(e.abort)};var destroyer=function(e,a,r,p){p=i(p);var o=false;e.on("close",(function(){o=true}));n(e,{readable:a,writable:r},(function(e){if(e)return p(e);o=true;p()}));var d=false;return function(a){if(o)return;if(d)return;d=true;if(isFS(e))return e.close(noop);if(isRequest(e))return e.abort();if(isFn(e.destroy))return e.destroy();p(a||new Error("stream was destroyed"))}};var call=function(e){e()};var pipe=function(e,a){return e.pipe(a)};var pump=function(){var e=Array.prototype.slice.call(arguments);var a=isFn(e[e.length-1]||noop)&&e.pop()||noop;if(Array.isArray(e[0]))e=e[0];if(e.length<2)throw new Error("pump requires two streams per minimum");var r;var i=e.map((function(n,p){var o=p<e.length-1;var d=p>0;return destroyer(n,o,d,(function(e){if(!r)r=e;if(e)i.forEach(call);if(o)return;i.forEach(call);a(r)}))}));return e.reduce(pipe)};e.exports=pump},3515:(e,a,r)=>{var i=r(5622);var n=r(2804);var p=r(7817);function validateTemplate(e){if(typeof e!=="string"){throw new TypeError("template is not a string")}var a=/(^|[^%])(%%)*%s/;var r=a.exec(e);if(r===null)throw new Error("No replacement token. Template must contain replacement token %s exactly once");var i=r.index+r[0].length;var n=a.exec(e.substring(i));if(n!==null)throw new Error("Multiple replacement tokens. Template must contain replacement token %s exactly once")}function replaceToken(e,a){return e.replace(/%([%s])/g,(function(e,r){return r==="s"?a:r}))}var o=0;var d=String(Math.random());function randomPath(e,a){validateTemplate(a);var r=n(d+String(process.pid)+String(++o));var s=p(r,"Crockford");return i.join(e,replaceToken(a,s))}e.exports=randomPath;e.exports.validateTemplate=validateTemplate},1184:(e,a,r)=>{const i=r(8905);const n=r(4067);const p=r(1933);const o=r(5747);function parse(e,a){const r=e[0];let n;try{if(r===60||r==="<"){n=p.parse(e.toString())}else if(r===98){[n]=i.parseBuffer(e)}else if(a!=null){throw new Error(`Unable to determine format for '${a}'`)}else{throw new Error("Unable to determine format for plist aStringOrBuffer")}}catch(e){throw new Error(e)}return n}function readFileSync(e){const a=o.readFileSync(e);if(a.length===0){return{}}return parse(a,e)}function readFile(e,a){o.readFile(e,((r,i)=>{let n;if(r){a(r)}try{n=parse(i,e);a(null,n)}catch(e){a(e)}}))}function writeFileSync(e,a,r){const i=p.build(a);return o.writeFileSync(e,i,r)}function writeFile(e,a,r,i){if(arguments.length===3&&typeof r==="function"){o.writeFile(e,p.build(a),r)}else{o.writeFile(e,p.build(a),r,i)}}function writeBinaryFileSync(e,a,r){return o.writeFileSync(e,n(a),r)}function writeBinaryFile(e,a,r,i){if(arguments.length===3&&typeof r==="function"){o.writeFile(e,n(a),r)}else{o.writeFile(e,n(a),r,i)}}function stringify(e){return p.build(e)}e.exports={bplistCreator:n,bplistParser:i,parse:parse,plist:p,readFile:readFile,readFileSync:readFileSync,stringify:stringify,writeBinaryFile:writeBinaryFile,writeBinaryFileSync:writeBinaryFileSync,writeFile:writeFile,writeFileSync:writeFileSync}},2619:e=>{e.exports={DEFAULT_INITIAL_SIZE:8*1024,DEFAULT_INCREMENT_AMOUNT:8*1024,DEFAULT_FREQUENCY:1,DEFAULT_CHUNK_SIZE:1024}},8838:(e,a,r)=>{var i=r(2413),n=r(2619),p=r(1669);var o=e.exports=function(e){var a=this;i.Stream.call(this);e=e||{};var r=e.hasOwnProperty("frequency")?e.frequency:n.DEFAULT_FREQUENCY;var p=e.chunkSize||n.DEFAULT_CHUNK_SIZE;var o=e.initialSize||n.DEFAULT_INITIAL_SIZE;var d=e.incrementAmount||n.DEFAULT_INCREMENT_AMOUNT;var s=0;var l=new Buffer(o);var u=null;this.readable=true;this.writable=false;var sendData=function(){var e=Math.min(p,s);if(e>0){var r=null;if(u){r=l.toString(u,0,e)}else{r=new Buffer(e);l.copy(r,0,0,e)}a.emit("data",r);if(e<l.length)l.copy(l,0,e,s);s-=e}if(s===0&&!a.readable){a.emit("end");a.emit("close");if(sendData&&sendData.interval){clearInterval(sendData.interval);sendData.interval=null}}};this.size=function(){return s};this.maxSize=function(){return l.length};var increaseBufferIfNecessary=function(e){if(l.length-s<e){var a=Math.ceil((e-(l.length-s))/d);var r=new Buffer(l.length+d*a);l.copy(r,0,0,s);l=r}};this.put=function(e,i){if(!a.readable)return;var n=s===0;if(Buffer.isBuffer(e)){increaseBufferIfNecessary(e.length);e.copy(l,s,0);s+=e.length}else{e=e+"";var p=Buffer.byteLength(e);increaseBufferIfNecessary(p);l.write(e,s,i||"utf8");s+=p}if(n&&s>0){this.emit("readable")}if(!this.isPaused&&!r){while(s>0){sendData()}}};this.pause=function(){this.isPaused=true;if(sendData&&sendData.interval){clearInterval(sendData.interval);delete sendData.interval}};this.resume=function(){this.isPaused=false;if(sendData&&!sendData.interval&&r>0){sendData.interval=setInterval(sendData,r)}};this.destroy=function(){a.emit("end");if(sendData.interval)clearInterval(sendData.interval);sendData=null;a.readable=false;a.emit("close")};this.destroySoon=function(){a.readable=false;if(!sendData.interval){a.emit("end");a.emit("close")}};this.setEncoding=function(e){u=e};this.resume()};p.inherits(o,i.Stream)},8168:(e,a,r)=>{e.exports=r(2619);e.exports.ReadableStreamBuffer=r(8838);e.exports.WritableStreamBuffer=r(6055)},6055:(e,a,r)=>{var i=r(1669),n=r(2413),p=r(2619);var o=e.exports=function(e){var a=this;n.Stream.call(this);e=e||{};var r=e.initialSize||p.DEFAULT_INITIAL_SIZE;var i=e.incrementAmount||p.DEFAULT_INCREMENT_AMOUNT;var o=new Buffer(r);var d=0;this.writable=true;this.readable=false;this.size=function(){return d};this.maxSize=function(){return o.length};this.getContents=function(e){if(!d)return false;var a=new Buffer(Math.min(e||d,d));o.copy(a,0,0,a.length);if(a.length<d)o.copy(o,0,a.length);d-=a.length;return a};this.getContentsAsString=function(e,a){if(!d)return false;var r=o.toString(e||"utf8",0,Math.min(a||d,d));var i=Buffer.byteLength(r);if(i<d)o.copy(o,0,i);d-=i;return r};var increaseBufferIfNecessary=function(e){if(o.length-d<e){var a=Math.ceil((e-(o.length-d))/i);var r=new Buffer(o.length+i*a);o.copy(r,0,0,d);o=r}};this.write=function(e,r,i){if(!a.writable)return;if(Buffer.isBuffer(e)){increaseBufferIfNecessary(e.length);e.copy(o,d,0);d+=e.length}else{e=e+"";increaseBufferIfNecessary(Buffer.byteLength(e));o.write(e,d,r||"utf8");d+=Buffer.byteLength(e)}if(typeof i==="function"){i()}};this.end=function(){var e=Array.prototype.slice.apply(arguments);if(e.length)a.write.apply(a,e);a.emit("finish");a.destroy()};this.destroySoon=this.destroy=function(){a.writable=false;a.emit("close")}};i.inherits(o,n.Stream)},9318:(e,a,r)=>{"use strict";const i=r(2087);const n=r(3867);const p=r(1621);const{env:o}=process;let d;if(p("no-color")||p("no-colors")||p("color=false")||p("color=never")){d=0}else if(p("color")||p("colors")||p("color=true")||p("color=always")){d=1}if("FORCE_COLOR"in o){if(o.FORCE_COLOR==="true"){d=1}else if(o.FORCE_COLOR==="false"){d=0}else{d=o.FORCE_COLOR.length===0?1:Math.min(parseInt(o.FORCE_COLOR,10),3)}}function translateLevel(e){if(e===0){return false}return{level:e,hasBasic:true,has256:e>=2,has16m:e>=3}}function supportsColor(e,a){if(d===0){return 0}if(p("color=16m")||p("color=full")||p("color=truecolor")){return 3}if(p("color=256")){return 2}if(e&&!a&&d===undefined){return 0}const r=d||0;if(o.TERM==="dumb"){return r}if(process.platform==="win32"){const e=i.release().split(".");if(Number(e[0])>=10&&Number(e[2])>=10586){return Number(e[2])>=14931?3:2}return 1}if("CI"in o){if(["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((e=>e in o))||o.CI_NAME==="codeship"){return 1}return r}if("TEAMCITY_VERSION"in o){return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION)?1:0}if(o.COLORTERM==="truecolor"){return 3}if("TERM_PROGRAM"in o){const e=parseInt((o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(o.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}if(/-256(color)?$/i.test(o.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)){return 1}if("COLORTERM"in o){return 1}return r}function getSupportLevel(e){const a=supportsColor(e,e&&e.isTTY);return translateLevel(a)}e.exports={supportsColor:getSupportLevel,stdout:translateLevel(supportsColor(true,n.isatty(1))),stderr:translateLevel(supportsColor(true,n.isatty(2)))}},8065:(e,a,r)=>{const{promisify:i}=r(1669);const n=r(8517);e.exports.fileSync=n.fileSync;const p=i(((e,a)=>n.file(e,((e,r,n,p)=>e?a(e):a(undefined,{path:r,fd:n,cleanup:i(p)})))));e.exports.file=async e=>p(e);e.exports.withFile=async function withFile(a,r){const{path:i,fd:n,cleanup:p}=await e.exports.file(r);try{return await a({path:i,fd:n})}finally{await p()}};e.exports.dirSync=n.dirSync;const o=i(((e,a)=>n.dir(e,((e,r,n)=>e?a(e):a(undefined,{path:r,cleanup:i(n)})))));e.exports.dir=async e=>o(e);e.exports.withDir=async function withDir(a,r){const{path:i,cleanup:n}=await e.exports.dir(r);try{return await a({path:i})}finally{await n()}};e.exports.tmpNameSync=n.tmpNameSync;e.exports.tmpName=i(n.tmpName);e.exports.tmpdir=n.tmpdir;e.exports.setGracefulCleanup=n.setGracefulCleanup},8517:(e,a,r)=>{
/*!
 * Tmp
 *
 * Copyright (c) 2011-2017 KARASZI Istvan <github@spam.raszi.hu>
 *
 * MIT Licensed
 */
const i=r(5747);const n=r(2087);const p=r(5622);const o=r(6417);const d=i.constants&&n.constants?{fs:i.constants,os:n.constants}:process.binding("constants");const s=r(2371);const l="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",u=/XXXXXX/,m=3,c=(d.O_CREAT||d.fs.O_CREAT)|(d.O_EXCL||d.fs.O_EXCL)|(d.O_RDWR||d.fs.O_RDWR),h=d.EBADF||d.os.errno.EBADF,v=d.ENOENT||d.os.errno.ENOENT,g=448,y=384,w="exit",b="SIGINT",S=[];var _=false;function _randomChars(e){var a=[],r=null;try{r=o.randomBytes(e)}catch(a){r=o.pseudoRandomBytes(e)}for(var i=0;i<e;i++){a.push(l[r[i]%l.length])}return a.join("")}function _isUndefined(e){return typeof e==="undefined"}function _parseArguments(e,a){if(typeof e==="function"){return[{},e]}if(_isUndefined(e)){return[{},a]}return[e,a]}function _generateTmpName(e){const a=_getTmpDir();if(isBlank(e.dir)&&isBlank(a)){throw new Error("No tmp dir specified")}if(!isBlank(e.name)){return p.join(e.dir||a,e.name)}if(e.template){var r=e.template;if(p.basename(r)===r)r=p.join(e.dir||a,r);return r.replace(u,_randomChars(6))}const i=[isBlank(e.prefix)?"tmp-":e.prefix,process.pid,_randomChars(12),e.postfix?e.postfix:""].join("");return p.join(e.dir||a,i)}function tmpName(e,a){var r=_parseArguments(e,a),n=r[0],p=r[1],o=!isBlank(n.name)?1:n.tries||m;if(isNaN(o)||o<0)return p(new Error("Invalid tries"));if(n.template&&!n.template.match(u))return p(new Error("Invalid template provided"));(function _getUniqueName(){try{const e=_generateTmpName(n);i.stat(e,(function(a){if(!a){if(o-- >0)return _getUniqueName();return p(new Error("Could not get a unique tmp filename, max tries reached "+e))}p(null,e)}))}catch(e){p(e)}})()}function tmpNameSync(e){var a=_parseArguments(e),r=a[0],n=!isBlank(r.name)?1:r.tries||m;if(isNaN(n)||n<0)throw new Error("Invalid tries");if(r.template&&!r.template.match(u))throw new Error("Invalid template provided");do{const e=_generateTmpName(r);try{i.statSync(e)}catch(a){return e}}while(n-- >0);throw new Error("Could not get a unique tmp filename, max tries reached")}function file(e,a){var r=_parseArguments(e,a),n=r[0],p=r[1];tmpName(n,(function _tmpNameCreated(e,a){if(e)return p(e);i.open(a,c,n.mode||y,(function _fileCreated(e,r){if(e)return p(e);if(n.discardDescriptor){return i.close(r,(function _discardCallback(e){if(e){try{i.unlinkSync(a)}catch(a){if(!isENOENT(a)){e=a}}return p(e)}p(null,a,undefined,_prepareTmpFileRemoveCallback(a,-1,n))}))}if(n.detachDescriptor){return p(null,a,r,_prepareTmpFileRemoveCallback(a,-1,n))}p(null,a,r,_prepareTmpFileRemoveCallback(a,r,n))}))}))}function fileSync(e){var a=_parseArguments(e),r=a[0];const n=r.discardDescriptor||r.detachDescriptor;const p=tmpNameSync(r);var o=i.openSync(p,c,r.mode||y);if(r.discardDescriptor){i.closeSync(o);o=undefined}return{name:p,fd:o,removeCallback:_prepareTmpFileRemoveCallback(p,n?-1:o,r)}}function dir(e,a){var r=_parseArguments(e,a),n=r[0],p=r[1];tmpName(n,(function _tmpNameCreated(e,a){if(e)return p(e);i.mkdir(a,n.mode||g,(function _dirCreated(e){if(e)return p(e);p(null,a,_prepareTmpDirRemoveCallback(a,n))}))}))}function dirSync(e){var a=_parseArguments(e),r=a[0];const n=tmpNameSync(r);i.mkdirSync(n,r.mode||g);return{name:n,removeCallback:_prepareTmpDirRemoveCallback(n,r)}}function _removeFileAsync(e,a){const _handler=function(e){if(e&&!isENOENT(e)){return a(e)}a()};if(0<=e[0])i.close(e[0],(function(a){i.unlink(e[1],_handler)}));else i.unlink(e[1],_handler)}function _removeFileSync(e){try{if(0<=e[0])i.closeSync(e[0])}catch(e){if(!isEBADF(e)&&!isENOENT(e))throw e}finally{try{i.unlinkSync(e[1])}catch(e){if(!isENOENT(e))throw e}}}function _prepareTmpFileRemoveCallback(e,a,r){const i=_prepareRemoveCallback(_removeFileSync,[a,e]);const n=_prepareRemoveCallback(_removeFileAsync,[a,e],i);if(!r.keep)S.unshift(i);return n}function _rimrafRemoveDirWrapper(e,a){s(e,a)}function _rimrafRemoveDirSyncWrapper(e,a){try{return a(null,s.sync(e))}catch(e){return a(e)}}function _prepareTmpDirRemoveCallback(e,a){const r=a.unsafeCleanup?_rimrafRemoveDirWrapper:i.rmdir.bind(i);const n=a.unsafeCleanup?_rimrafRemoveDirSyncWrapper:i.rmdirSync.bind(i);const p=_prepareRemoveCallback(n,e);const o=_prepareRemoveCallback(r,e,p);if(!a.keep)S.unshift(p);return o}function _prepareRemoveCallback(e,a,r){var i=false;return function _cleanupCallback(n){n=n||function(){};if(!i){const p=r||_cleanupCallback;const o=S.indexOf(p);if(o>=0)S.splice(o,1);i=true;if(e.length===1){try{e(a);return n(null)}catch(e){return n(e)}}else return e(a,n)}else return n(new Error("cleanup callback has already been called"))}}function _garbageCollector(){if(!_)return;while(S.length){try{S[0]()}catch(e){}}}function isEBADF(e){return isExpectedError(e,-h,"EBADF")}function isENOENT(e){return isExpectedError(e,-v,"ENOENT")}function isExpectedError(e,a,r){return e.code===a||e.code===r}function isBlank(e){return e===null||e===undefined||!e.trim()}function setGracefulCleanup(){_=true}function _getTmpDir(){return n.tmpdir()}function _is_legacy_listener(e){return(e.name==="_exit"||e.name==="_uncaughtExceptionThrown")&&e.toString().indexOf("_garbageCollector();")>-1}function _safely_install_sigint_listener(){const e=process.listeners(b);const a=[];for(let r=0,i=e.length;r<i;r++){const i=e[r];if(i.name==="_tmp$sigint_listener"){a.push(i);process.removeListener(b,i)}}process.on(b,(function _tmp$sigint_listener(e){for(let e=0,r=a.length;e<r;e++){try{a[e](false)}catch(e){}}try{_garbageCollector()}finally{if(!!e){process.exit(0)}}}))}function _safely_install_exit_listener(){const e=process.listeners(w);const a=[];for(let r=0,i=e.length;r<i;r++){const i=e[r];if(i.name==="_tmp$safe_listener"||_is_legacy_listener(i)){if(i.name!=="_uncaughtExceptionThrown"){a.push(i)}process.removeListener(w,i)}}process.addListener(w,(function _tmp$safe_listener(e){for(let r=0,i=a.length;r<i;r++){try{a[r](e)}catch(e){}}_garbageCollector()}))}_safely_install_exit_listener();_safely_install_sigint_listener();Object.defineProperty(e.exports,"tmpdir",{enumerable:true,configurable:false,get:function(){return _getTmpDir()}});e.exports.dir=dir;e.exports.dirSync=dirSync;e.exports.file=file;e.exports.fileSync=fileSync;e.exports.tmpName=tmpName;e.exports.tmpNameSync=tmpNameSync;e.exports.setGracefulCleanup=setGracefulCleanup},2371:(e,a,r)=>{e.exports=rimraf;rimraf.sync=rimrafSync;var i=r(2357);var n=r(5622);var p=r(5747);var o=undefined;try{o=r(1957)}catch(e){}var d=parseInt("666",8);var s={nosort:true,silent:true};var l=0;var u=process.platform==="win32";function defaults(e){var a=["unlink","chmod","stat","lstat","rmdir","readdir"];a.forEach((function(a){e[a]=e[a]||p[a];a=a+"Sync";e[a]=e[a]||p[a]}));e.maxBusyTries=e.maxBusyTries||3;e.emfileWait=e.emfileWait||1e3;if(e.glob===false){e.disableGlob=true}if(e.disableGlob!==true&&o===undefined){throw Error("glob dependency not found, set `options.disableGlob = true` if intentional")}e.disableGlob=e.disableGlob||false;e.glob=e.glob||s}function rimraf(e,a,r){if(typeof a==="function"){r=a;a={}}i(e,"rimraf: missing path");i.equal(typeof e,"string","rimraf: path should be a string");i.equal(typeof r,"function","rimraf: callback function required");i(a,"rimraf: invalid options argument provided");i.equal(typeof a,"object","rimraf: options should be object");defaults(a);var n=0;var p=null;var d=0;if(a.disableGlob||!o.hasMagic(e))return afterGlob(null,[e]);a.lstat(e,(function(r,i){if(!r)return afterGlob(null,[e]);o(e,a.glob,afterGlob)}));function next(e){p=p||e;if(--d===0)r(p)}function afterGlob(e,i){if(e)return r(e);d=i.length;if(d===0)return r();i.forEach((function(e){rimraf_(e,a,(function CB(r){if(r){if((r.code==="EBUSY"||r.code==="ENOTEMPTY"||r.code==="EPERM")&&n<a.maxBusyTries){n++;var i=n*100;return setTimeout((function(){rimraf_(e,a,CB)}),i)}if(r.code==="EMFILE"&&l<a.emfileWait){return setTimeout((function(){rimraf_(e,a,CB)}),l++)}if(r.code==="ENOENT")r=null}l=0;next(r)}))}))}}function rimraf_(e,a,r){i(e);i(a);i(typeof r==="function");a.lstat(e,(function(i,n){if(i&&i.code==="ENOENT")return r(null);if(i&&i.code==="EPERM"&&u)fixWinEPERM(e,a,i,r);if(n&&n.isDirectory())return rmdir(e,a,i,r);a.unlink(e,(function(i){if(i){if(i.code==="ENOENT")return r(null);if(i.code==="EPERM")return u?fixWinEPERM(e,a,i,r):rmdir(e,a,i,r);if(i.code==="EISDIR")return rmdir(e,a,i,r)}return r(i)}))}))}function fixWinEPERM(e,a,r,n){i(e);i(a);i(typeof n==="function");if(r)i(r instanceof Error);a.chmod(e,d,(function(i){if(i)n(i.code==="ENOENT"?null:r);else a.stat(e,(function(i,p){if(i)n(i.code==="ENOENT"?null:r);else if(p.isDirectory())rmdir(e,a,r,n);else a.unlink(e,n)}))}))}function fixWinEPERMSync(e,a,r){i(e);i(a);if(r)i(r instanceof Error);try{a.chmodSync(e,d)}catch(e){if(e.code==="ENOENT")return;else throw r}try{var n=a.statSync(e)}catch(e){if(e.code==="ENOENT")return;else throw r}if(n.isDirectory())rmdirSync(e,a,r);else a.unlinkSync(e)}function rmdir(e,a,r,n){i(e);i(a);if(r)i(r instanceof Error);i(typeof n==="function");a.rmdir(e,(function(i){if(i&&(i.code==="ENOTEMPTY"||i.code==="EEXIST"||i.code==="EPERM"))rmkids(e,a,n);else if(i&&i.code==="ENOTDIR")n(r);else n(i)}))}function rmkids(e,a,r){i(e);i(a);i(typeof r==="function");a.readdir(e,(function(i,p){if(i)return r(i);var o=p.length;if(o===0)return a.rmdir(e,r);var d;p.forEach((function(i){rimraf(n.join(e,i),a,(function(i){if(d)return;if(i)return r(d=i);if(--o===0)a.rmdir(e,r)}))}))}))}function rimrafSync(e,a){a=a||{};defaults(a);i(e,"rimraf: missing path");i.equal(typeof e,"string","rimraf: path should be a string");i(a,"rimraf: missing options");i.equal(typeof a,"object","rimraf: options should be object");var r;if(a.disableGlob||!o.hasMagic(e)){r=[e]}else{try{a.lstatSync(e);r=[e]}catch(i){r=o.sync(e,a.glob)}}if(!r.length)return;for(var n=0;n<r.length;n++){var e=r[n];try{var p=a.lstatSync(e)}catch(r){if(r.code==="ENOENT")return;if(r.code==="EPERM"&&u)fixWinEPERMSync(e,a,r)}try{if(p&&p.isDirectory())rmdirSync(e,a,null);else a.unlinkSync(e)}catch(r){if(r.code==="ENOENT")return;if(r.code==="EPERM")return u?fixWinEPERMSync(e,a,r):rmdirSync(e,a,r);if(r.code!=="EISDIR")throw r;rmdirSync(e,a,r)}}}function rmdirSync(e,a,r){i(e);i(a);if(r)i(r instanceof Error);try{a.rmdirSync(e)}catch(i){if(i.code==="ENOENT")return;if(i.code==="ENOTDIR")throw r;if(i.code==="ENOTEMPTY"||i.code==="EEXIST"||i.code==="EPERM")rmkidsSync(e,a)}}function rmkidsSync(e,a){i(e);i(a);a.readdirSync(e).forEach((function(r){rimrafSync(n.join(e,r),a)}));var r=u?100:1;var p=0;do{var o=true;try{var d=a.rmdirSync(e,a);o=false;return d}finally{if(++p<r&&o)continue}}while(true)}},8694:(e,a,r)=>{var i=r(8706);var n=new Map([[0,65535],[65,97],[66,98],[67,99],[68,100],[69,101],[70,102],[71,103],[72,104],[73,105],[74,106],[75,107],[76,108],[77,109],[78,110],[79,111],[80,112],[81,113],[82,114],[83,115],[84,116],[85,117],[86,118],[87,119],[88,120],[89,121],[90,122],[198,230],[208,240],[216,248],[222,254],[272,273],[294,295],[306,307],[319,320],[321,322],[330,331],[338,339],[358,359],[385,595],[386,387],[388,389],[390,596],[391,392],[393,598],[394,599],[395,396],[398,477],[399,601],[400,603],[401,402],[403,608],[404,611],[406,617],[407,616],[408,409],[412,623],[413,626],[415,629],[418,419],[420,421],[423,424],[425,643],[428,429],[430,648],[433,650],[434,651],[435,436],[437,438],[439,658],[440,441],[444,445],[452,454],[453,454],[455,457],[456,457],[458,460],[459,460],[484,485],[497,499],[498,499],[913,945],[914,946],[915,947],[916,948],[917,949],[918,950],[919,951],[920,952],[921,953],[922,954],[923,955],[924,956],[925,957],[926,958],[927,959],[928,960],[929,961],[931,963],[932,964],[933,965],[934,966],[935,967],[936,968],[937,969],[994,995],[996,997],[998,999],[1e3,1001],[1002,1003],[1004,1005],[1006,1007],[1026,1106],[1028,1108],[1029,1109],[1030,1110],[1032,1112],[1033,1113],[1034,1114],[1035,1115],[1039,1119],[1040,1072],[1041,1073],[1042,1074],[1043,1075],[1044,1076],[1045,1077],[1046,1078],[1047,1079],[1048,1080],[1050,1082],[1051,1083],[1052,1084],[1053,1085],[1054,1086],[1055,1087],[1056,1088],[1057,1089],[1058,1090],[1059,1091],[1060,1092],[1061,1093],[1062,1094],[1063,1095],[1064,1096],[1065,1097],[1066,1098],[1067,1099],[1068,1100],[1069,1101],[1070,1102],[1071,1103],[1120,1121],[1122,1123],[1124,1125],[1126,1127],[1128,1129],[1130,1131],[1132,1133],[1134,1135],[1136,1137],[1138,1139],[1140,1141],[1144,1145],[1146,1147],[1148,1149],[1150,1151],[1152,1153],[1168,1169],[1170,1171],[1172,1173],[1174,1175],[1176,1177],[1178,1179],[1180,1181],[1182,1183],[1184,1185],[1186,1187],[1188,1189],[1190,1191],[1192,1193],[1194,1195],[1196,1197],[1198,1199],[1200,1201],[1202,1203],[1204,1205],[1206,1207],[1208,1209],[1210,1211],[1212,1213],[1214,1215],[1219,1220],[1223,1224],[1227,1228],[1329,1377],[1330,1378],[1331,1379],[1332,1380],[1333,1381],[1334,1382],[1335,1383],[1336,1384],[1337,1385],[1338,1386],[1339,1387],[1340,1388],[1341,1389],[1342,1390],[1343,1391],[1344,1392],[1345,1393],[1346,1394],[1347,1395],[1348,1396],[1349,1397],[1350,1398],[1351,1399],[1352,1400],[1353,1401],[1354,1402],[1355,1403],[1356,1404],[1357,1405],[1358,1406],[1359,1407],[1360,1408],[1361,1409],[1362,1410],[1363,1411],[1364,1412],[1365,1413],[1366,1414],[4256,4304],[4257,4305],[4258,4306],[4259,4307],[4260,4308],[4261,4309],[4262,4310],[4263,4311],[4264,4312],[4265,4313],[4266,4314],[4267,4315],[4268,4316],[4269,4317],[4270,4318],[4271,4319],[4272,4320],[4273,4321],[4274,4322],[4275,4323],[4276,4324],[4277,4325],[4278,4326],[4279,4327],[4280,4328],[4281,4329],[4282,4330],[4283,4331],[4284,4332],[4285,4333],[4286,4334],[4287,4335],[4288,4336],[4289,4337],[4290,4338],[4291,4339],[4292,4340],[4293,4341],[8204,0],[8205,0],[8206,0],[8207,0],[8234,0],[8235,0],[8236,0],[8237,0],[8238,0],[8298,0],[8299,0],[8300,0],[8301,0],[8302,0],[8303,0],[8544,16],[8545,16],[8546,16],[8547,16],[8548,16],[8549,16],[8550,16],[8551,16],[8552,16],[8553,16],[8554,16],[8555,16],[8556,16],[8557,16],[8558,16],[8559,16],[65279,0],[65313,32],[65314,32],[65315,32],[65316,32],[65317,32],[65318,32],[65319,32],[65320,32],[65321,32],[65322,32],[65323,32],[65324,32],[65325,32],[65326,32],[65327,32],[65328,32],[65329,32],[65330,32],[65331,32],[65332,32],[65333,32],[65334,32],[65335,32],[65336,32],[65337,32],[65338,32]]);function HFSPlusFastUnicodeCompare(e,a){var r,i,p;for(r=0;r<Math.min(e.length,a.length);r++){i=e.charCodeAt(r);p=a.charCodeAt(r);if(n.has(i)){i=n.get(i)}if(n.has(p)){p=n.get(p)}if(i!==p){return i-p}}if(e.length!==a.length){return e.length-a.length}return 0}a.compare=HFSPlusFastUnicodeCompare;a.normalize=i.nfd},5026:e=>{e.exports=function toDataView(e){if(e instanceof Int8Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray){return new DataView(e.buffer,e.byteOffset,e.byteLength)}if(e instanceof ArrayBuffer){return new DataView(e)}throw new TypeError("Expected `data` to be an ArrayBuffer, Buffer, Int8Array, Uint8Array or Uint8ClampedArray")}},4294:(e,a,r)=>{e.exports=r(4219)},4219:(e,a,r)=>{"use strict";var i=r(1631);var n=r(4016);var p=r(8605);var o=r(7211);var d=r(8614);var s=r(2357);var l=r(1669);a.httpOverHttp=httpOverHttp;a.httpsOverHttp=httpsOverHttp;a.httpOverHttps=httpOverHttps;a.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var a=new TunnelingAgent(e);a.request=p.request;return a}function httpsOverHttp(e){var a=new TunnelingAgent(e);a.request=p.request;a.createSocket=createSecureSocket;a.defaultPort=443;return a}function httpOverHttps(e){var a=new TunnelingAgent(e);a.request=o.request;return a}function httpsOverHttps(e){var a=new TunnelingAgent(e);a.request=o.request;a.createSocket=createSecureSocket;a.defaultPort=443;return a}function TunnelingAgent(e){var a=this;a.options=e||{};a.proxyOptions=a.options.proxy||{};a.maxSockets=a.options.maxSockets||p.Agent.defaultMaxSockets;a.requests=[];a.sockets=[];a.on("free",(function onFree(e,r,i,n){var p=toOptions(r,i,n);for(var o=0,d=a.requests.length;o<d;++o){var s=a.requests[o];if(s.host===p.host&&s.port===p.port){a.requests.splice(o,1);s.request.onSocket(e);return}}e.destroy();a.removeSocket(e)}))}l.inherits(TunnelingAgent,d.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,a,r,i){var n=this;var p=mergeOptions({request:e},n.options,toOptions(a,r,i));if(n.sockets.length>=this.maxSockets){n.requests.push(p);return}n.createSocket(p,(function(a){a.on("free",onFree);a.on("close",onCloseOrRemove);a.on("agentRemove",onCloseOrRemove);e.onSocket(a);function onFree(){n.emit("free",a,p)}function onCloseOrRemove(e){n.removeSocket(a);a.removeListener("free",onFree);a.removeListener("close",onCloseOrRemove);a.removeListener("agentRemove",onCloseOrRemove)}}))};TunnelingAgent.prototype.createSocket=function createSocket(e,a){var r=this;var i={};r.sockets.push(i);var n=mergeOptions({},r.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){n.localAddress=e.localAddress}if(n.proxyAuth){n.headers=n.headers||{};n.headers["Proxy-Authorization"]="Basic "+new Buffer(n.proxyAuth).toString("base64")}u("making CONNECT request");var p=r.request(n);p.useChunkedEncodingByDefault=false;p.once("response",onResponse);p.once("upgrade",onUpgrade);p.once("connect",onConnect);p.once("error",onError);p.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,a,r){process.nextTick((function(){onConnect(e,a,r)}))}function onConnect(n,o,d){p.removeAllListeners();o.removeAllListeners();if(n.statusCode!==200){u("tunneling socket could not be established, statusCode=%d",n.statusCode);o.destroy();var s=new Error("tunneling socket could not be established, "+"statusCode="+n.statusCode);s.code="ECONNRESET";e.request.emit("error",s);r.removeSocket(i);return}if(d.length>0){u("got illegal response body from proxy");o.destroy();var s=new Error("got illegal response body from proxy");s.code="ECONNRESET";e.request.emit("error",s);r.removeSocket(i);return}u("tunneling connection has established");r.sockets[r.sockets.indexOf(i)]=o;return a(o)}function onError(a){p.removeAllListeners();u("tunneling socket could not be established, cause=%s\n",a.message,a.stack);var n=new Error("tunneling socket could not be established, "+"cause="+a.message);n.code="ECONNRESET";e.request.emit("error",n);r.removeSocket(i)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var a=this.sockets.indexOf(e);if(a===-1){return}this.sockets.splice(a,1);var r=this.requests.shift();if(r){this.createSocket(r,(function(e){r.request.onSocket(e)}))}};function createSecureSocket(e,a){var r=this;TunnelingAgent.prototype.createSocket.call(r,e,(function(i){var p=e.request.getHeader("host");var o=mergeOptions({},r.options,{socket:i,servername:p?p.replace(/:.*$/,""):e.host});var d=n.connect(0,o);r.sockets[r.sockets.indexOf(i)]=d;a(d)}))}function toOptions(e,a,r){if(typeof e==="string"){return{host:e,port:a,localAddress:r}}return e}function mergeOptions(e){for(var a=1,r=arguments.length;a<r;++a){var i=arguments[a];if(typeof i==="object"){var n=Object.keys(i);for(var p=0,o=n.length;p<o;++p){var d=n[p];if(i[d]!==undefined){e[d]=i[d]}}}}return e}var u;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){u=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{u=function(){}}a.debug=u},8706:function(e){(function(a){"use strict";var r=[null,0,{}];var i=10;var n=44032,p=4352,o=4449,d=4519,s=19,l=21,u=28;var m=l*u;var c=s*m;var UChar=function(e,a){this.codepoint=e;this.feature=a};var h={};var v=[];for(var g=0;g<=255;++g){v[g]=0}function fromCache(e,a,r){var n=h[a];if(!n){n=e(a,r);if(!!n.feature&&++v[a>>8&255]>i){h[a]=n}}return n}function fromData(e,a,i){var n=a&65280;var p=UChar.udata[n]||{};var o=p[a];return o?new UChar(a,o):new UChar(a,r)}function fromCpOnly(e,a,r){return!!r?e(a,r):new UChar(a,null)}function fromRuleBasedJamo(e,a,r){var i;if(a<p||p+s<=a&&a<n||n+c<a){return e(a,r)}if(p<=a&&a<p+s){var h={};var v=(a-p)*l;for(i=0;i<l;++i){h[o+i]=n+u*(i+v)}return new UChar(a,[,,h])}var g=a-n;var y=g%u;var w=[];if(y!==0){w[0]=[n+g-y,d+y]}else{w[0]=[p+Math.floor(g/m),o+Math.floor(g%m/u)];w[2]={};for(i=1;i<u;++i){w[2][d+i]=a+i}}return new UChar(a,w)}function fromCpFilter(e,a,i){return a<60||13311<a&&a<42607?new UChar(a,r):e(a,i)}var y=[fromCpFilter,fromCache,fromCpOnly,fromRuleBasedJamo,fromData];UChar.fromCharCode=y.reduceRight((function(e,a){return function(r,i){return a(e,r,i)}}),null);UChar.isHighSurrogate=function(e){return e>=55296&&e<=56319};UChar.isLowSurrogate=function(e){return e>=56320&&e<=57343};UChar.prototype.prepFeature=function(){if(!this.feature){this.feature=UChar.fromCharCode(this.codepoint,true).feature}};UChar.prototype.toString=function(){if(this.codepoint<65536){return String.fromCharCode(this.codepoint)}else{var e=this.codepoint-65536;return String.fromCharCode(Math.floor(e/1024)+55296,e%1024+56320)}};UChar.prototype.getDecomp=function(){this.prepFeature();return this.feature[0]||null};UChar.prototype.isCompatibility=function(){this.prepFeature();return!!this.feature[1]&&this.feature[1]&1<<8};UChar.prototype.isExclude=function(){this.prepFeature();return!!this.feature[1]&&this.feature[1]&1<<9};UChar.prototype.getCanonicalClass=function(){this.prepFeature();return!!this.feature[1]?this.feature[1]&255:0};UChar.prototype.getComposite=function(e){this.prepFeature();if(!this.feature[2]){return null}var a=this.feature[2][e.codepoint];return a?UChar.fromCharCode(a):null};var UCharIterator=function(e){this.str=e;this.cursor=0};UCharIterator.prototype.next=function(){if(!!this.str&&this.cursor<this.str.length){var e=this.str.charCodeAt(this.cursor++);var a;if(UChar.isHighSurrogate(e)&&this.cursor<this.str.length&&UChar.isLowSurrogate(a=this.str.charCodeAt(this.cursor))){e=(e-55296)*1024+(a-56320)+65536;++this.cursor}return UChar.fromCharCode(e)}else{this.str=null;return null}};var RecursDecompIterator=function(e,a){this.it=e;this.canonical=a;this.resBuf=[]};RecursDecompIterator.prototype.next=function(){function recursiveDecomp(e,a){var r=a.getDecomp();if(!!r&&!(e&&a.isCompatibility())){var i=[];for(var n=0;n<r.length;++n){var p=recursiveDecomp(e,UChar.fromCharCode(r[n]));i=i.concat(p)}return i}else{return[a]}}if(this.resBuf.length===0){var e=this.it.next();if(!e){return null}this.resBuf=recursiveDecomp(this.canonical,e)}return this.resBuf.shift()};var DecompIterator=function(e){this.it=e;this.resBuf=[]};DecompIterator.prototype.next=function(){var e;if(this.resBuf.length===0){do{var a=this.it.next();if(!a){break}e=a.getCanonicalClass();var r=this.resBuf.length;if(e!==0){for(;r>0;--r){var i=this.resBuf[r-1];var n=i.getCanonicalClass();if(n<=e){break}}}this.resBuf.splice(r,0,a)}while(e!==0)}return this.resBuf.shift()};var CompIterator=function(e){this.it=e;this.procBuf=[];this.resBuf=[];this.lastClass=null};CompIterator.prototype.next=function(){while(this.resBuf.length===0){var e=this.it.next();if(!e){this.resBuf=this.procBuf;this.procBuf=[];break}if(this.procBuf.length===0){this.lastClass=e.getCanonicalClass();this.procBuf.push(e)}else{var a=this.procBuf[0];var r=a.getComposite(e);var i=e.getCanonicalClass();if(!!r&&(this.lastClass<i||this.lastClass===0)){this.procBuf[0]=r}else{if(i===0){this.resBuf=this.procBuf;this.procBuf=[]}this.lastClass=i;this.procBuf.push(e)}}}return this.resBuf.shift()};var createIterator=function(e,a){switch(e){case"NFD":return new DecompIterator(new RecursDecompIterator(new UCharIterator(a),true));case"NFKD":return new DecompIterator(new RecursDecompIterator(new UCharIterator(a),false));case"NFC":return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(a),true)));case"NFKC":return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(a),false)))}throw e+" is invalid"};var normalize=function(e,a){var r=createIterator(e,a);var i="";var n;while(!!(n=r.next())){i+=n.toString()}return i};function nfd(e){return normalize("NFD",e)}function nfkd(e){return normalize("NFKD",e)}function nfc(e){return normalize("NFC",e)}function nfkc(e){return normalize("NFKC",e)}UChar.udata={0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8e3,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},5632:{71231:[,9],71350:[,9],71351:[,7]},5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},6144:{6313:[,228]},6400:{6457:[,222],6458:[,230],6459:[,220]},6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8e3:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8e3,768]],8003:[[8001,768]],8004:[[8e3,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},8960:{9001:[[12296]],9002:[[12297]]},9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},11776:{11935:[[27597],256],12019:[[40863],256]},12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[3e4],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13e3:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},42752:{42864:[[42863],256],43e3:[[294],256],43001:[[339],256]},43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},48128:{113822:[,1]},53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},53760:{119362:[,230],119363:[,230],119364:[,230]},54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],12e4:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},61952:{127488:[[12411,12363],256],127489:[[12467,12467],256],127490:[[12469],256],127504:[[25163],256],127505:[[23383],256],127506:[[21452],256],127507:[[12487],256],127508:[[20108],256],127509:[[22810],256],127510:[[35299],256],127511:[[22825],256],127512:[[20132],256],127513:[[26144],256],127514:[[28961],256],127515:[[26009],256],127516:[[21069],256],127517:[[24460],256],127518:[[20877],256],127519:[[26032],256],127520:[[21021],256],127521:[[32066],256],127522:[[29983],256],127523:[[36009],256],127524:[[22768],256],127525:[[21561],256],127526:[[28436],256],127527:[[25237],256],127528:[[25429],256],127529:[[19968],256],127530:[[19977],256],127531:[[36938],256],127532:[[24038],256],127533:[[20013],256],127534:[[21491],256],127535:[[25351],256],127536:[[36208],256],127537:[[25171],256],127538:[[31105],256],127539:[[31354],256],127540:[[21512],256],127541:[[28288],256],127542:[[26377],256],127543:[[26376],256],127544:[[30003],256],127545:[[21106],256],127546:[[21942],256],127552:[[12308,26412,12309],256],127553:[[12308,19977,12309],256],127554:[[12308,20108,12309],256],127555:[[12308,23433,12309],256],127556:[[12308,28857,12309],256],127557:[[12308,25171,12309],256],127558:[[12308,30423,12309],256],127559:[[12308,21213,12309],256],127560:[[12308,25943,12309],256],127568:[[24471],256],127569:[[21487],256]},63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23e3]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149e3]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32e3]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195e3:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},64e3:{64e3:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[4e4]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}};var w={nfc:nfc,nfd:nfd,nfkc:nfkc,nfkd:nfkd};if(true){e.exports=w}else{}w.shimApplied=false;if(!String.prototype.normalize){Object.defineProperty(String.prototype,"normalize",{enumerable:false,configurable:true,writable:true,value:function normalize(){var e=""+this;var a=arguments[0]===undefined?"NFC":arguments[0];if(this===null||this===undefined){throw new TypeError("Cannot call method on "+Object.prototype.toString.call(this))}if(a==="NFC"){return w.nfc(e)}else if(a==="NFD"){return w.nfd(e)}else if(a==="NFKC"){return w.nfkc(e)}else if(a==="NFKD"){return w.nfkd(e)}else{throw new RangeError("Invalid normalization form: "+a)}}});w.shimApplied=true}})(this)},2940:e=>{e.exports=wrappy;function wrappy(e,a){if(e&&a)return wrappy(e)(a);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach((function(a){wrapper[a]=e[a]}));return wrapper;function wrapper(){var a=new Array(arguments.length);for(var r=0;r<a.length;r++){a[r]=arguments[r]}var i=e.apply(this,a);var n=a[a.length-1];if(typeof i==="function"&&i!==n){Object.keys(n).forEach((function(e){i[e]=n[e]}))}return i}}},8229:function(e){(function(){var a,r,i,n,p,o,d=[].slice,s={}.hasOwnProperty;a=function(){var e,a,r,i,p,o;o=arguments[0],p=2<=arguments.length?d.call(arguments,1):[];if(n(Object.assign)){Object.assign.apply(null,arguments)}else{for(e=0,r=p.length;e<r;e++){i=p[e];if(i!=null){for(a in i){if(!s.call(i,a))continue;o[a]=i[a]}}}}return o};n=function(e){return!!e&&Object.prototype.toString.call(e)==="[object Function]"};p=function(e){var a;return!!e&&((a=typeof e)==="function"||a==="object")};r=function(e){if(n(Array.isArray)){return Array.isArray(e)}else{return Object.prototype.toString.call(e)==="[object Array]"}};i=function(e){var a;if(r(e)){return!e.length}else{for(a in e){if(!s.call(e,a))continue;return false}return true}};o=function(e){var a,r;return p(e)&&(r=Object.getPrototypeOf(e))&&(a=r.constructor)&&typeof a==="function"&&a instanceof a&&Function.prototype.toString.call(a)===Function.prototype.toString.call(Object)};e.exports.assign=a;e.exports.isFunction=n;e.exports.isObject=p;e.exports.isArray=r;e.exports.isEmpty=i;e.exports.isPlainObject=o}).call(this)},8376:function(e){(function(){var a;e.exports=a=function(){function XMLAttribute(e,a,r){this.options=e.options;this.stringify=e.stringify;if(a==null){throw new Error("Missing attribute name of element "+e.name)}if(r==null){throw new Error("Missing attribute value for attribute "+a+" of element "+e.name)}this.name=this.stringify.attName(a);this.value=this.stringify.attValue(r)}XMLAttribute.prototype.clone=function(){return Object.create(this)};XMLAttribute.prototype.toString=function(e){return this.options.writer.set(e).attribute(this)};return XMLAttribute}()}).call(this)},333:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;i=r(7608);e.exports=a=function(e){extend(XMLCData,e);function XMLCData(e,a){XMLCData.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing CDATA text")}this.text=this.stringify.cdata(a)}XMLCData.prototype.clone=function(){return Object.create(this)};XMLCData.prototype.toString=function(e){return this.options.writer.set(e).cdata(this)};return XMLCData}(i)}).call(this)},4407:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;i=r(7608);e.exports=a=function(e){extend(XMLComment,e);function XMLComment(e,a){XMLComment.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing comment text")}this.text=this.stringify.comment(a)}XMLComment.prototype.clone=function(){return Object.create(this)};XMLComment.prototype.toString=function(e){return this.options.writer.set(e).comment(this)};return XMLComment}(i)}).call(this)},1015:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;i=r(7608);e.exports=a=function(e){extend(XMLDTDAttList,e);function XMLDTDAttList(e,a,r,i,n,p){XMLDTDAttList.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing DTD element name")}if(r==null){throw new Error("Missing DTD attribute name")}if(!i){throw new Error("Missing DTD attribute type")}if(!n){throw new Error("Missing DTD attribute default")}if(n.indexOf("#")!==0){n="#"+n}if(!n.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)){throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT")}if(p&&!n.match(/^(#FIXED|#DEFAULT)$/)){throw new Error("Default value only applies to #FIXED or #DEFAULT")}this.elementName=this.stringify.eleName(a);this.attributeName=this.stringify.attName(r);this.attributeType=this.stringify.dtdAttType(i);this.defaultValue=this.stringify.dtdAttDefault(p);this.defaultValueType=n}XMLDTDAttList.prototype.toString=function(e){return this.options.writer.set(e).dtdAttList(this)};return XMLDTDAttList}(i)}).call(this)},2421:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;i=r(7608);e.exports=a=function(e){extend(XMLDTDElement,e);function XMLDTDElement(e,a,r){XMLDTDElement.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing DTD element name")}if(!r){r="(#PCDATA)"}if(Array.isArray(r)){r="("+r.join(",")+")"}this.name=this.stringify.eleName(a);this.value=this.stringify.dtdElementValue(r)}XMLDTDElement.prototype.toString=function(e){return this.options.writer.set(e).dtdElement(this)};return XMLDTDElement}(i)}).call(this)},53:function(e,a,r){(function(){var a,i,n,extend=function(e,a){for(var r in a){if(p.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},p={}.hasOwnProperty;n=r(8229).isObject;i=r(7608);e.exports=a=function(e){extend(XMLDTDEntity,e);function XMLDTDEntity(e,a,r,i){XMLDTDEntity.__super__.constructor.call(this,e);if(r==null){throw new Error("Missing entity name")}if(i==null){throw new Error("Missing entity value")}this.pe=!!a;this.name=this.stringify.eleName(r);if(!n(i)){this.value=this.stringify.dtdEntityValue(i)}else{if(!i.pubID&&!i.sysID){throw new Error("Public and/or system identifiers are required for an external entity")}if(i.pubID&&!i.sysID){throw new Error("System identifier is required for a public external entity")}if(i.pubID!=null){this.pubID=this.stringify.dtdPubID(i.pubID)}if(i.sysID!=null){this.sysID=this.stringify.dtdSysID(i.sysID)}if(i.nData!=null){this.nData=this.stringify.dtdNData(i.nData)}if(this.pe&&this.nData){throw new Error("Notation declaration is not allowed in a parameter entity")}}}XMLDTDEntity.prototype.toString=function(e){return this.options.writer.set(e).dtdEntity(this)};return XMLDTDEntity}(i)}).call(this)},2837:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;i=r(7608);e.exports=a=function(e){extend(XMLDTDNotation,e);function XMLDTDNotation(e,a,r){XMLDTDNotation.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing notation name")}if(!r.pubID&&!r.sysID){throw new Error("Public or system identifiers are required for an external entity")}this.name=this.stringify.eleName(a);if(r.pubID!=null){this.pubID=this.stringify.dtdPubID(r.pubID)}if(r.sysID!=null){this.sysID=this.stringify.dtdSysID(r.sysID)}}XMLDTDNotation.prototype.toString=function(e){return this.options.writer.set(e).dtdNotation(this)};return XMLDTDNotation}(i)}).call(this)},6364:function(e,a,r){(function(){var a,i,n,extend=function(e,a){for(var r in a){if(p.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},p={}.hasOwnProperty;n=r(8229).isObject;i=r(7608);e.exports=a=function(e){extend(XMLDeclaration,e);function XMLDeclaration(e,a,r,i){var p;XMLDeclaration.__super__.constructor.call(this,e);if(n(a)){p=a,a=p.version,r=p.encoding,i=p.standalone}if(!a){a="1.0"}this.version=this.stringify.xmlVersion(a);if(r!=null){this.encoding=this.stringify.xmlEncoding(r)}if(i!=null){this.standalone=this.stringify.xmlStandalone(i)}}XMLDeclaration.prototype.toString=function(e){return this.options.writer.set(e).declaration(this)};return XMLDeclaration}(i)}).call(this)},1801:function(e,a,r){(function(){var a,i,n,p,o,d,s,extend=function(e,a){for(var r in a){if(l.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},l={}.hasOwnProperty;s=r(8229).isObject;d=r(7608);a=r(1015);n=r(53);i=r(2421);p=r(2837);e.exports=o=function(e){extend(XMLDocType,e);function XMLDocType(e,a,r){var i,n;XMLDocType.__super__.constructor.call(this,e);this.documentObject=e;if(s(a)){i=a,a=i.pubID,r=i.sysID}if(r==null){n=[a,r],r=n[0],a=n[1]}if(a!=null){this.pubID=this.stringify.dtdPubID(a)}if(r!=null){this.sysID=this.stringify.dtdSysID(r)}}XMLDocType.prototype.element=function(e,a){var r;r=new i(this,e,a);this.children.push(r);return this};XMLDocType.prototype.attList=function(e,r,i,n,p){var o;o=new a(this,e,r,i,n,p);this.children.push(o);return this};XMLDocType.prototype.entity=function(e,a){var r;r=new n(this,false,e,a);this.children.push(r);return this};XMLDocType.prototype.pEntity=function(e,a){var r;r=new n(this,true,e,a);this.children.push(r);return this};XMLDocType.prototype.notation=function(e,a){var r;r=new p(this,e,a);this.children.push(r);return this};XMLDocType.prototype.toString=function(e){return this.options.writer.set(e).docType(this)};XMLDocType.prototype.ele=function(e,a){return this.element(e,a)};XMLDocType.prototype.att=function(e,a,r,i,n){return this.attList(e,a,r,i,n)};XMLDocType.prototype.ent=function(e,a){return this.entity(e,a)};XMLDocType.prototype.pent=function(e,a){return this.pEntity(e,a)};XMLDocType.prototype.not=function(e,a){return this.notation(e,a)};XMLDocType.prototype.up=function(){return this.root()||this.documentObject};return XMLDocType}(d)}).call(this)},3730:function(e,a,r){(function(){var a,i,n,p,o,extend=function(e,a){for(var r in a){if(d.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},d={}.hasOwnProperty;o=r(8229).isPlainObject;i=r(7608);p=r(8594);n=r(5913);e.exports=a=function(e){extend(XMLDocument,e);function XMLDocument(e){XMLDocument.__super__.constructor.call(this,null);e||(e={});if(!e.writer){e.writer=new n}this.options=e;this.stringify=new p(e);this.isDocument=true}XMLDocument.prototype.end=function(e){var a;if(!e){e=this.options.writer}else if(o(e)){a=e;e=this.options.writer.set(a)}return e.document(this)};XMLDocument.prototype.toString=function(e){return this.options.writer.set(e).document(this)};return XMLDocument}(i)}).call(this)},7356:function(e,a,r){(function(){var a,i,n,p,o,d,s,l,u,m,c,h,v,g,y,w,b,S,_,N,E={}.hasOwnProperty;N=r(8229),S=N.isObject,b=N.isFunction,_=N.isPlainObject;c=r(9437);i=r(333);n=r(4407);v=r(6329);w=r(1318);h=r(6939);l=r(6364);u=r(1801);p=r(1015);d=r(53);o=r(2421);s=r(2837);a=r(8376);y=r(8594);g=r(5913);e.exports=m=function(){function XMLDocumentCB(e,a,r){var i;e||(e={});if(!e.writer){e.writer=new g(e)}else if(_(e.writer)){i=e.writer;e.writer=new g(i)}this.options=e;this.writer=e.writer;this.stringify=new y(e);this.onDataCallback=a||function(){};this.onEndCallback=r||function(){};this.currentNode=null;this.currentLevel=-1;this.openTags={};this.documentStarted=false;this.documentCompleted=false;this.root=null}XMLDocumentCB.prototype.node=function(e,a,r){var i;if(e==null){throw new Error("Missing node name")}if(this.root&&this.currentLevel===-1){throw new Error("Document can only have one root node")}this.openCurrent();e=e.valueOf();if(a==null){a={}}a=a.valueOf();if(!S(a)){i=[a,r],r=i[0],a=i[1]}this.currentNode=new c(this,e,a);this.currentNode.children=false;this.currentLevel++;this.openTags[this.currentLevel]=this.currentNode;if(r!=null){this.text(r)}return this};XMLDocumentCB.prototype.element=function(e,a,r){if(this.currentNode&&this.currentNode instanceof u){return this.dtdElement.apply(this,arguments)}else{return this.node(e,a,r)}};XMLDocumentCB.prototype.attribute=function(e,r){var i,n;if(!this.currentNode||this.currentNode.children){throw new Error("att() can only be used immediately after an ele() call in callback mode")}if(e!=null){e=e.valueOf()}if(S(e)){for(i in e){if(!E.call(e,i))continue;n=e[i];this.attribute(i,n)}}else{if(b(r)){r=r.apply()}if(!this.options.skipNullAttributes||r!=null){this.currentNode.attributes[e]=new a(this,e,r)}}return this};XMLDocumentCB.prototype.text=function(e){var a;this.openCurrent();a=new w(this,e);this.onData(this.writer.text(a,this.currentLevel+1));return this};XMLDocumentCB.prototype.cdata=function(e){var a;this.openCurrent();a=new i(this,e);this.onData(this.writer.cdata(a,this.currentLevel+1));return this};XMLDocumentCB.prototype.comment=function(e){var a;this.openCurrent();a=new n(this,e);this.onData(this.writer.comment(a,this.currentLevel+1));return this};XMLDocumentCB.prototype.raw=function(e){var a;this.openCurrent();a=new v(this,e);this.onData(this.writer.raw(a,this.currentLevel+1));return this};XMLDocumentCB.prototype.instruction=function(e,a){var r,i,n,p,o;this.openCurrent();if(e!=null){e=e.valueOf()}if(a!=null){a=a.valueOf()}if(Array.isArray(e)){for(r=0,p=e.length;r<p;r++){i=e[r];this.instruction(i)}}else if(S(e)){for(i in e){if(!E.call(e,i))continue;n=e[i];this.instruction(i,n)}}else{if(b(a)){a=a.apply()}o=new h(this,e,a);this.onData(this.writer.processingInstruction(o,this.currentLevel+1))}return this};XMLDocumentCB.prototype.declaration=function(e,a,r){var i;this.openCurrent();if(this.documentStarted){throw new Error("declaration() must be the first node")}i=new l(this,e,a,r);this.onData(this.writer.declaration(i,this.currentLevel+1));return this};XMLDocumentCB.prototype.doctype=function(e,a,r){this.openCurrent();if(e==null){throw new Error("Missing root node name")}if(this.root){throw new Error("dtd() must come before the root node")}this.currentNode=new u(this,a,r);this.currentNode.rootNodeName=e;this.currentNode.children=false;this.currentLevel++;this.openTags[this.currentLevel]=this.currentNode;return this};XMLDocumentCB.prototype.dtdElement=function(e,a){var r;this.openCurrent();r=new o(this,e,a);this.onData(this.writer.dtdElement(r,this.currentLevel+1));return this};XMLDocumentCB.prototype.attList=function(e,a,r,i,n){var o;this.openCurrent();o=new p(this,e,a,r,i,n);this.onData(this.writer.dtdAttList(o,this.currentLevel+1));return this};XMLDocumentCB.prototype.entity=function(e,a){var r;this.openCurrent();r=new d(this,false,e,a);this.onData(this.writer.dtdEntity(r,this.currentLevel+1));return this};XMLDocumentCB.prototype.pEntity=function(e,a){var r;this.openCurrent();r=new d(this,true,e,a);this.onData(this.writer.dtdEntity(r,this.currentLevel+1));return this};XMLDocumentCB.prototype.notation=function(e,a){var r;this.openCurrent();r=new s(this,e,a);this.onData(this.writer.dtdNotation(r,this.currentLevel+1));return this};XMLDocumentCB.prototype.up=function(){if(this.currentLevel<0){throw new Error("The document node has no parent")}if(this.currentNode){if(this.currentNode.children){this.closeNode(this.currentNode)}else{this.openNode(this.currentNode)}this.currentNode=null}else{this.closeNode(this.openTags[this.currentLevel])}delete this.openTags[this.currentLevel];this.currentLevel--;return this};XMLDocumentCB.prototype.end=function(){while(this.currentLevel>=0){this.up()}return this.onEnd()};XMLDocumentCB.prototype.openCurrent=function(){if(this.currentNode){this.currentNode.children=true;return this.openNode(this.currentNode)}};XMLDocumentCB.prototype.openNode=function(e){if(!e.isOpen){if(!this.root&&this.currentLevel===0&&e instanceof c){this.root=e}this.onData(this.writer.openNode(e,this.currentLevel));return e.isOpen=true}};XMLDocumentCB.prototype.closeNode=function(e){if(!e.isClosed){this.onData(this.writer.closeNode(e,this.currentLevel));return e.isClosed=true}};XMLDocumentCB.prototype.onData=function(e){this.documentStarted=true;return this.onDataCallback(e)};XMLDocumentCB.prototype.onEnd=function(){this.documentCompleted=true;return this.onEndCallback()};XMLDocumentCB.prototype.ele=function(){return this.element.apply(this,arguments)};XMLDocumentCB.prototype.nod=function(e,a,r){return this.node(e,a,r)};XMLDocumentCB.prototype.txt=function(e){return this.text(e)};XMLDocumentCB.prototype.dat=function(e){return this.cdata(e)};XMLDocumentCB.prototype.com=function(e){return this.comment(e)};XMLDocumentCB.prototype.ins=function(e,a){return this.instruction(e,a)};XMLDocumentCB.prototype.dec=function(e,a,r){return this.declaration(e,a,r)};XMLDocumentCB.prototype.dtd=function(e,a,r){return this.doctype(e,a,r)};XMLDocumentCB.prototype.e=function(e,a,r){return this.element(e,a,r)};XMLDocumentCB.prototype.n=function(e,a,r){return this.node(e,a,r)};XMLDocumentCB.prototype.t=function(e){return this.text(e)};XMLDocumentCB.prototype.d=function(e){return this.cdata(e)};XMLDocumentCB.prototype.c=function(e){return this.comment(e)};XMLDocumentCB.prototype.r=function(e){return this.raw(e)};XMLDocumentCB.prototype.i=function(e,a){return this.instruction(e,a)};XMLDocumentCB.prototype.att=function(){if(this.currentNode&&this.currentNode instanceof u){return this.attList.apply(this,arguments)}else{return this.attribute.apply(this,arguments)}};XMLDocumentCB.prototype.a=function(){if(this.currentNode&&this.currentNode instanceof u){return this.attList.apply(this,arguments)}else{return this.attribute.apply(this,arguments)}};XMLDocumentCB.prototype.ent=function(e,a){return this.entity(e,a)};XMLDocumentCB.prototype.pent=function(e,a){return this.pEntity(e,a)};XMLDocumentCB.prototype.not=function(e,a){return this.notation(e,a)};return XMLDocumentCB}()}).call(this)},9437:function(e,a,r){(function(){var a,i,n,p,o,d,extend=function(e,a){for(var r in a){if(s.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},s={}.hasOwnProperty;d=r(8229),o=d.isObject,p=d.isFunction;n=r(7608);a=r(8376);e.exports=i=function(e){extend(XMLElement,e);function XMLElement(e,a,r){XMLElement.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing element name")}this.name=this.stringify.eleName(a);this.attributes={};if(r!=null){this.attribute(r)}if(e.isDocument){this.isRoot=true;this.documentObject=e;e.rootObject=this}}XMLElement.prototype.clone=function(){var e,a,r,i;r=Object.create(this);if(r.isRoot){r.documentObject=null}r.attributes={};i=this.attributes;for(a in i){if(!s.call(i,a))continue;e=i[a];r.attributes[a]=e.clone()}r.children=[];this.children.forEach((function(e){var a;a=e.clone();a.parent=r;return r.children.push(a)}));return r};XMLElement.prototype.attribute=function(e,r){var i,n;if(e!=null){e=e.valueOf()}if(o(e)){for(i in e){if(!s.call(e,i))continue;n=e[i];this.attribute(i,n)}}else{if(p(r)){r=r.apply()}if(!this.options.skipNullAttributes||r!=null){this.attributes[e]=new a(this,e,r)}}return this};XMLElement.prototype.removeAttribute=function(e){var a,r,i;if(e==null){throw new Error("Missing attribute name")}e=e.valueOf();if(Array.isArray(e)){for(r=0,i=e.length;r<i;r++){a=e[r];delete this.attributes[a]}}else{delete this.attributes[e]}return this};XMLElement.prototype.toString=function(e){return this.options.writer.set(e).element(this)};XMLElement.prototype.att=function(e,a){return this.attribute(e,a)};XMLElement.prototype.a=function(e,a){return this.attribute(e,a)};return XMLElement}(n)}).call(this)},7608:function(e,a,r){(function(){var a,i,n,p,o,d,s,l,u,m,c,h,v,g={}.hasOwnProperty;v=r(8229),h=v.isObject,c=v.isFunction,m=v.isEmpty;o=null;a=null;i=null;n=null;p=null;l=null;u=null;s=null;e.exports=d=function(){function XMLNode(e){this.parent=e;if(this.parent){this.options=this.parent.options;this.stringify=this.parent.stringify}this.children=[];if(!o){o=r(9437);a=r(333);i=r(4407);n=r(6364);p=r(1801);l=r(6329);u=r(1318);s=r(6939)}}XMLNode.prototype.element=function(e,a,r){var i,n,p,o,d,s,l,u,v,y;s=null;if(a==null){a={}}a=a.valueOf();if(!h(a)){v=[a,r],r=v[0],a=v[1]}if(e!=null){e=e.valueOf()}if(Array.isArray(e)){for(p=0,l=e.length;p<l;p++){n=e[p];s=this.element(n)}}else if(c(e)){s=this.element(e.apply())}else if(h(e)){for(d in e){if(!g.call(e,d))continue;y=e[d];if(c(y)){y=y.apply()}if(h(y)&&m(y)){y=null}if(!this.options.ignoreDecorators&&this.stringify.convertAttKey&&d.indexOf(this.stringify.convertAttKey)===0){s=this.attribute(d.substr(this.stringify.convertAttKey.length),y)}else if(!this.options.separateArrayItems&&Array.isArray(y)){for(o=0,u=y.length;o<u;o++){n=y[o];i={};i[d]=n;s=this.element(i)}}else if(h(y)){s=this.element(d);s.element(y)}else{s=this.element(d,y)}}}else{if(!this.options.ignoreDecorators&&this.stringify.convertTextKey&&e.indexOf(this.stringify.convertTextKey)===0){s=this.text(r)}else if(!this.options.ignoreDecorators&&this.stringify.convertCDataKey&&e.indexOf(this.stringify.convertCDataKey)===0){s=this.cdata(r)}else if(!this.options.ignoreDecorators&&this.stringify.convertCommentKey&&e.indexOf(this.stringify.convertCommentKey)===0){s=this.comment(r)}else if(!this.options.ignoreDecorators&&this.stringify.convertRawKey&&e.indexOf(this.stringify.convertRawKey)===0){s=this.raw(r)}else if(!this.options.ignoreDecorators&&this.stringify.convertPIKey&&e.indexOf(this.stringify.convertPIKey)===0){s=this.instruction(e.substr(this.stringify.convertPIKey.length),r)}else{s=this.node(e,a,r)}}if(s==null){throw new Error("Could not create any elements with: "+e)}return s};XMLNode.prototype.insertBefore=function(e,a,r){var i,n,p;if(this.isRoot){throw new Error("Cannot insert elements at root level")}n=this.parent.children.indexOf(this);p=this.parent.children.splice(n);i=this.parent.element(e,a,r);Array.prototype.push.apply(this.parent.children,p);return i};XMLNode.prototype.insertAfter=function(e,a,r){var i,n,p;if(this.isRoot){throw new Error("Cannot insert elements at root level")}n=this.parent.children.indexOf(this);p=this.parent.children.splice(n+1);i=this.parent.element(e,a,r);Array.prototype.push.apply(this.parent.children,p);return i};XMLNode.prototype.remove=function(){var e,a;if(this.isRoot){throw new Error("Cannot remove the root element")}e=this.parent.children.indexOf(this);[].splice.apply(this.parent.children,[e,e-e+1].concat(a=[])),a;return this.parent};XMLNode.prototype.node=function(e,a,r){var i,n;if(e!=null){e=e.valueOf()}a||(a={});a=a.valueOf();if(!h(a)){n=[a,r],r=n[0],a=n[1]}i=new o(this,e,a);if(r!=null){i.text(r)}this.children.push(i);return i};XMLNode.prototype.text=function(e){var a;a=new u(this,e);this.children.push(a);return this};XMLNode.prototype.cdata=function(e){var r;r=new a(this,e);this.children.push(r);return this};XMLNode.prototype.comment=function(e){var a;a=new i(this,e);this.children.push(a);return this};XMLNode.prototype.commentBefore=function(e){var a,r,i;r=this.parent.children.indexOf(this);i=this.parent.children.splice(r);a=this.parent.comment(e);Array.prototype.push.apply(this.parent.children,i);return this};XMLNode.prototype.commentAfter=function(e){var a,r,i;r=this.parent.children.indexOf(this);i=this.parent.children.splice(r+1);a=this.parent.comment(e);Array.prototype.push.apply(this.parent.children,i);return this};XMLNode.prototype.raw=function(e){var a;a=new l(this,e);this.children.push(a);return this};XMLNode.prototype.instruction=function(e,a){var r,i,n,p,o;if(e!=null){e=e.valueOf()}if(a!=null){a=a.valueOf()}if(Array.isArray(e)){for(p=0,o=e.length;p<o;p++){r=e[p];this.instruction(r)}}else if(h(e)){for(r in e){if(!g.call(e,r))continue;i=e[r];this.instruction(r,i)}}else{if(c(a)){a=a.apply()}n=new s(this,e,a);this.children.push(n)}return this};XMLNode.prototype.instructionBefore=function(e,a){var r,i,n;i=this.parent.children.indexOf(this);n=this.parent.children.splice(i);r=this.parent.instruction(e,a);Array.prototype.push.apply(this.parent.children,n);return this};XMLNode.prototype.instructionAfter=function(e,a){var r,i,n;i=this.parent.children.indexOf(this);n=this.parent.children.splice(i+1);r=this.parent.instruction(e,a);Array.prototype.push.apply(this.parent.children,n);return this};XMLNode.prototype.declaration=function(e,a,r){var i,p;i=this.document();p=new n(i,e,a,r);if(i.children[0]instanceof n){i.children[0]=p}else{i.children.unshift(p)}return i.root()||i};XMLNode.prototype.doctype=function(e,a){var r,i,n,o,d,s,l,u,m,c;i=this.document();n=new p(i,e,a);m=i.children;for(o=d=0,l=m.length;d<l;o=++d){r=m[o];if(r instanceof p){i.children[o]=n;return n}}c=i.children;for(o=s=0,u=c.length;s<u;o=++s){r=c[o];if(r.isRoot){i.children.splice(o,0,n);return n}}i.children.push(n);return n};XMLNode.prototype.up=function(){if(this.isRoot){throw new Error("The root node has no parent. Use doc() if you need to get the document object.")}return this.parent};XMLNode.prototype.root=function(){var e;e=this;while(e){if(e.isDocument){return e.rootObject}else if(e.isRoot){return e}else{e=e.parent}}};XMLNode.prototype.document=function(){var e;e=this;while(e){if(e.isDocument){return e}else{e=e.parent}}};XMLNode.prototype.end=function(e){return this.document().end(e)};XMLNode.prototype.prev=function(){var e;e=this.parent.children.indexOf(this);if(e<1){throw new Error("Already at the first node")}return this.parent.children[e-1]};XMLNode.prototype.next=function(){var e;e=this.parent.children.indexOf(this);if(e===-1||e===this.parent.children.length-1){throw new Error("Already at the last node")}return this.parent.children[e+1]};XMLNode.prototype.importDocument=function(e){var a;a=e.root().clone();a.parent=this;a.isRoot=false;this.children.push(a);return this};XMLNode.prototype.ele=function(e,a,r){return this.element(e,a,r)};XMLNode.prototype.nod=function(e,a,r){return this.node(e,a,r)};XMLNode.prototype.txt=function(e){return this.text(e)};XMLNode.prototype.dat=function(e){return this.cdata(e)};XMLNode.prototype.com=function(e){return this.comment(e)};XMLNode.prototype.ins=function(e,a){return this.instruction(e,a)};XMLNode.prototype.doc=function(){return this.document()};XMLNode.prototype.dec=function(e,a,r){return this.declaration(e,a,r)};XMLNode.prototype.dtd=function(e,a){return this.doctype(e,a)};XMLNode.prototype.e=function(e,a,r){return this.element(e,a,r)};XMLNode.prototype.n=function(e,a,r){return this.node(e,a,r)};XMLNode.prototype.t=function(e){return this.text(e)};XMLNode.prototype.d=function(e){return this.cdata(e)};XMLNode.prototype.c=function(e){return this.comment(e)};XMLNode.prototype.r=function(e){return this.raw(e)};XMLNode.prototype.i=function(e,a){return this.instruction(e,a)};XMLNode.prototype.u=function(){return this.up()};XMLNode.prototype.importXMLBuilder=function(e){return this.importDocument(e)};return XMLNode}()}).call(this)},6939:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;a=r(7608);e.exports=i=function(e){extend(XMLProcessingInstruction,e);function XMLProcessingInstruction(e,a,r){XMLProcessingInstruction.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing instruction target")}this.target=this.stringify.insTarget(a);if(r){this.value=this.stringify.insValue(r)}}XMLProcessingInstruction.prototype.clone=function(){return Object.create(this)};XMLProcessingInstruction.prototype.toString=function(e){return this.options.writer.set(e).processingInstruction(this)};return XMLProcessingInstruction}(a)}).call(this)},6329:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;a=r(7608);e.exports=i=function(e){extend(XMLRaw,e);function XMLRaw(e,a){XMLRaw.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing raw text")}this.value=this.stringify.raw(a)}XMLRaw.prototype.clone=function(){return Object.create(this)};XMLRaw.prototype.toString=function(e){return this.options.writer.set(e).raw(this)};return XMLRaw}(a)}).call(this)},8601:function(e,a,r){(function(){var a,i,n,p,o,d,s,l,u,m,c,h,v,g,extend=function(e,a){for(var r in a){if(y.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},y={}.hasOwnProperty;s=r(6364);l=r(1801);a=r(333);i=r(4407);u=r(9437);c=r(6329);v=r(1318);m=r(6939);n=r(1015);p=r(2421);o=r(53);d=r(2837);g=r(6752);e.exports=h=function(e){extend(XMLStreamWriter,e);function XMLStreamWriter(e,a){XMLStreamWriter.__super__.constructor.call(this,a);this.stream=e}XMLStreamWriter.prototype.document=function(e){var a,r,n,p,o,d,u,c;d=e.children;for(r=0,p=d.length;r<p;r++){a=d[r];a.isLastRootNode=false}e.children[e.children.length-1].isLastRootNode=true;u=e.children;c=[];for(n=0,o=u.length;n<o;n++){a=u[n];switch(false){case!(a instanceof s):c.push(this.declaration(a));break;case!(a instanceof l):c.push(this.docType(a));break;case!(a instanceof i):c.push(this.comment(a));break;case!(a instanceof m):c.push(this.processingInstruction(a));break;default:c.push(this.element(a))}}return c};XMLStreamWriter.prototype.attribute=function(e){return this.stream.write(" "+e.name+'="'+e.value+'"')};XMLStreamWriter.prototype.cdata=function(e,a){return this.stream.write(this.space(a)+"<![CDATA["+e.text+"]]>"+this.endline(e))};XMLStreamWriter.prototype.comment=function(e,a){return this.stream.write(this.space(a)+"\x3c!-- "+e.text+" --\x3e"+this.endline(e))};XMLStreamWriter.prototype.declaration=function(e,a){this.stream.write(this.space(a));this.stream.write('<?xml version="'+e.version+'"');if(e.encoding!=null){this.stream.write(' encoding="'+e.encoding+'"')}if(e.standalone!=null){this.stream.write(' standalone="'+e.standalone+'"')}this.stream.write(this.spacebeforeslash+"?>");return this.stream.write(this.endline(e))};XMLStreamWriter.prototype.docType=function(e,r){var s,l,u,c;r||(r=0);this.stream.write(this.space(r));this.stream.write("<!DOCTYPE "+e.root().name);if(e.pubID&&e.sysID){this.stream.write(' PUBLIC "'+e.pubID+'" "'+e.sysID+'"')}else if(e.sysID){this.stream.write(' SYSTEM "'+e.sysID+'"')}if(e.children.length>0){this.stream.write(" [");this.stream.write(this.endline(e));c=e.children;for(l=0,u=c.length;l<u;l++){s=c[l];switch(false){case!(s instanceof n):this.dtdAttList(s,r+1);break;case!(s instanceof p):this.dtdElement(s,r+1);break;case!(s instanceof o):this.dtdEntity(s,r+1);break;case!(s instanceof d):this.dtdNotation(s,r+1);break;case!(s instanceof a):this.cdata(s,r+1);break;case!(s instanceof i):this.comment(s,r+1);break;case!(s instanceof m):this.processingInstruction(s,r+1);break;default:throw new Error("Unknown DTD node type: "+s.constructor.name)}}this.stream.write("]")}this.stream.write(this.spacebeforeslash+">");return this.stream.write(this.endline(e))};XMLStreamWriter.prototype.element=function(e,r){var n,p,o,d,s,l,h,g;r||(r=0);g=this.space(r);this.stream.write(g+"<"+e.name);l=e.attributes;for(s in l){if(!y.call(l,s))continue;n=l[s];this.attribute(n)}if(e.children.length===0||e.children.every((function(e){return e.value===""}))){if(this.allowEmpty){this.stream.write("></"+e.name+">")}else{this.stream.write(this.spacebeforeslash+"/>")}}else if(this.pretty&&e.children.length===1&&e.children[0].value!=null){this.stream.write(">");this.stream.write(e.children[0].value);this.stream.write("</"+e.name+">")}else{this.stream.write(">"+this.newline);h=e.children;for(o=0,d=h.length;o<d;o++){p=h[o];switch(false){case!(p instanceof a):this.cdata(p,r+1);break;case!(p instanceof i):this.comment(p,r+1);break;case!(p instanceof u):this.element(p,r+1);break;case!(p instanceof c):this.raw(p,r+1);break;case!(p instanceof v):this.text(p,r+1);break;case!(p instanceof m):this.processingInstruction(p,r+1);break;default:throw new Error("Unknown XML node type: "+p.constructor.name)}}this.stream.write(g+"</"+e.name+">")}return this.stream.write(this.endline(e))};XMLStreamWriter.prototype.processingInstruction=function(e,a){this.stream.write(this.space(a)+"<?"+e.target);if(e.value){this.stream.write(" "+e.value)}return this.stream.write(this.spacebeforeslash+"?>"+this.endline(e))};XMLStreamWriter.prototype.raw=function(e,a){return this.stream.write(this.space(a)+e.value+this.endline(e))};XMLStreamWriter.prototype.text=function(e,a){return this.stream.write(this.space(a)+e.value+this.endline(e))};XMLStreamWriter.prototype.dtdAttList=function(e,a){this.stream.write(this.space(a)+"<!ATTLIST "+e.elementName+" "+e.attributeName+" "+e.attributeType);if(e.defaultValueType!=="#DEFAULT"){this.stream.write(" "+e.defaultValueType)}if(e.defaultValue){this.stream.write(' "'+e.defaultValue+'"')}return this.stream.write(this.spacebeforeslash+">"+this.endline(e))};XMLStreamWriter.prototype.dtdElement=function(e,a){this.stream.write(this.space(a)+"<!ELEMENT "+e.name+" "+e.value);return this.stream.write(this.spacebeforeslash+">"+this.endline(e))};XMLStreamWriter.prototype.dtdEntity=function(e,a){this.stream.write(this.space(a)+"<!ENTITY");if(e.pe){this.stream.write(" %")}this.stream.write(" "+e.name);if(e.value){this.stream.write(' "'+e.value+'"')}else{if(e.pubID&&e.sysID){this.stream.write(' PUBLIC "'+e.pubID+'" "'+e.sysID+'"')}else if(e.sysID){this.stream.write(' SYSTEM "'+e.sysID+'"')}if(e.nData){this.stream.write(" NDATA "+e.nData)}}return this.stream.write(this.spacebeforeslash+">"+this.endline(e))};XMLStreamWriter.prototype.dtdNotation=function(e,a){this.stream.write(this.space(a)+"<!NOTATION "+e.name);if(e.pubID&&e.sysID){this.stream.write(' PUBLIC "'+e.pubID+'" "'+e.sysID+'"')}else if(e.pubID){this.stream.write(' PUBLIC "'+e.pubID+'"')}else if(e.sysID){this.stream.write(' SYSTEM "'+e.sysID+'"')}return this.stream.write(this.spacebeforeslash+">"+this.endline(e))};XMLStreamWriter.prototype.endline=function(e){if(!e.isLastRootNode){return this.newline}else{return""}};return XMLStreamWriter}(g)}).call(this)},5913:function(e,a,r){(function(){var a,i,n,p,o,d,s,l,u,m,c,h,v,g,extend=function(e,a){for(var r in a){if(y.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},y={}.hasOwnProperty;s=r(6364);l=r(1801);a=r(333);i=r(4407);u=r(9437);c=r(6329);v=r(1318);m=r(6939);n=r(1015);p=r(2421);o=r(53);d=r(2837);g=r(6752);e.exports=h=function(e){extend(XMLStringWriter,e);function XMLStringWriter(e){XMLStringWriter.__super__.constructor.call(this,e)}XMLStringWriter.prototype.document=function(e){var a,r,n,p,o;this.textispresent=false;p="";o=e.children;for(r=0,n=o.length;r<n;r++){a=o[r];p+=function(){switch(false){case!(a instanceof s):return this.declaration(a);case!(a instanceof l):return this.docType(a);case!(a instanceof i):return this.comment(a);case!(a instanceof m):return this.processingInstruction(a);default:return this.element(a,0)}}.call(this)}if(this.pretty&&p.slice(-this.newline.length)===this.newline){p=p.slice(0,-this.newline.length)}return p};XMLStringWriter.prototype.attribute=function(e){return" "+e.name+'="'+e.value+'"'};XMLStringWriter.prototype.cdata=function(e,a){return this.space(a)+"<![CDATA["+e.text+"]]>"+this.newline};XMLStringWriter.prototype.comment=function(e,a){return this.space(a)+"\x3c!-- "+e.text+" --\x3e"+this.newline};XMLStringWriter.prototype.declaration=function(e,a){var r;r=this.space(a);r+='<?xml version="'+e.version+'"';if(e.encoding!=null){r+=' encoding="'+e.encoding+'"'}if(e.standalone!=null){r+=' standalone="'+e.standalone+'"'}r+=this.spacebeforeslash+"?>";r+=this.newline;return r};XMLStringWriter.prototype.docType=function(e,r){var s,l,u,c,h;r||(r=0);c=this.space(r);c+="<!DOCTYPE "+e.root().name;if(e.pubID&&e.sysID){c+=' PUBLIC "'+e.pubID+'" "'+e.sysID+'"'}else if(e.sysID){c+=' SYSTEM "'+e.sysID+'"'}if(e.children.length>0){c+=" [";c+=this.newline;h=e.children;for(l=0,u=h.length;l<u;l++){s=h[l];c+=function(){switch(false){case!(s instanceof n):return this.dtdAttList(s,r+1);case!(s instanceof p):return this.dtdElement(s,r+1);case!(s instanceof o):return this.dtdEntity(s,r+1);case!(s instanceof d):return this.dtdNotation(s,r+1);case!(s instanceof a):return this.cdata(s,r+1);case!(s instanceof i):return this.comment(s,r+1);case!(s instanceof m):return this.processingInstruction(s,r+1);default:throw new Error("Unknown DTD node type: "+s.constructor.name)}}.call(this)}c+="]"}c+=this.spacebeforeslash+">";c+=this.newline;return c};XMLStringWriter.prototype.element=function(e,r){var n,p,o,d,s,l,h,g,w,b,S,_,N;r||(r=0);N=false;if(this.textispresent){this.newline="";this.pretty=false}else{this.newline=this.newlinedefault;this.pretty=this.prettydefault}_=this.space(r);g="";g+=_+"<"+e.name;w=e.attributes;for(h in w){if(!y.call(w,h))continue;n=w[h];g+=this.attribute(n)}if(e.children.length===0||e.children.every((function(e){return e.value===""}))){if(this.allowEmpty){g+="></"+e.name+">"+this.newline}else{g+=this.spacebeforeslash+"/>"+this.newline}}else if(this.pretty&&e.children.length===1&&e.children[0].value!=null){g+=">";g+=e.children[0].value;g+="</"+e.name+">"+this.newline}else{if(this.dontprettytextnodes){b=e.children;for(o=0,s=b.length;o<s;o++){p=b[o];if(p.value!=null){this.textispresent++;N=true;break}}}if(this.textispresent){this.newline="";this.pretty=false;_=this.space(r)}g+=">"+this.newline;S=e.children;for(d=0,l=S.length;d<l;d++){p=S[d];g+=function(){switch(false){case!(p instanceof a):return this.cdata(p,r+1);case!(p instanceof i):return this.comment(p,r+1);case!(p instanceof u):return this.element(p,r+1);case!(p instanceof c):return this.raw(p,r+1);case!(p instanceof v):return this.text(p,r+1);case!(p instanceof m):return this.processingInstruction(p,r+1);default:throw new Error("Unknown XML node type: "+p.constructor.name)}}.call(this)}if(N){this.textispresent--}if(!this.textispresent){this.newline=this.newlinedefault;this.pretty=this.prettydefault}g+=_+"</"+e.name+">"+this.newline}return g};XMLStringWriter.prototype.processingInstruction=function(e,a){var r;r=this.space(a)+"<?"+e.target;if(e.value){r+=" "+e.value}r+=this.spacebeforeslash+"?>"+this.newline;return r};XMLStringWriter.prototype.raw=function(e,a){return this.space(a)+e.value+this.newline};XMLStringWriter.prototype.text=function(e,a){return this.space(a)+e.value+this.newline};XMLStringWriter.prototype.dtdAttList=function(e,a){var r;r=this.space(a)+"<!ATTLIST "+e.elementName+" "+e.attributeName+" "+e.attributeType;if(e.defaultValueType!=="#DEFAULT"){r+=" "+e.defaultValueType}if(e.defaultValue){r+=' "'+e.defaultValue+'"'}r+=this.spacebeforeslash+">"+this.newline;return r};XMLStringWriter.prototype.dtdElement=function(e,a){return this.space(a)+"<!ELEMENT "+e.name+" "+e.value+this.spacebeforeslash+">"+this.newline};XMLStringWriter.prototype.dtdEntity=function(e,a){var r;r=this.space(a)+"<!ENTITY";if(e.pe){r+=" %"}r+=" "+e.name;if(e.value){r+=' "'+e.value+'"'}else{if(e.pubID&&e.sysID){r+=' PUBLIC "'+e.pubID+'" "'+e.sysID+'"'}else if(e.sysID){r+=' SYSTEM "'+e.sysID+'"'}if(e.nData){r+=" NDATA "+e.nData}}r+=this.spacebeforeslash+">"+this.newline;return r};XMLStringWriter.prototype.dtdNotation=function(e,a){var r;r=this.space(a)+"<!NOTATION "+e.name;if(e.pubID&&e.sysID){r+=' PUBLIC "'+e.pubID+'" "'+e.sysID+'"'}else if(e.pubID){r+=' PUBLIC "'+e.pubID+'"'}else if(e.sysID){r+=' SYSTEM "'+e.sysID+'"'}r+=this.spacebeforeslash+">"+this.newline;return r};XMLStringWriter.prototype.openNode=function(e,a){var r,i,n,p;a||(a=0);if(e instanceof u){n=this.space(a)+"<"+e.name;p=e.attributes;for(i in p){if(!y.call(p,i))continue;r=p[i];n+=this.attribute(r)}n+=(e.children?">":"/>")+this.newline;return n}else{n=this.space(a)+"<!DOCTYPE "+e.rootNodeName;if(e.pubID&&e.sysID){n+=' PUBLIC "'+e.pubID+'" "'+e.sysID+'"'}else if(e.sysID){n+=' SYSTEM "'+e.sysID+'"'}n+=(e.children?" [":">")+this.newline;return n}};XMLStringWriter.prototype.closeNode=function(e,a){a||(a=0);switch(false){case!(e instanceof u):return this.space(a)+"</"+e.name+">"+this.newline;case!(e instanceof l):return this.space(a)+"]>"+this.newline}};return XMLStringWriter}(g)}).call(this)},8594:function(e){(function(){var a,bind=function(e,a){return function(){return e.apply(a,arguments)}},r={}.hasOwnProperty;e.exports=a=function(){function XMLStringifier(e){this.assertLegalChar=bind(this.assertLegalChar,this);var a,i,n;e||(e={});this.noDoubleEncoding=e.noDoubleEncoding;i=e.stringify||{};for(a in i){if(!r.call(i,a))continue;n=i[a];this[a]=n}}XMLStringifier.prototype.eleName=function(e){e=""+e||"";return this.assertLegalChar(e)};XMLStringifier.prototype.eleText=function(e){e=""+e||"";return this.assertLegalChar(this.elEscape(e))};XMLStringifier.prototype.cdata=function(e){e=""+e||"";e=e.replace("]]>","]]]]><![CDATA[>");return this.assertLegalChar(e)};XMLStringifier.prototype.comment=function(e){e=""+e||"";if(e.match(/--/)){throw new Error("Comment text cannot contain double-hypen: "+e)}return this.assertLegalChar(e)};XMLStringifier.prototype.raw=function(e){return""+e||""};XMLStringifier.prototype.attName=function(e){return e=""+e||""};XMLStringifier.prototype.attValue=function(e){e=""+e||"";return this.attEscape(e)};XMLStringifier.prototype.insTarget=function(e){return""+e||""};XMLStringifier.prototype.insValue=function(e){e=""+e||"";if(e.match(/\?>/)){throw new Error("Invalid processing instruction value: "+e)}return e};XMLStringifier.prototype.xmlVersion=function(e){e=""+e||"";if(!e.match(/1\.[0-9]+/)){throw new Error("Invalid version number: "+e)}return e};XMLStringifier.prototype.xmlEncoding=function(e){e=""+e||"";if(!e.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)){throw new Error("Invalid encoding: "+e)}return e};XMLStringifier.prototype.xmlStandalone=function(e){if(e){return"yes"}else{return"no"}};XMLStringifier.prototype.dtdPubID=function(e){return""+e||""};XMLStringifier.prototype.dtdSysID=function(e){return""+e||""};XMLStringifier.prototype.dtdElementValue=function(e){return""+e||""};XMLStringifier.prototype.dtdAttType=function(e){return""+e||""};XMLStringifier.prototype.dtdAttDefault=function(e){if(e!=null){return""+e||""}else{return e}};XMLStringifier.prototype.dtdEntityValue=function(e){return""+e||""};XMLStringifier.prototype.dtdNData=function(e){return""+e||""};XMLStringifier.prototype.convertAttKey="@";XMLStringifier.prototype.convertPIKey="?";XMLStringifier.prototype.convertTextKey="#text";XMLStringifier.prototype.convertCDataKey="#cdata";XMLStringifier.prototype.convertCommentKey="#comment";XMLStringifier.prototype.convertRawKey="#raw";XMLStringifier.prototype.assertLegalChar=function(e){var a;a=e.match(/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/);if(a){throw new Error("Invalid character in string: "+e+" at index "+a.index)}return e};XMLStringifier.prototype.elEscape=function(e){var a;a=this.noDoubleEncoding?/(?!&\S+;)&/g:/&/g;return e.replace(a,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\r/g,"&#xD;")};XMLStringifier.prototype.attEscape=function(e){var a;a=this.noDoubleEncoding?/(?!&\S+;)&/g:/&/g;return e.replace(a,"&amp;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/\t/g,"&#x9;").replace(/\n/g,"&#xA;").replace(/\r/g,"&#xD;")};return XMLStringifier}()}).call(this)},1318:function(e,a,r){(function(){var a,i,extend=function(e,a){for(var r in a){if(n.call(a,r))e[r]=a[r]}function ctor(){this.constructor=e}ctor.prototype=a.prototype;e.prototype=new ctor;e.__super__=a.prototype;return e},n={}.hasOwnProperty;a=r(7608);e.exports=i=function(e){extend(XMLText,e);function XMLText(e,a){XMLText.__super__.constructor.call(this,e);if(a==null){throw new Error("Missing element text")}this.value=this.stringify.eleText(a)}XMLText.prototype.clone=function(){return Object.create(this)};XMLText.prototype.toString=function(e){return this.options.writer.set(e).text(this)};return XMLText}(a)}).call(this)},6752:function(e){(function(){var a,r={}.hasOwnProperty;e.exports=a=function(){function XMLWriterBase(e){var a,i,n,p,o,d,s,l,u;e||(e={});this.pretty=e.pretty||false;this.allowEmpty=(i=e.allowEmpty)!=null?i:false;if(this.pretty){this.indent=(n=e.indent)!=null?n:"  ";this.newline=(p=e.newline)!=null?p:"\n";this.offset=(o=e.offset)!=null?o:0;this.dontprettytextnodes=(d=e.dontprettytextnodes)!=null?d:0}else{this.indent="";this.newline="";this.offset=0;this.dontprettytextnodes=0}this.spacebeforeslash=(s=e.spacebeforeslash)!=null?s:"";if(this.spacebeforeslash===true){this.spacebeforeslash=" "}this.newlinedefault=this.newline;this.prettydefault=this.pretty;l=e.writer||{};for(a in l){if(!r.call(l,a))continue;u=l[a];this[a]=u}}XMLWriterBase.prototype.set=function(e){var a,i,n;e||(e={});if("pretty"in e){this.pretty=e.pretty}if("allowEmpty"in e){this.allowEmpty=e.allowEmpty}if(this.pretty){this.indent="indent"in e?e.indent:"  ";this.newline="newline"in e?e.newline:"\n";this.offset="offset"in e?e.offset:0;this.dontprettytextnodes="dontprettytextnodes"in e?e.dontprettytextnodes:0}else{this.indent="";this.newline="";this.offset=0;this.dontprettytextnodes=0}this.spacebeforeslash="spacebeforeslash"in e?e.spacebeforeslash:"";if(this.spacebeforeslash===true){this.spacebeforeslash=" "}this.newlinedefault=this.newline;this.prettydefault=this.pretty;i=e.writer||{};for(a in i){if(!r.call(i,a))continue;n=i[a];this[a]=n}return this};XMLWriterBase.prototype.space=function(e){var a;if(this.pretty){a=(e||0)+this.offset+1;if(a>0){return new Array(a).join(this.indent)}else{return""}}else{return""}};return XMLWriterBase}()}).call(this)},2958:function(e,a,r){(function(){var a,i,n,p,o,d,s;s=r(8229),o=s.assign,d=s.isFunction;a=r(3730);i=r(7356);p=r(5913);n=r(8601);e.exports.create=function(e,r,i,n){var p,d;if(e==null){throw new Error("Root element needs a name")}n=o({},r,i,n);p=new a(n);d=p.element(e);if(!n.headless){p.declaration(n);if(n.pubID!=null||n.sysID!=null){p.doctype(n)}}return d};e.exports.begin=function(e,r,n){var p;if(d(e)){p=[e,r],r=p[0],n=p[1];e={}}if(r){return new i(e,r,n)}else{return new a(e)}};e.exports.stringWriter=function(e){return new p(e)};e.exports.streamWriter=function(e,a){return new n(e,a)}}).call(this)},8781:(e,a,r)=>{var i=r(5747);var n=r(8761);var p=r(5010);var o=r(4794);var d=r(1669);var s=r(8614).EventEmitter;var l=r(2413).Transform;var u=r(2413).PassThrough;var m=r(2413).Writable;a.open=open;a.fromFd=fromFd;a.fromBuffer=fromBuffer;a.fromRandomAccessReader=fromRandomAccessReader;a.dosDateTimeToDate=dosDateTimeToDate;a.validateFileName=validateFileName;a.ZipFile=ZipFile;a.Entry=Entry;a.RandomAccessReader=RandomAccessReader;function open(e,a,r){if(typeof a==="function"){r=a;a=null}if(a==null)a={};if(a.autoClose==null)a.autoClose=true;if(a.lazyEntries==null)a.lazyEntries=false;if(a.decodeStrings==null)a.decodeStrings=true;if(a.validateEntrySizes==null)a.validateEntrySizes=true;if(a.strictFileNames==null)a.strictFileNames=false;if(r==null)r=defaultCallback;i.open(e,"r",(function(e,n){if(e)return r(e);fromFd(n,a,(function(e,a){if(e)i.close(n,defaultCallback);r(e,a)}))}))}function fromFd(e,a,r){if(typeof a==="function"){r=a;a=null}if(a==null)a={};if(a.autoClose==null)a.autoClose=false;if(a.lazyEntries==null)a.lazyEntries=false;if(a.decodeStrings==null)a.decodeStrings=true;if(a.validateEntrySizes==null)a.validateEntrySizes=true;if(a.strictFileNames==null)a.strictFileNames=false;if(r==null)r=defaultCallback;i.fstat(e,(function(i,n){if(i)return r(i);var o=p.createFromFd(e,{autoClose:true});fromRandomAccessReader(o,n.size,a,r)}))}function fromBuffer(e,a,r){if(typeof a==="function"){r=a;a=null}if(a==null)a={};a.autoClose=false;if(a.lazyEntries==null)a.lazyEntries=false;if(a.decodeStrings==null)a.decodeStrings=true;if(a.validateEntrySizes==null)a.validateEntrySizes=true;if(a.strictFileNames==null)a.strictFileNames=false;var i=p.createFromBuffer(e,{maxChunkSize:65536});fromRandomAccessReader(i,e.length,a,r)}function fromRandomAccessReader(e,a,r,i){if(typeof r==="function"){i=r;r=null}if(r==null)r={};if(r.autoClose==null)r.autoClose=true;if(r.lazyEntries==null)r.lazyEntries=false;if(r.decodeStrings==null)r.decodeStrings=true;var n=!!r.decodeStrings;if(r.validateEntrySizes==null)r.validateEntrySizes=true;if(r.strictFileNames==null)r.strictFileNames=false;if(i==null)i=defaultCallback;if(typeof a!=="number")throw new Error("expected totalSize parameter to be a number");if(a>Number.MAX_SAFE_INTEGER){throw new Error("zip file too large. only file sizes up to 2^52 are supported due to JavaScript's Number type being an IEEE 754 double.")}e.ref();var p=22;var o=65535;var d=Math.min(p+o,a);var s=h(d);var l=a-s.length;readAndAssertNoEof(e,s,0,d,l,(function(o){if(o)return i(o);for(var u=d-p;u>=0;u-=1){if(s.readUInt32LE(u)!==101010256)continue;var m=s.slice(u);var c=m.readUInt16LE(4);if(c!==0){return i(new Error("multi-disk zip files are not supported: found disk number: "+c))}var v=m.readUInt16LE(10);var g=m.readUInt32LE(16);var y=m.readUInt16LE(20);var w=m.length-p;if(y!==w){return i(new Error("invalid comment length. expected: "+w+". found: "+y))}var b=n?decodeBuffer(m,22,m.length,false):m.slice(22);if(!(v===65535||g===4294967295)){return i(null,new ZipFile(e,g,a,v,b,r.autoClose,r.lazyEntries,n,r.validateEntrySizes,r.strictFileNames))}var S=h(20);var _=l+u-S.length;readAndAssertNoEof(e,S,0,S.length,_,(function(p){if(p)return i(p);if(S.readUInt32LE(0)!==117853008){return i(new Error("invalid zip64 end of central directory locator signature"))}var o=readUInt64LE(S,8);var d=h(56);readAndAssertNoEof(e,d,0,d.length,o,(function(p){if(p)return i(p);if(d.readUInt32LE(0)!==101075792){return i(new Error("invalid zip64 end of central directory record signature"))}v=readUInt64LE(d,32);g=readUInt64LE(d,48);return i(null,new ZipFile(e,g,a,v,b,r.autoClose,r.lazyEntries,n,r.validateEntrySizes,r.strictFileNames))}))}));return}i(new Error("end of central directory record signature not found"))}))}d.inherits(ZipFile,s);function ZipFile(e,a,r,i,n,p,o,d,l,u){var m=this;s.call(m);m.reader=e;m.reader.on("error",(function(e){emitError(m,e)}));m.reader.once("close",(function(){m.emit("close")}));m.readEntryCursor=a;m.fileSize=r;m.entryCount=i;m.comment=n;m.entriesRead=0;m.autoClose=!!p;m.lazyEntries=!!o;m.decodeStrings=!!d;m.validateEntrySizes=!!l;m.strictFileNames=!!u;m.isOpen=true;m.emittedError=false;if(!m.lazyEntries)m._readEntry()}ZipFile.prototype.close=function(){if(!this.isOpen)return;this.isOpen=false;this.reader.unref()};function emitErrorAndAutoClose(e,a){if(e.autoClose)e.close();emitError(e,a)}function emitError(e,a){if(e.emittedError)return;e.emittedError=true;e.emit("error",a)}ZipFile.prototype.readEntry=function(){if(!this.lazyEntries)throw new Error("readEntry() called without lazyEntries:true");this._readEntry()};ZipFile.prototype._readEntry=function(){var e=this;if(e.entryCount===e.entriesRead){setImmediate((function(){if(e.autoClose)e.close();if(e.emittedError)return;e.emit("end")}));return}if(e.emittedError)return;var a=h(46);readAndAssertNoEof(e.reader,a,0,a.length,e.readEntryCursor,(function(r){if(r)return emitErrorAndAutoClose(e,r);if(e.emittedError)return;var i=new Entry;var n=a.readUInt32LE(0);if(n!==33639248)return emitErrorAndAutoClose(e,new Error("invalid central directory file header signature: 0x"+n.toString(16)));i.versionMadeBy=a.readUInt16LE(4);i.versionNeededToExtract=a.readUInt16LE(6);i.generalPurposeBitFlag=a.readUInt16LE(8);i.compressionMethod=a.readUInt16LE(10);i.lastModFileTime=a.readUInt16LE(12);i.lastModFileDate=a.readUInt16LE(14);i.crc32=a.readUInt32LE(16);i.compressedSize=a.readUInt32LE(20);i.uncompressedSize=a.readUInt32LE(24);i.fileNameLength=a.readUInt16LE(28);i.extraFieldLength=a.readUInt16LE(30);i.fileCommentLength=a.readUInt16LE(32);i.internalFileAttributes=a.readUInt16LE(36);i.externalFileAttributes=a.readUInt32LE(38);i.relativeOffsetOfLocalHeader=a.readUInt32LE(42);if(i.generalPurposeBitFlag&64)return emitErrorAndAutoClose(e,new Error("strong encryption is not supported"));e.readEntryCursor+=46;a=h(i.fileNameLength+i.extraFieldLength+i.fileCommentLength);readAndAssertNoEof(e.reader,a,0,a.length,e.readEntryCursor,(function(r){if(r)return emitErrorAndAutoClose(e,r);if(e.emittedError)return;var n=(i.generalPurposeBitFlag&2048)!==0;i.fileName=e.decodeStrings?decodeBuffer(a,0,i.fileNameLength,n):a.slice(0,i.fileNameLength);var p=i.fileNameLength+i.extraFieldLength;var d=a.slice(i.fileNameLength,p);i.extraFields=[];var s=0;while(s<d.length-3){var l=d.readUInt16LE(s+0);var u=d.readUInt16LE(s+2);var m=s+4;var c=m+u;if(c>d.length)return emitErrorAndAutoClose(e,new Error("extra field length exceeds extra field buffer size"));var v=h(u);d.copy(v,0,m,c);i.extraFields.push({id:l,data:v});s=c}i.fileComment=e.decodeStrings?decodeBuffer(a,p,p+i.fileCommentLength,n):a.slice(p,p+i.fileCommentLength);i.comment=i.fileComment;e.readEntryCursor+=a.length;e.entriesRead+=1;if(i.uncompressedSize===4294967295||i.compressedSize===4294967295||i.relativeOffsetOfLocalHeader===4294967295){var g=null;for(var s=0;s<i.extraFields.length;s++){var y=i.extraFields[s];if(y.id===1){g=y.data;break}}if(g==null){return emitErrorAndAutoClose(e,new Error("expected zip64 extended information extra field"))}var w=0;if(i.uncompressedSize===4294967295){if(w+8>g.length){return emitErrorAndAutoClose(e,new Error("zip64 extended information extra field does not include uncompressed size"))}i.uncompressedSize=readUInt64LE(g,w);w+=8}if(i.compressedSize===4294967295){if(w+8>g.length){return emitErrorAndAutoClose(e,new Error("zip64 extended information extra field does not include compressed size"))}i.compressedSize=readUInt64LE(g,w);w+=8}if(i.relativeOffsetOfLocalHeader===4294967295){if(w+8>g.length){return emitErrorAndAutoClose(e,new Error("zip64 extended information extra field does not include relative header offset"))}i.relativeOffsetOfLocalHeader=readUInt64LE(g,w);w+=8}}if(e.decodeStrings){for(var s=0;s<i.extraFields.length;s++){var y=i.extraFields[s];if(y.id===28789){if(y.data.length<6){continue}if(y.data.readUInt8(0)!==1){continue}var b=y.data.readUInt32LE(1);if(o.unsigned(a.slice(0,i.fileNameLength))!==b){continue}i.fileName=decodeBuffer(y.data,5,y.data.length,true);break}}}if(e.validateEntrySizes&&i.compressionMethod===0){var S=i.uncompressedSize;if(i.isEncrypted()){S+=12}if(i.compressedSize!==S){var _="compressed/uncompressed size mismatch for stored file: "+i.compressedSize+" != "+i.uncompressedSize;return emitErrorAndAutoClose(e,new Error(_))}}if(e.decodeStrings){if(!e.strictFileNames){i.fileName=i.fileName.replace(/\\/g,"/")}var N=validateFileName(i.fileName,e.validateFileNameOptions);if(N!=null)return emitErrorAndAutoClose(e,new Error(N))}e.emit("entry",i);if(!e.lazyEntries)e._readEntry()}))}))};ZipFile.prototype.openReadStream=function(e,a,r){var i=this;var p=0;var o=e.compressedSize;if(r==null){r=a;a={}}else{if(a.decrypt!=null){if(!e.isEncrypted()){throw new Error("options.decrypt can only be specified for encrypted entries")}if(a.decrypt!==false)throw new Error("invalid options.decrypt value: "+a.decrypt);if(e.isCompressed()){if(a.decompress!==false)throw new Error("entry is encrypted and compressed, and options.decompress !== false")}}if(a.decompress!=null){if(!e.isCompressed()){throw new Error("options.decompress can only be specified for compressed entries")}if(!(a.decompress===false||a.decompress===true)){throw new Error("invalid options.decompress value: "+a.decompress)}}if(a.start!=null||a.end!=null){if(e.isCompressed()&&a.decompress!==false){throw new Error("start/end range not allowed for compressed entry without options.decompress === false")}if(e.isEncrypted()&&a.decrypt!==false){throw new Error("start/end range not allowed for encrypted entry without options.decrypt === false")}}if(a.start!=null){p=a.start;if(p<0)throw new Error("options.start < 0");if(p>e.compressedSize)throw new Error("options.start > entry.compressedSize")}if(a.end!=null){o=a.end;if(o<0)throw new Error("options.end < 0");if(o>e.compressedSize)throw new Error("options.end > entry.compressedSize");if(o<p)throw new Error("options.end < options.start")}}if(!i.isOpen)return r(new Error("closed"));if(e.isEncrypted()){if(a.decrypt!==false)return r(new Error("entry is encrypted, and options.decrypt !== false"))}i.reader.ref();var d=h(30);readAndAssertNoEof(i.reader,d,0,d.length,e.relativeOffsetOfLocalHeader,(function(s){try{if(s)return r(s);var l=d.readUInt32LE(0);if(l!==67324752){return r(new Error("invalid local file header signature: 0x"+l.toString(16)))}var u=d.readUInt16LE(26);var m=d.readUInt16LE(28);var c=e.relativeOffsetOfLocalHeader+d.length+u+m;var h;if(e.compressionMethod===0){h=false}else if(e.compressionMethod===8){h=a.decompress!=null?a.decompress:true}else{return r(new Error("unsupported compression method: "+e.compressionMethod))}var v=c;var g=v+e.compressedSize;if(e.compressedSize!==0){if(g>i.fileSize){return r(new Error("file data overflows file bounds: "+v+" + "+e.compressedSize+" > "+i.fileSize))}}var y=i.reader.createReadStream({start:v+p,end:v+o});var w=y;if(h){var b=false;var S=n.createInflateRaw();y.on("error",(function(e){setImmediate((function(){if(!b)S.emit("error",e)}))}));y.pipe(S);if(i.validateEntrySizes){w=new AssertByteCountStream(e.uncompressedSize);S.on("error",(function(e){setImmediate((function(){if(!b)w.emit("error",e)}))}));S.pipe(w)}else{w=S}w.destroy=function(){b=true;if(S!==w)S.unpipe(w);y.unpipe(S);y.destroy()}}r(null,w)}finally{i.reader.unref()}}))};function Entry(){}Entry.prototype.getLastModDate=function(){return dosDateTimeToDate(this.lastModFileDate,this.lastModFileTime)};Entry.prototype.isEncrypted=function(){return(this.generalPurposeBitFlag&1)!==0};Entry.prototype.isCompressed=function(){return this.compressionMethod===8};function dosDateTimeToDate(e,a){var r=e&31;var i=(e>>5&15)-1;var n=(e>>9&127)+1980;var p=0;var o=(a&31)*2;var d=a>>5&63;var s=a>>11&31;return new Date(n,i,r,s,d,o,p)}function validateFileName(e){if(e.indexOf("\\")!==-1){return"invalid characters in fileName: "+e}if(/^[a-zA-Z]:/.test(e)||/^\//.test(e)){return"absolute path: "+e}if(e.split("/").indexOf("..")!==-1){return"invalid relative path: "+e}return null}function readAndAssertNoEof(e,a,r,i,n,p){if(i===0){return setImmediate((function(){p(null,h(0))}))}e.read(a,r,i,n,(function(e,a){if(e)return p(e);if(a<i){return p(new Error("unexpected EOF"))}p()}))}d.inherits(AssertByteCountStream,l);function AssertByteCountStream(e){l.call(this);this.actualByteCount=0;this.expectedByteCount=e}AssertByteCountStream.prototype._transform=function(e,a,r){this.actualByteCount+=e.length;if(this.actualByteCount>this.expectedByteCount){var i="too many bytes in the stream. expected "+this.expectedByteCount+". got at least "+this.actualByteCount;return r(new Error(i))}r(null,e)};AssertByteCountStream.prototype._flush=function(e){if(this.actualByteCount<this.expectedByteCount){var a="not enough bytes in the stream. expected "+this.expectedByteCount+". got only "+this.actualByteCount;return e(new Error(a))}e()};d.inherits(RandomAccessReader,s);function RandomAccessReader(){s.call(this);this.refCount=0}RandomAccessReader.prototype.ref=function(){this.refCount+=1};RandomAccessReader.prototype.unref=function(){var e=this;e.refCount-=1;if(e.refCount>0)return;if(e.refCount<0)throw new Error("invalid unref");e.close(onCloseDone);function onCloseDone(a){if(a)return e.emit("error",a);e.emit("close")}};RandomAccessReader.prototype.createReadStream=function(e){var a=e.start;var r=e.end;if(a===r){var i=new u;setImmediate((function(){i.end()}));return i}var n=this._readStreamForRange(a,r);var p=false;var o=new RefUnrefFilter(this);n.on("error",(function(e){setImmediate((function(){if(!p)o.emit("error",e)}))}));o.destroy=function(){n.unpipe(o);o.unref();n.destroy()};var d=new AssertByteCountStream(r-a);o.on("error",(function(e){setImmediate((function(){if(!p)d.emit("error",e)}))}));d.destroy=function(){p=true;o.unpipe(d);o.destroy()};return n.pipe(o).pipe(d)};RandomAccessReader.prototype._readStreamForRange=function(e,a){throw new Error("not implemented")};RandomAccessReader.prototype.read=function(e,a,r,i,n){var p=this.createReadStream({start:i,end:i+r});var o=new m;var d=0;o._write=function(r,i,n){r.copy(e,a+d,0,r.length);d+=r.length;n()};o.on("finish",n);p.on("error",(function(e){n(e)}));p.pipe(o)};RandomAccessReader.prototype.close=function(e){setImmediate(e)};d.inherits(RefUnrefFilter,u);function RefUnrefFilter(e){u.call(this);this.context=e;this.context.ref();this.unreffedYet=false}RefUnrefFilter.prototype._flush=function(e){this.unref();e()};RefUnrefFilter.prototype.unref=function(e){if(this.unreffedYet)return;this.unreffedYet=true;this.context.unref()};var c="\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ";function decodeBuffer(e,a,r,i){if(i){return e.toString("utf8",a,r)}else{var n="";for(var p=a;p<r;p++){n+=c[e[p]]}return n}}function readUInt64LE(e,a){var r=e.readUInt32LE(a);var i=e.readUInt32LE(a+4);return i*4294967296+r}var h;if(typeof Buffer.allocUnsafe==="function"){h=function(e){return Buffer.allocUnsafe(e)}}else{h=function(e){return new Buffer(e)}}function defaultCallback(e){if(e)throw e}},2756:(e,a,r)=>{e.exports=require(r.ab+"build/Release/volume.node")},2877:module=>{module.exports=eval("require")("encoding")},8661:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')},2357:e=>{"use strict";e.exports=require("assert")},4293:e=>{"use strict";e.exports=require("buffer")},3129:e=>{"use strict";e.exports=require("child_process")},6417:e=>{"use strict";e.exports=require("crypto")},8614:e=>{"use strict";e.exports=require("events")},5747:e=>{"use strict";e.exports=require("fs")},8605:e=>{"use strict";e.exports=require("http")},7211:e=>{"use strict";e.exports=require("https")},1631:e=>{"use strict";e.exports=require("net")},2087:e=>{"use strict";e.exports=require("os")},5622:e=>{"use strict";e.exports=require("path")},630:e=>{"use strict";e.exports=require("perf_hooks")},4213:e=>{"use strict";e.exports=require("punycode")},2413:e=>{"use strict";e.exports=require("stream")},4304:e=>{"use strict";e.exports=require("string_decoder")},8213:e=>{"use strict";e.exports=require("timers")},4016:e=>{"use strict";e.exports=require("tls")},3867:e=>{"use strict";e.exports=require("tty")},8835:e=>{"use strict";e.exports=require("url")},1669:e=>{"use strict";e.exports=require("util")},8761:e=>{"use strict";e.exports=require("zlib")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var a=__webpack_module_cache__[e];if(a!==undefined){return a.exports}var r=__webpack_module_cache__[e]={id:e,loaded:false,exports:{}};var i=true;try{__webpack_modules__[e].call(r.exports,r,r.exports,__nccwpck_require__);i=false}finally{if(i)delete __webpack_module_cache__[e]}r.loaded=true;return r.exports}(()=>{__nccwpck_require__.nmd=e=>{e.paths=[];if(!e.children)e.children=[];return e}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(2186);const a=__nccwpck_require__(2605);const r=__nccwpck_require__(5747);const i=__nccwpck_require__(5622);const n=__nccwpck_require__(460);const p=process.platform==="darwin"?__nccwpck_require__(1184):{};const o=process.platform==="darwin"?__nccwpck_require__(3202):{};const d=process.platform==="darwin"?__nccwpck_require__(1990):{};const s=__nccwpck_require__(1066);const l=__nccwpck_require__(4523);const u=__nccwpck_require__(5008);const m=__nccwpck_require__(9070);const c=process.env["AUDACITY_BUILD_DIR"];const h=process.env["AUDACITY_BUILD_TYPE"];const v=l.getBuildLevel();const g=process.env["AUDACITY_ARCH"]||"x64";const y=e.getMultilineInput("archs");const w=e.getInput("postfix");if(y.length==0){y.push(g)}const b=e.getInput("apple_codesign_identity");const S=e.getInput("apple_notarization_user_name");const _=e.getInput("apple_notarization_password");const N=e.getInput("apple_notarization_team_id");async function packageAudacity(a){const r=["--build",c,"--target",a,"--config",h,...e.getMultilineInput("cmake_options")];const i=process.platform==="darwin"?10:2;for(let e=1;e<i;e++){try{return await u.execWithLog("cmake",r)}catch(a){u.error(`Packaging attempt #${e} failed: ${a.message}`);await u.sleep(2e3*e)}}return await u.execWithLog("cmake",r)}async function installAudacity(a){const r=i.join(workspaceDir,`.build.${a}`);const n=i.join(workspaceDir,".package","_CPack_Packages",a);const p=["--install",r,"--config",h,"--prefix",n,...e.getMultilineInput("cmake_options")];await u.execWithLog("cmake",p);if(b.length>0){const e=await s.listMacosApps(n);for(const a of e){await d.singApp(a,b)}}return n}async function getBuildSuffix(){if(v==l.Release){return""}const e=new Date;const a=date=[e.getFullYear(),("0"+(e.getMonth()+1)).slice(-2),("0"+e.getDate()).slice(-2)].join("");const r=(await u.getExecOutput("git",["show","-s","--format=%h"])).stdout.trim();return`-${l.getBuildSuffix(v)}-${a}+${r}`}async function packageApp(e,a,r){const n=p.readFileSync(i.join(e,"Contents","Info.plist"));const s=n["CFBundleVersion"].match(/[1-9]+\.[0-9]+\.[0-9]+/)[0];const u=`audacity-macOS-${s}${a}-${await m.archSuffix(e)}.dmg`;const c=i.join(r,u);await o.packageDMG(c,e);if(b.length>0){const e=n["CFBundleIdentifier"];await d.signDMG(c,e,b);if(S!==""&&_!==""&&v!=l.Alpha){await d.notarizeDMG(c,S,_,N)}}}async function run(){try{const e=process.platform==="darwin";const p=e?i.join(workspaceDir,".package"):i.join(c,"package");const o=i.join(p,"_CPack_Packages");if(r.existsSync(o)){await r.promises.rm(o,{recursive:true,force:true})}if(v!=l.Alpha&&process.platform==="win32"){await packageAudacity("innosetup")}if(!e){await packageAudacity("package")}else{for(const e of y){await installAudacity(e)}const e=await s.listMacosApps(o);const a=await getBuildSuffix();if(e.length>1){const a=i.join(o,"universal",i.basename(e[0]));await m.create(a,e);await d.singApp(a,b);e.push(a)}for(const r of e){await packageApp(r,a,p)}}await r.promises.rm(o,{recursive:true,force:true});const h=await r.promises.readdir(p);const g=a.create();for(const e of h){const a=i.extname(e);const r=i.basename(e,a);const o=`${r}${w}`;if(a===".zip"){await n(i.join(p,e),{dir:p});const a=await s.listDirectory(i.join(p,r));u.log(a);await g.uploadArtifact(o,a,p)}else{await g.uploadArtifact(o,[i.join(p,e)],p)}}}catch(a){u.error(a.message);e.setFailed(a.message)}}run()})();module.exports=__webpack_exports__})();